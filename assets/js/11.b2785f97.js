(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{367:function(t,e,a){"use strict";a.r(e);var s=a(42),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006y8mN6ly1g9bt5qlkq5j31lv0u0kii.jpg",alt:""}})]),t._v(" "),a("p",[t._v("本文以macOS Mojave为例进行说明，包含内容较多，主要适合较新主板的安装。")]),t._v(" "),a("h1",{attrs:{id:"虚拟机安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机安装"}},[t._v("#")]),t._v(" 虚拟机安装")]),t._v(" "),a("p",[t._v("安装Vmware Workstation Player后，打开任务管理器，切换到服务选项卡，停止所有与VM有关的服务。")]),t._v(" "),a("p",[t._v("通过以下链接下载Vmware虚拟机苹果破解补丁unlocker，解压后右键以管理员身份运行win-install，完成虚拟机对macOS系统限制的破解。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/theJaxon/unlocker/releases\n")])])]),a("p",[t._v("打开Vmware Workstation Player，创建新虚拟机，系统选择Mac OS X，安装光盘选择Mac OS X的iso或cdr镜像文件，注意不能是dmg格式。cdr格式的可用镜像示例如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("链接 / https://pan.baidu.com/s/13rD1YbYwSKSDVhIxoUVxHw\n提取码 / 4nii\n")])])]),a("p",[t._v("创建并完成虚拟机内Mac的安装，注意用户密码不能为空。安装完成后，在虚拟机菜单上点击"),a("code",[t._v("安装Vmware Tools for Mac")]),t._v("，即可使Mac满屏显示。")]),t._v(" "),a("p",[t._v("点击虚拟机选项-共享文件夹，勾选"),a("code",[t._v("总是启用")]),t._v("并设置好共享文件夹，即可完成Windows和Mac的文件互通。")]),t._v(" "),a("h1",{attrs:{id:"硬盘安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#硬盘安装"}},[t._v("#")]),t._v(" 硬盘安装")]),t._v(" "),a("h2",{attrs:{id:"记录硬件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#记录硬件配置"}},[t._v("#")]),t._v(" 记录硬件配置")]),t._v(" "),a("p",[t._v("在Windows下，右键点击此电脑，选择管理-设备管理器，得到设备清单。在某设备上点击属性-详细信息，在属性下拉栏选择硬件ID，记录下VID和PID。VID即Vendor ID，指供应商ID，在Windows下以"),a("code",[t._v("VID_")]),t._v("显示。PID即Device ID，指设备ID，在Windows下以"),a("code",[t._v("PID_")]),t._v("显示。")]),t._v(" "),a("p",[t._v("可通过以下链接查询设备名称与PID的关系。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Intel\nhttp://pci-ids.ucw.cz/read/PC/8086\n\n# AMD\nhttp://pci-ids.ucw.cz/read/PC/1022\n\n# Nvidia\nhttp://pci-ids.ucw.cz/read/PC/10de\n")])])]),a("p",[t._v("Mac对Intel CPU基本兼容，对AMD CPU需要进一步处理。本教程仅讨论Intel CPU的情况。")]),t._v(" "),a("p",[t._v("对于笔记本，主要记录显卡、声卡、网卡、键盘、触控板和蓝牙的型号。以本机为例，型号为华硕FL8000U，硬件基本信息如下。需要注意的是，BIOS类型应为UEFI。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("型号")]),t._v(" "),a("th",[t._v("Device ID")]),t._v(" "),a("th",[t._v("Vendor ID")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("CPU")]),t._v(" "),a("td",[t._v("Intel Core i7-8550U（Kaby-Lake）")]),t._v(" "),a("td",[t._v("/")]),t._v(" "),a("td",[t._v("/")])]),t._v(" "),a("tr",[a("td",[t._v("核心显卡")]),t._v(" "),a("td",[t._v("Intel UHD Graphics 620")]),t._v(" "),a("td",[t._v("5917")]),t._v(" "),a("td",[t._v("8086")])]),t._v(" "),a("tr",[a("td",[t._v("独立显卡")]),t._v(" "),a("td",[t._v("NVIDIA GeForce 940MX")]),t._v(" "),a("td",[t._v("134D")]),t._v(" "),a("td",[t._v("10DE")])]),t._v(" "),a("tr",[a("td",[t._v("声卡")]),t._v(" "),a("td",[t._v("Realtek ALC 294")]),t._v(" "),a("td",[t._v("0294")]),t._v(" "),a("td",[t._v("10EC")])]),t._v(" "),a("tr",[a("td",[t._v("有线网卡")]),t._v(" "),a("td",[t._v("Realtek RTL8111")]),t._v(" "),a("td",[t._v("/")]),t._v(" "),a("td",[t._v("/")])]),t._v(" "),a("tr",[a("td",[t._v("无线网卡")]),t._v(" "),a("td",[t._v("Atheros AR9565")]),t._v(" "),a("td",[t._v("0036")]),t._v(" "),a("td",[t._v("168C")])]),t._v(" "),a("tr",[a("td",[t._v("键盘")]),t._v(" "),a("td",[t._v("PS2键盘")]),t._v(" "),a("td",[t._v("/")]),t._v(" "),a("td",[t._v("/")])]),t._v(" "),a("tr",[a("td",[t._v("触摸板")]),t._v(" "),a("td",[t._v("I2C触摸板")]),t._v(" "),a("td",[t._v("/")]),t._v(" "),a("td",[t._v("/")])]),t._v(" "),a("tr",[a("td",[t._v("蓝牙")]),t._v(" "),a("td",[t._v("Atheros Bluetooth 4.0")]),t._v(" "),a("td",[t._v("3018")]),t._v(" "),a("td",[t._v("04CA")])])])]),t._v(" "),a("h2",{attrs:{id:"安装包下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装包下载"}},[t._v("#")]),t._v(" 安装包下载")]),t._v(" "),a("h3",{attrs:{id:"通过链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过链接"}},[t._v("#")]),t._v(" 通过链接")]),t._v(" "),a("p",[t._v("可通过黑果小兵的博客下载，镜像带引导。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://blog.daliansky.net/categories/%E4%B8%8B%E8%BD%BD/%E9%95%9C%E5%83%8F/\n")])])]),a("p",[t._v("也可在Mac下也可通过以下链接，通过App Store下载。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://apps.apple.com/cn/app/macos-mojave/id1398502828?mt=12\n")])])]),a("p",[t._v("也可通过以下链接。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("链接 / https://cloud.189.cn/t/FFvIV3aeQZRz\n提取码 / ps0j\n")])])]),a("h3",{attrs:{id:"通过macrecovery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过macrecovery"}},[t._v("#")]),t._v(" 通过macrecovery")]),t._v(" "),a("p",[t._v("以Windows为例，下载OpenCore，链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/OpenCorePkg\n")])])]),a("p",[t._v("解压后打开命令提示符，路径切换到解压文件夹内的Utilities/macrecovery，然后通过以下命令进行下载。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Lion\npython macrecovery.py -b Mac-2E6FAB96566FE58C -m 00000000000F25Y00 download\npython macrecovery.py -b Mac-C3EC7CD22292981F -m 00000000000F0HM00 download\n\n# Mountain Lion\npython macrecovery.py -b Mac-7DF2A3B5E5D671ED -m 00000000000F65100 download\n\n# Mavericks\npython macrecovery.py -b Mac-F60DEB81FF30ACF6 -m 00000000000FNN100 download\n\n# Yosemite\npython macrecovery.py -b Mac-E43C1C25D4880AD6 -m 00000000000GDVW00 download\n\n# El Capitan\npython macrecovery.py -b Mac-FFE5EF870D7BA81A -m 00000000000GQRX00 download\n\n# Sierra\npython macrecovery.py -b Mac-77F17D7DA9285301 -m 00000000000J0DX00 download\n\n# High Sierra\npython macrecovery.py -b Mac-7BA5B2D9E42DDD94 -m 00000000000J80300 download\npython macrecovery.py -b Mac-BE088AF8C5EB4FA2 -m 00000000000J80300 download\n\n# Mojave\npython macrecovery.py -b Mac-7BA5B2DFE22DDD8C -m 00000000000KXPG00 download\n\n# Catalina\npython macrecovery.py -b Mac-00BE6ED71E35EB86 -m 00000000000000000 download\n\n# Big Sur\npython macrecovery.py -b Mac-E43C1C25D4880AD6 -m 00000000000000000 download\n")])])]),a("h3",{attrs:{id:"通过gibmacos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过gibmacos"}},[t._v("#")]),t._v(" 通过GibMacOS")]),t._v(" "),a("p",[t._v("对于10.13及以上系统，可通过GibMacOS下载原版镜像，注意不带引导。运行gibMacOS.command即可，链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/corpnewt/gibMacOS\n")])])]),a("p",[t._v("对于Big Sur，下载后在Mac下打开installAssistant.pkg，安装到当前系统盘，即可在应用程序中找到安装包程序。对于Catalina及更早版本，则应当运行BuildmacOSInstallApp.command以得到安装包，然后将安装包拖入应用程序文件夹。")]),t._v(" "),a("h2",{attrs:{id:"硬盘分区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#硬盘分区"}},[t._v("#")]),t._v(" 硬盘分区")]),t._v(" "),a("p",[t._v("由于macOS只能以EFI方式引导，因此需确保分区表为GPT格式。")]),t._v(" "),a("p",[t._v("可在Windows下打开DiskGenius，确认分区表为GUID格式，若不是，则在硬盘上单击右键，选择"),a("code",[t._v("转换分区表类型为GUID格式")]),t._v("。确保硬盘有一个200-300M的EFI分区，若没有则需要新建，一般新建到硬盘最前部。提前备份EFI内的文件至U盘，防止安装Mac时引导丢失。为Mac的安装划出50G以上的分区，格式化为APFS。")]),t._v(" "),a("p",[t._v("若用Mac进行格式化，则格式化为GUID分区表时会自动生成一个200MB的EFI分区。")]),t._v(" "),a("h2",{attrs:{id:"引导器下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引导器下载"}},[t._v("#")]),t._v(" 引导器下载")]),t._v(" "),a("p",[t._v("黑苹果需要特殊的引导器进行引导。此处使用Clover，链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 普通版\nhttps://github.com/Dids/clover-builder/releases\nhttps://sourceforge.net/projects/cloverefiboot/\n\n# 特别版\nhttps://github.com/chris1111/CloverBootloader/releases\nhttps://drive.google.com/drive/folders/0B661P9Kp9bPAdUViMVFYRW9KWFE\n")])])]),a("p",[t._v("建议下载pkg或ISO版本，其中对于ISO版本，可用解压软件打开，提取Clover启动所需要的完整EFI文件夹，以便于后续安装。该文件夹的目录层级如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("└── EFI\n   ├── Boot\n   └── CLOVER\n        ├── ACPI\n        ├── drivers\n        ├── ...\n        ├── CLOVERX64.efi\n        └── config.plist\n")])])]),a("h2",{attrs:{id:"安装盘制作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装盘制作"}},[t._v("#")]),t._v(" 安装盘制作")]),t._v(" "),a("p",[t._v("此处以Majove 10.14.3为例。插入容量大于8G的U盘，提前备份好U盘资料。")]),t._v(" "),a("h3",{attrs:{id:"对于从黑果小兵下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于从黑果小兵下载"}},[t._v("#")]),t._v(" 对于从黑果小兵下载")]),t._v(" "),a("p",[t._v("若为Windows，且下载的镜像为带引导的dmg格式，则以管理员身份打开TransMac，在插入的U盘上点击右键，选择Restore with Disk Image，点击Yes以抹掉资料，选择dmg镜像，等待写入完成。也可通过Etcher完成以上操作。")]),t._v(" "),a("p",[t._v("由于黑果小兵的安装盘已带引导器，故可以直接进行安装步骤。")]),t._v(" "),a("h3",{attrs:{id:"对于从macrecovery下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于从macrecovery下载"}},[t._v("#")]),t._v(" 对于从macrecovery下载")]),t._v(" "),a("p",[t._v("下载完成后将获得BaseSystem或RecoveryImage文件。将USB格式化为FAT32，在根目录新建名为com.apple.recovery.boot的文件夹并复制下载内容至该文件夹，注意.dmg和.chunklist文件都要复制。然后复制从Clover提取的EFI文件夹到根目录，保持与com.apple.recovery.boot文件夹同级。")]),t._v(" "),a("h3",{attrs:{id:"对于从gibmacos下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于从gibmacos下载"}},[t._v("#")]),t._v(" 对于从GibMacOS下载")]),t._v(" "),a("p",[t._v("若为Mac，且获取的是不带引导的系统app安装包，则先将USB进行分区，分区表为GUID，创建一个大小为200-300MB的EFI分区，剩余空间则用于安装程序。")]),t._v(" "),a("p",[t._v("打开终端并输入以下命令，注意将MyVolume替换为USB磁盘名称。完成后复制从Clover提取的EFI文件夹到EFI磁盘。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 以Mojave为例\nsudo /Applications/Install\\ macOS\\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume\n")])])]),a("p",[t._v("若为Windows，则通过MakeInstall.bat进行制作，注意该脚本将默认创建MBR引导。")]),t._v(" "),a("details",[a("summary",[t._v("【进阶】用BaseSystem.dmg制作安装盘")]),t._v(" "),a("p",[t._v("不适用于High Sierra即以上系统。")]),t._v(" "),a("p",[t._v("BaseSystem.dmg可在安装包上点击右键，选择显示包内容，然后进入/Contents/Shared Support/即可找到。复制到桌面后，打开终端并输入以下命令以制作。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# disk1s2为USB设备路径，按照实际情况更改\nsudo asr restore -source ~/Desktop/BaseSystem.dmg -target /dev/disk1s2 --erase\n")])])])]),t._v(" "),a("h2",{attrs:{id:"bios设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bios设置"}},[t._v("#")]),t._v(" BIOS设置")]),t._v(" "),a("h3",{attrs:{id:"全局设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局设置"}},[t._v("#")]),t._v(" 全局设置")]),t._v(" "),a("p",[t._v("有AHCI的均选"),a("code",[t._v("AHCI")]),t._v("，开启支持UEFI启动。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("选项")]),t._v(" "),a("th",[t._v("本机BIOS地址")]),t._v(" "),a("th",[t._v("设定值")]),t._v(" "),a("th",[t._v("设置")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Fast Boot")]),t._v(" "),a("td",[t._v("0xF7A")]),t._v(" "),a("td",[t._v("0x0")]),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("快速启动")])]),t._v(" "),a("tr",[a("td",[t._v("Secure Boot")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("安全启动")])]),t._v(" "),a("tr",[a("td",[t._v("CFG Lock")]),t._v(" "),a("td",[t._v("0x527")]),t._v(" "),a("td",[t._v("0x0")]),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("CFG锁（MSR 0xE2写入保护）")])]),t._v(" "),a("tr",[a("td",[t._v("Vt-d")]),t._v(" "),a("td",[t._v("0x7EC")]),t._v(" "),a("td",[t._v("0x0")]),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("直接I/O访问的VT虚拟化技术")])]),t._v(" "),a("tr",[a("td",[t._v("CSM")]),t._v(" "),a("td",[t._v("0x1032")]),t._v(" "),a("td",[t._v("0x0")]),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("兼容性支持模块（如果看到乱码则启用）")])]),t._v(" "),a("tr",[a("td",[t._v("Intel SGX")]),t._v(" "),a("td",[t._v("0x5DC")]),t._v(" "),a("td",[t._v("0x0")]),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("Intel架构新扩展")])]),t._v(" "),a("tr",[a("td",[t._v("IO Serial Port")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("串行端口，打开可能会引起睡眠死机问题")])]),t._v(" "),a("tr",[a("td",[t._v("LAN/WLAN switching")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("LAN/WLAN切换")])]),t._v(" "),a("tr",[a("td",[t._v("Extended Idle Power States")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("扩展空闲电源状态")])]),t._v(" "),a("tr",[a("td",[t._v("Wake on LAN/WLAN/WWAN")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("LAN/WLAN/WWAN唤醒")])]),t._v(" "),a("tr",[a("td",[t._v("Wake on USB")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("USB唤醒")])]),t._v(" "),a("tr",[a("td",[t._v("Firewire/IEEE 1394")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("火线/IEEE 1394设备")])]),t._v(" "),a("tr",[a("td",[t._v("USB 3.0")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("安装好系统后可以开启")])]),t._v(" "),a("tr",[a("td",[t._v("TMP/Security Chips/Security modules")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td",[t._v("安全模块")])]),t._v(" "),a("tr",[a("td",[t._v("VT-x")]),t._v(" "),a("td",[t._v("/")]),t._v(" "),a("td",[t._v("/")]),t._v(" "),a("td",[t._v("Enabled")]),t._v(" "),a("td",[t._v("英特尔虚拟化技术")])]),t._v(" "),a("tr",[a("td",[t._v("Above 4G decoding")]),t._v(" "),a("td",[t._v("0x7ED")]),t._v(" "),a("td",[t._v("0x1")]),t._v(" "),a("td",[t._v("Enabled")]),t._v(" "),a("td",[t._v("大于4G地址空间解码")])]),t._v(" "),a("tr",[a("td",[t._v("Hyper Threading")]),t._v(" "),a("td",[t._v("0x4F0")]),t._v(" "),a("td",[t._v("0x1")]),t._v(" "),a("td",[t._v("Enabled")]),t._v(" "),a("td",[t._v("处理器超线程")])]),t._v(" "),a("tr",[a("td",[t._v("Execute Disable Bit")]),t._v(" "),a("td",[t._v("0x4E9")]),t._v(" "),a("td",[t._v("0x1")]),t._v(" "),a("td",[t._v("Enabled")]),t._v(" "),a("td",[t._v("执行禁止位")])]),t._v(" "),a("tr",[a("td",[t._v("EHCI Hand-off")]),t._v(" "),a("td",[t._v("0x2")]),t._v(" "),a("td",[t._v("0x1")]),t._v(" "),a("td",[t._v("Enabled")]),t._v(" "),a("td",[t._v("接手EHCI控制")])]),t._v(" "),a("tr",[a("td",[t._v("XHCI Hand-off")]),t._v(" "),a("td",[t._v("0x1B")]),t._v(" "),a("td",[t._v("0x1")]),t._v(" "),a("td",[t._v("Enabled")]),t._v(" "),a("td",[t._v("接手XHCI控制")])]),t._v(" "),a("tr",[a("td",[t._v("USB Hand-off")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Enabled")]),t._v(" "),a("td",[t._v("接手USB控制（打开后则无需ReleaseUsbOwnership/Fixownership）")])]),t._v(" "),a("tr",[a("td",[t._v("Launch Hotkeys without Fn keypress")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Enabled")]),t._v(" "),a("td",[t._v("对于Skylake和KabyLake平台")])]),t._v(" "),a("tr",[a("td",[t._v("USB Legacy support")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Enable")]),t._v(" "),a("td",[t._v("旧版USB支持")])]),t._v(" "),a("tr",[a("td",[t._v("OS type")]),t._v(" "),a("td",[t._v("/")]),t._v(" "),a("td",[t._v("/")]),t._v(" "),a("td",[t._v("Windows 8.1/10")]),t._v(" "),a("td",[t._v("操作系统类型Windows 8.1/10")])]),t._v(" "),a("tr",[a("td",[t._v("Controller Mode")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("AHCI mode")]),t._v(" "),a("td",[t._v("硬盘模式")])]),t._v(" "),a("tr",[a("td",[t._v("Thunderbolt Support")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Intel Platform Trust")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Disabled")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"显卡设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显卡设置"}},[t._v("#")]),t._v(" 显卡设置")]),t._v(" "),a("p",[t._v("若有Nvidia/AMD的显卡，则主显示器应设置为PEG或PCIE，并禁用与Intel显卡有关的选项（Hybrid Graphics/Dual Graphics/DVMT size等）。")]),t._v(" "),a("p",[t._v("若有Intel的显卡，则将DVMT设置为64MB或更大。")]),t._v(" "),a("h2",{attrs:{id:"正式安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正式安装"}},[t._v("#")]),t._v(" 正式安装")]),t._v(" "),a("p",[t._v("BIOS中启动顺序把UEFI启动的U盘设为第一，在弹出的Clover界面选择Boot OS X Install from Install macOS Majove，稍等片刻进入安装界面。")]),t._v(" "),a("p",[t._v("在macOS实用工具中选择"),a("code",[t._v("磁盘工具")]),t._v("，点击左侧按钮选择"),a("code",[t._v("显示所有设备")]),t._v("，选择之前分好的Mac安装盘，点击抹掉，并选择格式为APFS。返回安装界面，选择刚才格式化好的盘进行安装，等待安装完成。")]),t._v(" "),a("p",[t._v("重启时需继续从U盘启动，Clover界面中选择macOS的安装盘，进入欢迎界面后注意用户密码不能为空且跳过iCloud设置。正常进入黑苹果桌面后不要登录iCloud、iMessage、FaceTime。")]),t._v(" "),a("p",[t._v("若在跑代码的过程中发生错误，则根据常见问题进行排除。")]),t._v(" "),a("h2",{attrs:{id:"本地引导"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地引导"}},[t._v("#")]),t._v(" 本地引导")]),t._v(" "),a("h3",{attrs:{id:"clover安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clover安装"}},[t._v("#")]),t._v(" Clover安装")]),t._v(" "),a("p",[t._v("在Mac下打开Clover的pkg安装包，同意协议后点击自定，勾选安装在Clover到EFI分区、UEFI Drivers。")]),t._v(" "),a("p",[t._v("安装完成后使用Clover Configurator挂载EFI分区，并打开EFI/CLOVER/kexts，只留Others文件夹，其余删除。打开Others文件夹，只留VirtualSMC.kext、WhatEverGreen.kext和Lilu.kext。")]),t._v(" "),a("p",[t._v("然后打开EFI/CLOVER/DRIVER64UEFI，删除SMCHelper-64.efi并复制VirtualSMC.efi到此目录下。")]),t._v(" "),a("p",[t._v("目录层级如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("├── ACPI\n├── CLOVERX64.efi\n├── config.plist\n├── drivers\n│   └── UEFI\n│       ├── ApfsDriverLoader.efi\n│       ├── AudioDxe.efi\n│       ├── DataHubDxe.efi\n│       ├── FSInject.efi\n│       ├── HFSPlus.efi\n│       ├── OpenRuntime.efi\n│       └── VirtualSmc.efi\n├── kexts\n    └── Other\n        ├── Lilu.kext\n        ├── VirtualSMC.kext\n        └── WhateverGreen.kext\n")])])]),a("h3",{attrs:{id:"clover配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clover配置"}},[t._v("#")]),t._v(" Clover配置")]),t._v(" "),a("p",[t._v("用Clover Configurator打开config.plist，按下列设置进行修改。")]),t._v(" "),a("h4",{attrs:{id:"acpi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#acpi"}},[t._v("#")]),t._v(" ACPI")]),t._v(" "),a("p",[t._v("将Fixs下所有选项取消勾选（1和2两个页面的选项都要取消），并添加以下更名补丁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: change _DSM to XDSM\nFind: 5F44534D\nReplace: 5844534D\n")])])]),a("h4",{attrs:{id:"boot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boot"}},[t._v("#")]),t._v(" Boot")]),t._v(" "),a("p",[t._v("Arguments下勾选Verbose（-v）、nv_disable=1、dart=0，其余不勾选。")]),t._v(" "),a("h4",{attrs:{id:"grpahics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grpahics"}},[t._v("#")]),t._v(" Grpahics")]),t._v(" "),a("p",[t._v("取消勾选Inject Intel、Inject EDID。")]),t._v(" "),a("h4",{attrs:{id:"devices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#devices"}},[t._v("#")]),t._v(" Devices")]),t._v(" "),a("p",[t._v("在Audio的Inject下拉菜单选择No，把下方Arbitrary、Properties和Add Properties所有内容删掉。")]),t._v(" "),a("h3",{attrs:{id:"进入系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进入系统"}},[t._v("#")]),t._v(" 进入系统")]),t._v(" "),a("p",[t._v("退出Clover Configurator，保存更改后拔出U盘并重启，在BIOS下应当多出一项UEFI OS，进入后选择macOS安装盘启动。此时已完成Clover引导器的安装，可以脱离U盘引导。")]),t._v(" "),a("p",[t._v("若Windows引导丢失，将备份好的EFI/BOOT中的Microsoft文件夹复制到EFI分区中的EFI/BOOT，与Clover文件夹同级即可。")]),t._v(" "),a("h2",{attrs:{id:"驱动修补"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#驱动修补"}},[t._v("#")]),t._v(" 驱动修补")]),t._v(" "),a("p",[t._v("Mac的驱动以Kernel Extensions（kexts）形式存在。系统的kexts存放于/System/Library/Extentions（SLE）或/Library/Extentions（LE），其中SLE为系统kexts的主要放置路径，LE为系统拓展kexts放置路径。kexts内部的dsYM是签名文件，仅用于调试目的。")]),t._v(" "),a("p",[t._v("一般不建议修改SLE或LE目录。若需将驱动装入SLE或LE，可通过Kext Utility（在Catalina下需先解锁系统分区）或Hackintool。以Hackintool为例，在Hackintool的"),a("code",[t._v("工具")]),t._v("选项卡下点击下方的小屋按钮即可。")]),t._v(" "),a("h3",{attrs:{id:"显卡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显卡"}},[t._v("#")]),t._v(" 显卡")]),t._v(" "),a("p",[t._v("VGA在Mac中不可使用。驱动显卡前确保kexts文件夹内有Lilu.kext和WhateverGreen.kext。")]),t._v(" "),a("h4",{attrs:{id:"选择显卡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择显卡"}},[t._v("#")]),t._v(" 选择显卡")]),t._v(" "),a("p",[t._v("在DSDT的PCI0设备目录下，Intel显卡拥有关键字"),a("code",[t._v("Name (_ADR, 0x00010000)")]),t._v("。Mac原生支持Intel显卡，但需要进行缓冲帧修补。")]),t._v(" "),a("p",[t._v("对于笔记本而言，如果独显不与核显绑定，即独显本身可以独立工作，则不需要屏蔽独显，可从BIOS层面关闭核显，并寻找独显驱动。该情况能够存在的必要条件是MUX芯片存在，但大多数笔记本电脑都没有该芯片。包含该芯片的笔记本列表可参照以下表格。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("设备")]),t._v(" "),a("th",[t._v("CPU")]),t._v(" "),a("th",[t._v("dGPU直通")]),t._v(" "),a("th",[t._v("iGPU直通")]),t._v(" "),a("th",[t._v("eGPU直通")]),t._v(" "),a("th",[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Razer Blade 15 (2018 Basic)")]),t._v(" "),a("td",[t._v("Intel Core i7-8750H")]),t._v(" "),a("td",[t._v("GTX 1060 Mobile with Max-Q design (6GB)"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Intel UHD Graphics 630"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td",[t._v("GTX 970"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下大概能工作")]),t._v(" "),a("td",[t._v("支持TB3 eGPU")])]),t._v(" "),a("tr",[a("td",[t._v("Gigabyte P35X v4")]),t._v(" "),a("td",[t._v("Intel Core i7-5700HQ")]),t._v(" "),a("td",[t._v("GTX 980M (8GB)"),a("br"),t._v("Windows下工作；Linux下未知")]),t._v(" "),a("td",[t._v("Intel HD Graphics 5600"),a("br"),t._v("Windows下工作；Linux下未知")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("需要修改的UEFI/BIOS（禁用Secure Boot）")])]),t._v(" "),a("tr",[a("td",[t._v("MSI GF72 8RE-032")]),t._v(" "),a("td",[t._v("Intel Core i7-8750H")]),t._v(" "),a("td",[t._v("GTX 1060 Mobile (6GB)"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Intel UHD Graphics 630"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("HP Pavilion G6-2348SG")]),t._v(" "),a("td",[t._v("Intel Core i7 3632QM")]),t._v(" "),a("td",[t._v("AMD Radeon HD 7670M"),a("br"),t._v("Windows下不可能；Linux下不可能")]),t._v(" "),a("td",[t._v("Intel HD Graphics 4000"),a("br"),t._v("Windows下不支持4代及更早的Intel CPU；Linux下不支持4代及更早的Intel CPU")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ASUS TUF Gaming FX505DY")]),t._v(" "),a("td",[t._v("AMD Ryzen 5 3550H")]),t._v(" "),a("td",[t._v("AMD Radeon RX 560X (4GB)"),a("br"),t._v("Windows下工作，但AMD驱动会遇到43错误；Linux下能工作")]),t._v(" "),a("td",[t._v("AMD Radeon Vega 8"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ASUS ROG G751JY")]),t._v(" "),a("td",[t._v("Intel Core i7-4710HQ")]),t._v(" "),a("td",[t._v("GTX 980M (4GB)"),a("br"),t._v("Windows下不可能；Linux下不可能")]),t._v(" "),a("td",[t._v("Intel HD Graphics 4600"),a("br"),t._v("Windows下不支持4代及更早的Intel CPU；Linux下不支持4代及更早的Intel CPU")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("iGPU被禁用，且没有UEFI选项开启")])]),t._v(" "),a("tr",[a("td",[t._v("ASUS G752VS-BA329T")]),t._v(" "),a("td",[t._v("Intel Core i7-7700HQ")]),t._v(" "),a("td",[t._v("GTX 1070 Mobile (8GB)"),a("br"),t._v("Windows下不可能；Linux下不可能")]),t._v(" "),a("td",[t._v("Intel UHD Graphics 630"),a("br"),t._v("Windows下不可能；Linux下不可能")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("iGPU被禁用，且没有UEFI选项开启")])]),t._v(" "),a("tr",[a("td",[t._v("ASUS ROG G551JW")]),t._v(" "),a("td",[t._v("Intel Core i7-4720HQ")]),t._v(" "),a("td",[t._v("GTX 960M (2GB/4GB DDR3)"),a("br"),t._v("Windows下工作；Linux下未知")]),t._v(" "),a("td",[t._v("Intel HD Graphics 4600"),a("br"),t._v("Windows下不支持4代及更早的Intel CPU；Linux下不支持4代及更早的Intel CPU")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ASUS G751JM")]),t._v(" "),a("td",[t._v("Intel Core i7-4710HQ")]),t._v(" "),a("td",[t._v("GTX 860M (2GB)"),a("br"),t._v("Windows下工作；Linux下未知")]),t._v(" "),a("td",[t._v("Intel HD Graphics 4600"),a("br"),t._v("Windows下不支持4代及更早的Intel CPU；Linux下不支持4代及更早的Intel CPU")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ASUS X550VX")]),t._v(" "),a("td",[t._v("Intel Core i5-6300HQ")]),t._v(" "),a("td",[t._v("GTX 950M (2GB)"),a("br"),t._v("Windows下工作；Linux下未知")]),t._v(" "),a("td",[t._v("Intel HD Graphics 530"),a("br"),t._v("Windows下未知；Linux下未知")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("MSI GS63VR 7RF REV:1.0")]),t._v(" "),a("td",[t._v("Intel Core i7-7700HQ")]),t._v(" "),a("td",[t._v("GTX 1060 Mobile (6GB)"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下能工作")]),t._v(" "),a("td",[t._v("Intel HD Graphics 630"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("MSI GS60-040XFR")]),t._v(" "),a("td",[t._v("Intel Core i7-4720HQ")]),t._v(" "),a("td",[t._v("GTX 970M (3GB)"),a("br"),t._v("Windows下工作；Linux下未知")]),t._v(" "),a("td",[t._v("Intel HD Graphics 4600"),a("br"),t._v("Windows下不支持4代及更早的Intel CPU；Linux下不支持4代及更早的Intel CPU")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("MSI GS60 2PC")]),t._v(" "),a("td",[t._v("Intel Core i7-4720HQ")]),t._v(" "),a("td",[t._v("GTX 860M (2GB)"),a("br"),t._v("Windows下工作；Linux下未知")]),t._v(" "),a("td",[t._v("Intel HD Graphics 4600"),a("br"),t._v("Windows下不支持4代及更早的Intel CPU；Linux下不支持4代及更早的Intel CPU")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("MSI GT70 2PE Dominator Pro")]),t._v(" "),a("td",[t._v("Intel Core i7-4800MQ")]),t._v(" "),a("td",[t._v("GTX 880M (GDDR5 8GB/4GB)"),a("br"),t._v("Windows下工作；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Intel HD Graphics 4600 "),a("br"),t._v("Windows下不支持4代及更早的Intel CPU；Linux下不支持4代及更早的Intel CPU")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("dGPU直通需要SeaBIOS而不是UEFI（OVMF）")])]),t._v(" "),a("tr",[a("td",[t._v("Gigabyte Aero 14")]),t._v(" "),a("td",[t._v("Intel Core™ i7-7700HQ")]),t._v(" "),a("td",[t._v("GTX 1050 Ti (4GB)"),a("br"),t._v("Windows下工作；Linux下未知")]),t._v(" "),a("td",[t._v("Intel HD Graphics 630"),a("br"),t._v("Windows下工作；Linux下未知")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Gigabyte Aero 15X v8")]),t._v(" "),a("td",[t._v("Intel Core i7-8750H")]),t._v(" "),a("td",[t._v("GTX 1070 with Max-Q design (8GB)"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下能工作")]),t._v(" "),a("td",[t._v("Intel UHD Graphics 630"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Lenovo ThinkPad P51")]),t._v(" "),a("td",[t._v("Intel Core i7-7700HQ")]),t._v(" "),a("td",[t._v("NVIDIA Quadro M1200 (4GB)"),a("br"),t._v("Windows下未知；Linux下能工作")]),t._v(" "),a("td",[t._v("Intel UHD Graphics 630"),a("br"),t._v("Windows下未知；Linux下能工作")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("可使用Intel GVT-g以使两张卡同时通过，Bumblebee可在访客模式下使用")])]),t._v(" "),a("tr",[a("td",[t._v("Lenovo Legion Y7000")]),t._v(" "),a("td",[t._v("Intel Core i7-8750H")]),t._v(" "),a("td",[t._v("GTX 1060 Mobile (6GB)"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Intel UHD Graphics 630"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Dell XPS 15 9550")]),t._v(" "),a("td",[t._v("Intel Core i7-6700HQ")]),t._v(" "),a("td",[t._v("GTX 960M (2GB)"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Intel HD Graphics 530"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Dell XPS 15 9570")]),t._v(" "),a("td",[t._v("Intel Core i7-8750H")]),t._v(" "),a("td",[t._v("GTX 1050Ti (4GB)"),a("br"),t._v("Windows下工作；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Intel UHD Graphics 630"),a("br"),t._v("Windows下工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Dell Precision 7510")]),t._v(" "),a("td",[t._v("Intel Xeon E3-1200 v5")]),t._v(" "),a("td",[t._v("Nvidia Quadro M2000M"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Intel HD Graphics P530"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("OVERPOWERED Gaming Laptop 15+")]),t._v(" "),a("td",[t._v("Intel Core i7-8750H")]),t._v(" "),a("td",[t._v("GTX 1060 (6GB)"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Intel UHD Graphics 630"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CLEVO P950ER")]),t._v(" "),a("td",[t._v("Intel Core i7-8750H")]),t._v(" "),a("td",[t._v("GTX 1070 with Max-Q design (8GB)"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Intel UHD Graphics 630"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("XMG P505 (Clevo P650SG)")]),t._v(" "),a("td",[t._v("Intel Core i7-4720HQ")]),t._v(" "),a("td",[t._v("GTX 970M (4GB)"),a("br"),t._v("Windows下工作，但某些应用只能在RDP下运行；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Intel HD Graphics 4600"),a("br"),t._v("Windows下不支持4代及更早的Intel CPU；Linux下不支持4代及更早的Intel CPU")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("需要Nvidia驱动(353.82)以在Windows 10下运行")])]),t._v(" "),a("tr",[a("td",[t._v("CLEVO N957TP6")]),t._v(" "),a("td",[t._v("Unknown (Intel)")]),t._v(" "),a("td",[t._v("Unknown (Nvidia)"),a("br"),t._v("Windows下工作，但Nvidia驱动会遇到43错误；Linux下大概能工作")]),t._v(" "),a("td",[t._v("Unknown"),a("br"),t._v("Windows下大概能工作；Linux下大概能工作")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("可使用以下脚本进行判断。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/T-vK/MobilePassThrough\n")])])]),a("p",[t._v("若没有该芯片，由于Mac不支持双显卡切换技术，为使显卡正常，需要屏蔽独显。大多数笔记本上的双显卡切换是让集显承担图像输出任务，所以不能屏蔽集显，屏蔽会导致黑屏。")]),t._v(" "),a("p",[t._v("可以通过外接显示器判断独显是否独立。外接显示器后在桌面右键，打开NVIDIA控制面板，然后看是否可以调节数字振动这类设置。如果可以，说明此独显可以被独立驱动。")]),t._v(" "),a("p",[t._v("对于本机而言，由于BIOS中有External Gfx Card Primary Display Configuration，理论上可以屏蔽核显以驱动独显。考虑到BIOS中的设置会影响其他系统，此处采用屏蔽Nvidia独显而驱动Intel核显的方案。")]),t._v(" "),a("p",[t._v("对于旧版Mac的独显，可尝试通过purge-wrangler驱动，链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/mayankk2308/purge-wrangler\n")])])]),a("h4",{attrs:{id:"查找设备路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找设备路径"}},[t._v("#")]),t._v(" 查找设备路径")]),t._v(" "),a("p",[t._v("设备路径描述了设备在所有硬件中的具体位置，为类似"),a("code",[t._v("_SB.PCI0.PEG0.PEGP")]),t._v("的形式。")]),t._v(" "),a("h5",{attrs:{id:"通过gfxutil"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过gfxutil"}},[t._v("#")]),t._v(" 通过gfxutil")]),t._v(" "),a("p",[t._v("下载"),a("code",[t._v("gfxutil")]),t._v("后打开终端，并切换到gfxutil所在路径，执行以下命令以输出显卡设备路径。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 独显\ngfxutil -f GFX0\n\n// 核显\ngfxutil -f IGPU\n")])])]),a("h5",{attrs:{id:"通过windows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过windows"}},[t._v("#")]),t._v(" 通过Windows")]),t._v(" "),a("p",[t._v("打开Windows下的设备管理器，在独显设备上右键单击"),a("code",[t._v("属性")]),t._v("，在详细信息标签卡下拉菜单选择"),a("code",[t._v("BIOS设备名称")]),t._v("即可。")]),t._v(" "),a("h5",{attrs:{id:"通过acpi表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过acpi表"}},[t._v("#")]),t._v(" 通过ACPI表")]),t._v(" "),a("p",[t._v("在Clover引导界面按下"),a("code",[t._v("F4")]),t._v("，进入系统后打开EFI/CLOVER/ACPI/origin，可得到本机所有ACPI文件。复制到任一位置后打开终端，切换到复制到的位置并执行以下命令。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("grep -l _OFF *.aml\ngrep -l _INI *.aml\n")])])]),a("p",[t._v("检查输出并记录两个输出中均存在的文件。打开这些文件并查找_OFF方法，如果这个方法在PowerShell宏中（即由PowerShell大括号括住），则舍弃。找到独立的_OFF方法并记录其设备路径即可。")]),t._v(" "),a("h4",{attrs:{id:"驱动nvidia显卡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#驱动nvidia显卡"}},[t._v("#")]),t._v(" 驱动Nvidia显卡")]),t._v(" "),a("p",[t._v("Nvidia显卡一般免驱，部分显卡打开Inject Nvidia即可驱动成功。对于未受支持的显卡，则需要安装Nvidia WebDriver。此驱动最新版只适用于10.13，因此需要进行修补。")]),t._v(" "),a("p",[t._v("可使用Benjamin-Dobell的脚本，仓库如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/Benjamin-Dobell/nvidia-update\n")])])]),a("p",[t._v("在终端输入以下命令以启动安装脚本。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("curl -O https://raw.githubusercontent.com/Benjamin-Dobell/nvidia-update/master/nvidia-update.sh\nchmod 755 nvidia-update.sh\n./nvidia-update.sh -f\n")])])]),a("p",[t._v("安装完成后重启，在系统设置中已经能够看到Nvidia控制面板。若未驱动，则需要在Clover的System Parameters下勾选NvidiaWeb。")]),t._v(" "),a("p",[t._v("若为笔记本，独显通常不可驱动。若为台式机，在Catalina上独显无法开启硬件加速。若该显卡正常驱动，可安装WebDriver和CUDA Driver获得更好的体验，下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# WebDriver\nhttps://gfe.nvidia.com/mac-update\nhttps://www.nvidia.com/download/driverResults.aspx/149652/\nhttps://www.nvidia.com/download/driverResults.aspx/125379/en-us\nhttps://www.insanelymac.com/forum/topic/324195-nvidia-web-driver-updates-for-macos-high-sierra-update-nov-13-2020/\n\n# WebDriver Manager\nhttps://hackintosher.com/forums/attachments/webdrivermanager-2-9-4-zip.1289/\n\n# CUDA Driver\nhttps://www.nvidia.com/en-us/drivers/cuda/mac-driver-archive/\n")])])]),a("details",[a("summary",[t._v("【进阶】旧版Nvidia GPU用于Mojave/Catalina")]),t._v(" "),a("p",[t._v("部分旧版GPU最多仅支持到High Sierra，可通过修改系统文件的方式实现驱动。下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.insanelymac.com/forum/topic/339035-pre-release-macos-catalina/page/21/?tab=comments#comment-2677545\n")])])]),a("p",[t._v("需要替换以下文件。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Frameworks\n/System/Library/Frameworks/CoreDisplay.framework\n/System/Library/Frameworks/OpenGL.framework\n/System/Library/PrivateFrameworks/SkyLight.framework\n/System/Library/PrivateFrameworks/GPUSupport.framework\n\n# Patched Catalina Kexts\n/System/Library/Extensions/IOHIDFamily.kext\n/System/Library/Extensions/IOSurface.kext \n\n# nVidia Kexts from 10.13.6 for Legacy Tesla Cards\n/System/Library/Extensions/GeForceGA.bundle\n/System/Library/Extensions/GeForceTesla.kext\n/System/Library/Extensions/GeForceTeslaGLDriver.bundle\n/System/Library/Extensions/GeForceTeslaVADriver.bundle\n/System/Library/Extensions/IOGraphicsFamily.kext\n/System/Library/Extensions/IONDRVSupport.kext\n/System/Library/Extensions/NVDANV50HalTesla.kext\n/System/Library/Extensions/NVDAResmanTesla.kext\n")])])]),a("p",[t._v("并删除以下内容。删除后修复权限并重建缓存即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/System/Library/UserEventPlugins/com.apple.telemetry.plugin\n")])])])]),t._v(" "),a("details",[a("summary",[t._v("【进阶】OC引导")]),t._v(" "),a("p",[t._v("OpenCore需添加EFI字符串。在配置文件添加以下设备即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n    <key>[DEVICEPATH]</key>\n    <dict>\n        <key>@0,compatible</key>\n        <string>NVDA,NVMac</string>\n        <key>@0,device_type</key>\n        <string>display</string>\n        <key>@0,name</key>\n        <string>NVDA,Display-A</string>\n        <key>@1,compatible</key>\n        <string>NVDA,NVMac</string>\n        <key>@1,device_type</key>\n        <string>display</string>\n        <key>@1,name</key>\n        <string>NVDA,Display-B</string>\n        <key>NVCAP</key>\n        <data>\n        [OUTPUTS]\n        </data>\n        <key>NVPM</key>\n        <data>\n        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\n        </data>\n        <key>VRAM,totalsize</key>\n        <string>[MEMORYSIZE]</string>\n        <key>device_type</key>\n        <string>NVDA,GeForce</string>\n        <key>model</key>\n        <string>[MODELNAME]</string>\n        <key>name</key>\n        <string>NVDA,Parent</string>\n        <key>rom-revision</key>\n        <string>0x302e3176</string>\n    </dict>\n    </dict>\n</plist>\n')])])]),a("p",[t._v("注意需根据以下内容替换。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("选项")]),t._v(" "),a("th",[t._v("内容")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("[DEVICEPATH]")]),t._v(" "),a("td",[t._v("设备路径")])]),t._v(" "),a("tr",[a("td",[t._v("[MODELNAME]")]),t._v(" "),a("td",[t._v("设备名称")])]),t._v(" "),a("tr",[a("td",[t._v("[MEMORYSIZE]")]),t._v(" "),a("td",[t._v("32 - 0x02000000"),a("br"),t._v("64 - 0x04000000"),a("br"),t._v("128 - 0x08000000"),a("br"),t._v("256 - 0x10000000"),a("br"),t._v("320 - 0x14000000"),a("br"),t._v("512 - 0x20000000"),a("br"),t._v("640 - 0x28000000"),a("br"),t._v("768 - 0x30000000"),a("br"),t._v("1024 - 0x40000000")])]),t._v(" "),a("tr",[a("td",[t._v("[OUTPUTS]")]),t._v(" "),a("td",[t._v("DVI-I / DVI-I - BAAAAAAAAwAMAAAAAAAABwAAAAA="),a("br"),t._v("VGA / DVI-I  - BAAAAAAAAQAGAAAAAAAAAAAAAAA="),a("br"),t._v("DVI-I / VGA - BAAAAAAAAwAEAAAAAAAABwAAAAA=")])])])])]),t._v(" "),a("h4",{attrs:{id:"驱动intel显卡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#驱动intel显卡"}},[t._v("#")]),t._v(" 驱动Intel显卡")]),t._v(" "),a("p",[t._v("打开Hackintool，在缓冲帧菜单项选择macOS 10.14，在IntelGen菜单项选择显卡的次代。本机为Intel HD Graphics 620，选择Kaby Lake。然后选择PlatformID，本机选择0×59160000。具体对应架构和PlatformID参见附录。")]),t._v(" "),a("p",[t._v("点击应用补丁选项卡，进行以下设置。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 通用\n选择设备属性，勾选自动侦测变化、全部、接口、基本显存、EDID、图形卡、音频、PCI设备\n\n# Advenced\n勾选将DP映射到HDMI、使用英特尔HDMI、修复热插拔重启、HDMI无限循环修复、仿冒声卡ID、显存2048MB、启用HDMI20（4K）、缓冲帧接口数限制：3\n勾选仿冒图形卡ID，选择对应显卡设备\n")])])]),a("p",[t._v("点击Generate Patch生成显卡驱动补丁。点击File-Export-Clover config.plist，路径选择EFI/CLOVER并确认替换。注意，Hackintool会将原来的config.plist和生成的补丁进行合成，替换以后的config.plist为原有基础上添加了显卡补丁的配置文件，原有配置文件则被备份为config-backup.plist。")]),t._v(" "),a("h4",{attrs:{id:"驱动amd显卡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#驱动amd显卡"}},[t._v("#")]),t._v(" 驱动AMD显卡")]),t._v(" "),a("p",[t._v("AMD显卡大部分免驱，部分需要通过伪装ID的方式驱动。")]),t._v(" "),a("details",[a("summary",[t._v("【进阶】伪装ID")]),t._v(" "),a("p",[t._v("需要伪装ID的显卡型号如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("R9 290/390\nR9 280/380\nR7 270/370\nR9 260/360\nR7 250\nR7 240\n")])])]),a("p",[t._v("通过以下链接查看合适的PCI ID，也可在黑苹果的进阶操作中查看。以R9 390为例，最接近的为390X，Vendor ID为1002，Device ID为67B0。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://pci-ids.ucw.cz/read/PC/1002\n")])])]),a("p",[t._v("对于Device ID，需按照以下方式拆解。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('"device-id",\nBuffer (0x04)\n{\n     0xB0, 0x67, 0x00, 0x00\n},\n')])])]),a("p",[t._v("进入Windows，打开设备管理器，选择显示适配器，在显卡设备上右键，选择属性-详细信息-位置路径，复制该路径，示例如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ACPI(_SB_)#ACPI(PC02)#ACPI(BR2A)#ACPI(PEGP)#PCI(0000)#PCI(0000)\n")])])]),a("p",[t._v("对应的ACPI路径如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\\_SB_.PC02.BR2A.PEGP\n")])])]),a("p",[t._v("将以下内容存储为SSDT并放置于引导器ACPI部分即可。根据ACPI路径修改外部引用和引用域，将device-id修改为以上格式，model修改为显卡型号即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('DefinitionBlock ("", "SSDT", 2, "DRTNIA", "AMDGPU", 0x00001000)\n{\n    External (_SB_.PCI0, DeviceObj)\n    External (_SB_.PCI0.PEG0.PEGP, DeviceObj)\n\n\n    Scope (\\_SB_.PCI0.PEG0.PEGP)\n    {\n        if (_OSI ("Darwin"))\n        {\n            Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method\n            {\n                Local0 = Package (0x04)\n                {\n                    // Where we shove our FakeID\n                    "device-id",\n                    Buffer (0x04)\n                    {\n                        0xB0, 0x67, 0x00, 0x00\n                    },\n\n                    // Changing the name of the GPU reported, mainly cosmetic\n                    "model",\n                    Buffer ()\n                    {\n                        "AMD Radeon R9 390"\n                    }\n                }\n                DTGP (Arg0, Arg1, Arg2, Arg3, RefOf (Local0))\n                Return (Local0)\n            }\n        }\n    }\n    Scope (\\_SB.PCI0)\n    {                   \n        Method (DTGP, 5, NotSerialized)\n        {\n            If (LEqual (Arg0, ToUUID ("a0b5b7c6-1318-441c-b0c9-fe695eaf949b")))\n            {\n                If (LEqual (Arg1, One))\n                {\n                    If (LEqual (Arg2, Zero))\n                    {\n                        Store (Buffer (One)\n                            {\n                                 0x03\n                            }, Arg4)\n                        Return (One)\n                    }\n\n                    If (LEqual (Arg2, One))\n                    {\n                        Return (One)\n                    }\n                }\n            }\n\n            Store (Buffer (One)\n                {\n                     0x00\n                }, Arg4)\n            Return (Zero)\n        }\n      \n    }\n\n}\n')])])])]),t._v(" "),a("p",[t._v("可尝试PyVega以实现超频和电压调整。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/corpnewt/PyVega\n")])])]),a("h4",{attrs:{id:"屏蔽独显"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#屏蔽独显"}},[t._v("#")]),t._v(" 屏蔽独显")]),t._v(" "),a("h5",{attrs:{id:"通过添加引导标志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过添加引导标志"}},[t._v("#")]),t._v(" 通过添加引导标志")]),t._v(" "),a("p",[t._v("保证Whatevergreen存在，在Clover引导标志中添加"),a("code",[t._v("-wegnoegpu")]),t._v("。此方法不能保证始终正常工作。")]),t._v(" "),a("h5",{attrs:{id:"通过添加独显设备并禁用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过添加独显设备并禁用"}},[t._v("#")]),t._v(" 通过添加独显设备并禁用")]),t._v(" "),a("p",[t._v("注意，进入该设备路径的其它设备也将获得这些属性，从而失效，即会禁用同一品牌的所有显卡，也会禁用开普勒GPU。其它PCIe驱动器也可用此法禁用。")]),t._v(" "),a("p",[t._v("查找到独显设备路径后，在Clover的Device-Add Properties下添加该独显路径，并填写以下内容。")]),t._v(" "),a("p",[t._v("对于Nvidia显卡采用以下内容。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Device")]),t._v(" "),a("th",[t._v("Key")]),t._v(" "),a("th",[t._v("Value")]),t._v(" "),a("th",[t._v("Disabled")]),t._v(" "),a("th",[t._v("Value Type")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("NVidia")]),t._v(" "),a("td",[t._v("name")]),t._v(" "),a("td",[t._v("23646973706C6179")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("DATA")])]),t._v(" "),a("tr",[a("td",[t._v("NVidia")]),t._v(" "),a("td",[t._v("IOName")]),t._v(" "),a("td",[t._v("#display")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("STRING")])]),t._v(" "),a("tr",[a("td",[t._v("NVidia")]),t._v(" "),a("td",[t._v("class-code")]),t._v(" "),a("td",[t._v("FFFFFFFF")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("DATA")])])])]),t._v(" "),a("p",[t._v("对于AMD显卡则采用以下内容。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Device")]),t._v(" "),a("th",[t._v("Key")]),t._v(" "),a("th",[t._v("Value")]),t._v(" "),a("th",[t._v("Disabled")]),t._v(" "),a("th",[t._v("Value Type")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ATI")]),t._v(" "),a("td",[t._v("name")]),t._v(" "),a("td",[t._v("23646973706C6179")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("DATA")])]),t._v(" "),a("tr",[a("td",[t._v("ATI")]),t._v(" "),a("td",[t._v("IOName")]),t._v(" "),a("td",[t._v("#display")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("STRING")])]),t._v(" "),a("tr",[a("td",[t._v("ATI")]),t._v(" "),a("td",[t._v("class-code")]),t._v(" "),a("td",[t._v("FFFFFFFF")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("DATA")])]),t._v(" "),a("tr",[a("td",[t._v("ATI")]),t._v(" "),a("td",[t._v("vendor-id")]),t._v(" "),a("td",[t._v("FFFF0000")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("DATA")])]),t._v(" "),a("tr",[a("td",[t._v("ATI")]),t._v(" "),a("td",[t._v("device-id")]),t._v(" "),a("td",[t._v("FFFF0000")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("DATA")])])])]),t._v(" "),a("h5",{attrs:{id:"通过ssdt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过ssdt"}},[t._v("#")]),t._v(" 通过SSDT")]),t._v(" "),a("p",[t._v("查找到独显设备路径后，打开MaciASL并新建文件，复制以下代码并将"),a("code",[t._v("_SB.PCI0.PEG0.PEGP")]),t._v("修改为所找到的设备路径，保存为aml文件并放到EFI/CLOVER/ACPI/hotpatch即可。")]),t._v(" "),a("p",[t._v("对于Nvidia显卡采用以下SSDT。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('DefinitionBlock ("", "SSDT", 2, "hack", "spoof", 0)\n{\n    Method(_SB.PCI0.PEG0.PEGP._DSM, 4)\n    {\n        If (!Arg2) { Return (Buffer() { 0x03 } ) }\n        Return (Package()\n        {\n            "name", Buffer() { "#display" },\n            "IOName", "#display",\n            "class-code", Buffer() { 0xFF, 0xFF, 0xFF, 0xFF },\n        })\n    }\n}\n')])])]),a("p",[t._v("对于AMD显卡采用以下SSDT。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('DefinitionBlock ("", "SSDT", 2, "hack", "spoof", 0)\n{\n    Method(_SB.PCI0.PEG0.PEGP._DSM, 4)\n    {\n        If (!Arg2) { Return (Buffer() { 0x03 } ) }\n        Return (Package()\n        {\n            "name", Buffer() { "#display" },\n            "IOName", "#display",\n            "class-code", Buffer() { 0xFF, 0xFF, 0xFF, 0xFF },\n            "vendor-id", Buffer() { 0xFF, 0xFF, 0,  0 },\n            "device-id", Buffer() { 0xFF, 0xFF, 0, 0 },\n        })\n    }\n}\n')])])]),a("h4",{attrs:{id:"屏幕亮度调节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#屏幕亮度调节"}},[t._v("#")]),t._v(" 屏幕亮度调节")]),t._v(" "),a("p",[t._v("打开Maciasl，新建文件并复制以下内容，保存为SSDT-PNLF.aml并放入Clover的ACPI/patched下。重启电脑后进入系统偏好设置-显示器，若出现亮度调节滑块则已成功。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('DefinitionBlock ("", "SSDT", 2, "hack", "_PNLF", 0x00000000)\n{\n    External (_SB_.PCI0.IGPU, DeviceObj)\n    External (RMCF.BKLT, IntObj)\n    External (RMCF.FBTP, IntObj)\n    External (RMCF.GRAN, IntObj)\n    External (RMCF.LEVW, IntObj)\n    External (RMCF.LMAX, IntObj)\n\n    Scope (_SB.PCI0.IGPU)\n    {\n        OperationRegion (RMP3, PCI_Config, Zero, 0x14)\n    }\n\n    Device (_SB.PCI0.IGPU.PNLF)\n    {\n        Name (_ADR, Zero)\n        Name (_HID, EisaId ("APP0002"))\n        Name (_CID, "backlight")\n        Name (_UID, Zero)\n        Name (_STA, 0x0B)\n        Field (^RMP3, AnyAcc, NoLock, Preserve)\n        {\n            Offset (0x02), \n            GDID,   16, \n            Offset (0x10), \n            BAR1,   32\n        }\n\n        OperationRegion (RMB1, SystemMemory, (BAR1 & 0xFFFFFFFFFFFFFFF0), 0x000E1184)\n        Field (RMB1, AnyAcc, Lock, Preserve)\n        {\n            Offset (0x48250), \n            LEV2,   32, \n            LEVL,   32, \n            Offset (0x70040), \n            P0BL,   32, \n            Offset (0xC2000), \n            GRAN,   32, \n            Offset (0xC8250), \n            LEVW,   32, \n            LEVX,   32, \n            Offset (0xE1180), \n            PCHL,   32\n        }\n\n        Method (_INI, 0, NotSerialized)\n        {\n            Local4 = One\n            If (CondRefOf (\\RMCF.BKLT))\n            {\n                Local4 = \\RMCF.BKLT\n            }\n\n            If ((Zero == (One & Local4)))\n            {\n                Return (Zero)\n            }\n\n            Local0 = ^GDID\n            Local2 = Ones\n            If (CondRefOf (\\RMCF.LMAX))\n            {\n                Local2 = \\RMCF.LMAX\n            }\n\n            Local3 = Zero\n            If (CondRefOf (\\RMCF.FBTP))\n            {\n                Local3 = \\RMCF.FBTP\n            }\n\n            If ((Zero == Local3))\n            {\n                If ((Ones != Match (Package (0x10)\n                                {\n                                    0x010B, \n                                    0x0102, \n                                    0x0106, \n                                    0x1106, \n                                    0x1601, \n                                    0x0116, \n                                    0x0126, \n                                    0x0112, \n                                    0x0122, \n                                    0x0152, \n                                    0x0156, \n                                    0x0162, \n                                    0x0166, \n                                    0x016A, \n                                    0x46, \n                                    0x42\n                                }, MEQ, Local0, MTR, Zero, Zero)))\n                {\n                    Local3 = One\n                }\n                Else\n                {\n                    Local3 = 0x02\n                }\n            }\n\n            If ((One == Local3))\n            {\n                If ((Ones == Local2))\n                {\n                    Local2 = 0x0710\n                }\n\n                Local1 = (^LEVX >> 0x10)\n                If (!Local1)\n                {\n                    Local1 = Local2\n                }\n\n                If ((Local2 != Local1))\n                {\n                    Local0 = ((^LEVL * Local2) / Local1)\n                    Local3 = (Local2 << 0x10)\n                    If ((Local2 > Local1))\n                    {\n                        ^LEVX = Local3\n                        ^LEVL = Local0\n                    }\n                    Else\n                    {\n                        ^LEVL = Local0\n                        ^LEVX = Local3\n                    }\n                }\n            }\n            ElseIf ((0x02 == Local3))\n            {\n                If ((Ones == Local2))\n                {\n                    If ((Ones != Match (Package (0x16)\n                                    {\n                                        0x0D26, \n                                        0x0A26, \n                                        0x0D22, \n                                        0x0412, \n                                        0x0416, \n                                        0x0A16, \n                                        0x0A1E, \n                                        0x0A1E, \n                                        0x0A2E, \n                                        0x041E, \n                                        0x041A, \n                                        0x0BD1, \n                                        0x0BD2, \n                                        0x0BD3, \n                                        0x1606, \n                                        0x160E, \n                                        0x1616, \n                                        0x161E, \n                                        0x1626, \n                                        0x1622, \n                                        0x1612, \n                                        0x162B\n                                    }, MEQ, Local0, MTR, Zero, Zero)))\n                    {\n                        Local2 = 0x0AD9\n                    }\n                    ElseIf ((Ones != Match (Package (0x04)\n                                    {\n                                        0x3E9B, \n                                        0x3EA5, \n                                        0x3E92, \n                                        0x3E91\n                                    }, MEQ, Local0, MTR, Zero, Zero)))\n                    {\n                        Local2 = 0xFFFF\n                    }\n                    Else\n                    {\n                        Local2 = 0x056C\n                    }\n                }\n\n                If ((Zero == (0x02 & Local4)))\n                {\n                    Local5 = 0xC0000000\n                    If (CondRefOf (\\RMCF.LEVW))\n                    {\n                        If ((Ones != \\RMCF.LEVW))\n                        {\n                            Local5 = \\RMCF.LEVW\n                        }\n                    }\n\n                    ^LEVW = Local5\n                }\n\n                If ((0x04 & Local4))\n                {\n                    If (CondRefOf (\\RMCF.GRAN))\n                    {\n                        ^GRAN = \\RMCF.GRAN\n                    }\n                    Else\n                    {\n                        ^GRAN = Zero\n                    }\n                }\n\n                Local1 = (^LEVX >> 0x10)\n                If (!Local1)\n                {\n                    Local1 = Local2\n                }\n\n                If ((Local2 != Local1))\n                {\n                    Local0 = ((((^LEVX & 0xFFFF) * Local2) / Local1) | \n                        (Local2 << 0x10))\n                    ^LEVX = Local0\n                }\n            }\n\n            If ((Local2 == 0x0710))\n            {\n                _UID = 0x0E\n            }\n            ElseIf ((Local2 == 0x0AD9))\n            {\n                _UID = 0x0F\n            }\n            ElseIf ((Local2 == 0x056C))\n            {\n                _UID = 0x10\n            }\n            ElseIf ((Local2 == 0x07A1))\n            {\n                _UID = 0x11\n            }\n            ElseIf ((Local2 == 0x1499))\n            {\n                _UID = 0x12\n            }\n            ElseIf ((Local2 == 0xFFFF))\n            {\n                _UID = 0x13\n            }\n            Else\n            {\n                _UID = 0x63\n            }\n        }\n    }\n}\n')])])]),a("h4",{attrs:{id:"效果检验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#效果检验"}},[t._v("#")]),t._v(" 效果检验")]),t._v(" "),a("p",[t._v("重启后显卡正常情况下已经驱动，Dock栏变为半透明。")]),t._v(" "),a("p",[t._v("点击左上角苹果按钮，选择关于本机，若图形卡一栏显示2048MB而不是7MB，则核显驱动成功。在系统报告-图形卡中若不能看到所屏蔽的独显，则独显屏蔽成功。点击核显，若有"),a("code",[t._v("Metal: 支持，功能集macOS GPUFamily2 v1")]),t._v("字样，则metal支持打开成功。")]),t._v(" "),a("p",[t._v("显卡驱动后需检验显卡硬件加速（QE/CI）是否已经打开。如果能够运行象棋游戏、屏幕保护程序正常工作、Grapher能看到三维图像、截屏功能正常，则硬件加速已打开。")]),t._v(" "),a("p",[t._v("也可使用VDADecoderCheck或VideoProc检测。对于VideoProc，打开应用后进入"),a("code",[t._v("设置")]),t._v("，点击"),a("code",[t._v("硬件加速引擎")]),t._v("旁边的"),a("code",[t._v("选项")]),t._v("，查看检测结果即可。VideoProc下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.videoproc.com/\n")])])]),a("h4",{attrs:{id:"显示修复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示修复"}},[t._v("#")]),t._v(" 显示修复")]),t._v(" "),a("p",[t._v("若出现屏幕花屏，可以尝试将DVI换为HDMI，或注入EDID。")]),t._v(" "),a("h5",{attrs:{id:"平滑字体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#平滑字体"}},[t._v("#")]),t._v(" 平滑字体")]),t._v(" "),a("p",[t._v("在终端输入以下命令即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 开启\ndefaults write -g CGFontRenderingFontSmoothingDisabled -bool NO\n\n# 设置字体样式\n# 3为最粗，1为最细\ndefaults -currentHost write -globalDomain AppleFontSmoothing -int 3\n// defaults -currentHost write -globalDomain AppleFontSmoothing -int 2\n// defaults -currentHost write -globalDomain AppleFontSmoothing -int 1\n\n# 关闭\ndefaults write -g CGFontRenderingFontSmoothingDisabled -bool YES\n")])])]),a("h5",{attrs:{id:"hidpi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hidpi"}},[t._v("#")]),t._v(" Hidpi")]),t._v(" "),a("p",[t._v("HiDPI即High Dots Per Inch，用四个硬件像素渲染一个图像像素。开启Hidpi可使显示更清晰。")]),t._v(" "),a("h6",{attrs:{id:"通过脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过脚本"}},[t._v("#")]),t._v(" 通过脚本")]),t._v(" "),a("p",[t._v("在终端下输入以下命令打开一键HiDPI脚本，安装以获得原生屏幕缩放体验。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('sh -c "$(curl -fsSL https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/hidpi.sh)"\n\n# 或以下命令\nbash -c "$(curl -fsSL https://gitee.com/kirainmoe/static-files/raw/master/hidpi.sh)"\n')])])]),a("h6",{attrs:{id:"通过rdm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过rdm"}},[t._v("#")]),t._v(" 通过RDM")]),t._v(" "),a("p",[t._v("打开DarwinDumper，只勾选EDID，点击左侧的Run，会在桌面生成EDID文件夹。下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://mac.softpedia.com/get/Utilities/DarwinDumper.shtml\n")])])]),a("p",[t._v("下载FixEDID，链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/andyvand/FixEDID\n")])])]),a("p",[t._v("打开并点击Open EDID binary file，选择桌面文件夹的EDID/EDID.bin。选择对应显示比例的显示器，此处为Apple MacBook Pro Display（16:10）。")]),t._v(" "),a("p",[t._v("在右侧输入想设置的分辨率，点击Add Resolutions添加分辨率，点击Make在桌面生成文件。参考分辨率如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("3840×2160\n3200×1800\n2880×1620\n2560×1600\n2560×1440\n1920×1080\n1820×1200\n1680×1050\n1600×900\n1440×810\n1440×900\n1440×810\n1344×1008\n1344×756\n1280×960\n1280×800\n1280×720\n1024×768\n1024×576\n960×600\n960×540\n840×525\n840×524\n800×600\n800×450\n720×450\n640×480\n")])])]),a("p",[t._v("将桌面的DisplayVendorID-xxx放到System/Library/Displays/Contents/Resources/Overrides。安装"),a("code",[t._v("RDM")]),t._v("并重启电脑，即可在RDM看到需要的分辨率，链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://avi.alkalay.net/software/RDM/RDM-2.2.dmg\n")])])]),a("h6",{attrs:{id:"通过手动设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过手动设置"}},[t._v("#")]),t._v(" 通过手动设置")]),t._v(" "),a("p",[t._v("打开终端并输入以下命令。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo defaults write /Library/Preferences/com.apple.windowserver.plist DisplayResolutionEnabled -bool true\nioreg -lw0 | grep IODisplayPrefsKey\n")])])]),a("p",[t._v("输出类似如下信息，其中所有外部监视器由AppleDisplay标识，内部监视器由AppleBacklightDisplay标识。在行末可识别出DisplayVendorID和DisplayProductID，此处为"),a("code",[t._v("10ac")]),t._v("和"),a("code",[t._v("d06e")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('"IODisplayPrefsKey" = "IOService:/AppleACPIPlatformExpert/PCI0@0/AppleACPIPCI/IGPU@2/AppleIntelFramebuffer@2/display0/AppleDisplay-10ac-d06e"\n')])])]),a("p",[t._v("打开以下网页并输入刚才得到的DisplayVendorID和DisplayProductID，DisplayProductName可以随意。注意一个分辨率需填写两个Scale Resolutions，其中第一个是原分辨率，另一个是长宽均为两倍后的分辨率，如添加1920×1080，则需填入3840×2160和1920×1080。注意相近的分辨率将会被系统过滤。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/\n")])])]),a("p",[t._v("调整完成后下载plist文件，去掉扩展名并放在DisplayVendorID-10ac文件夹，其中10ac更改为自己的VendorID。将文件夹复制到System/Library/Displays/Contents/Resources/Overrides并重启即可。")]),t._v(" "),a("h5",{attrs:{id:"注入edid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注入edid"}},[t._v("#")]),t._v(" 注入EDID")]),t._v(" "),a("p",[t._v("注入EDID可修复笔记本显示器内屏黑屏或花屏的问题。若前面选择采用Hidpi一键脚本，则无需进行此步。")]),t._v(" "),a("h6",{attrs:{id:"通过patch-edid-rb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过patch-edid-rb"}},[t._v("#")]),t._v(" 通过patch-edid.rb")]),t._v(" "),a("p",[t._v("打开终端并输入以下命令以下载脚本。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("curl -O https://gist.github.com/ejdyksen/8302862/raw/patch-edid.rb\n")])])]),a("p",[t._v("打开脚本文件并查找"),a("code",[t._v("AppleDisplay")]),t._v("，其代表外接显示器，若为内接显示器则需修改为"),a("code",[t._v("AppleBacklightDisplay")]),t._v("。然后继续在终端输入以下命令以运行并生成配置文件。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo ruby patch-edid.rb\n")])])]),a("p",[t._v("将生成的配置文件复制到System/Library/Displays/Contents/Resources/Overrides/DisplayVendorID-xxx（对于El Capitan及以前版本为/System/Library/Displays/Overrides/DisplayVendorID-xxx），若已存在配置文件，则将两个文件的内容合并，重启即可。")]),t._v(" "),a("h6",{attrs:{id:"通过clover"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过clover"}},[t._v("#")]),t._v(" 通过Clover")]),t._v(" "),a("p",[t._v("在终端分别输入以下命令并记录其输出。其中第一个输出为EDID信息，另外两个分别为屏幕设备的VendorID和ProductID。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('ioreg -lw0 | grep -i "IODisplayEDID" | sed -e \'s/.*<//\' -e \'s/>//\'\nioreg -l | grep "DisplayVendorID"\nioreg -l | grep "DisplayProductID"\n')])])]),a("p",[t._v("打开Clover的config.plist，切换到Graphics，将三者分别粘贴到对应的位置，注意VendorID和ProductID需要转换为十六进制。勾选"),a("code",[t._v("Inject EDID")]),t._v("，保存并重启即可。")]),t._v(" "),a("h6",{attrs:{id:"通过hackintool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过hackintool"}},[t._v("#")]),t._v(" 通过Hackintool")]),t._v(" "),a("p",[t._v("打开Hackintool，进入显示器，选择要编辑的显示器，可添加或修复监视器范围，以及修改分辨率。")]),t._v(" "),a("p",[t._v("点击导出，将DisplayVendorID-x和Icons.plist复制到/System/Library/Displays/Contents/Resources/Overrides（对于El Capitan及以前版本为/System/Library/Displays/Overrides）即可。")]),t._v(" "),a("p",[t._v("也可将DisplayEDID-x-x.kext复制到Clover的kexts文件夹。")]),t._v(" "),a("h3",{attrs:{id:"有线网卡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有线网卡"}},[t._v("#")]),t._v(" 有线网卡")]),t._v(" "),a("p",[t._v("几乎所有的有线网卡都受支持。")]),t._v(" "),a("h4",{attrs:{id:"realtek"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realtek"}},[t._v("#")]),t._v(" Realtek")]),t._v(" "),a("p",[t._v("以Realtek RTL8111有线网卡为例，网络上寻找对应驱动的kext，并放入Clover的kexts/Others即可驱动。")]),t._v(" "),a("p",[t._v("驱动后进入系统偏好设置-网络，可看到有线网卡。或点击左上角苹果按钮，选择关于本机-系统报告…，在"),a("code",[t._v("以太网卡")]),t._v("中可以看到有线网卡。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Realtek RTL810X（RTL8101E/8102E/8103E/8401E/8105E/8402/8106E/8106EUS）\nhttp://www.insanelymac.com/forum/topic/296190-driver-for-realteks-rtl810x-fast-ethernet-series\n\n# Realtek RTL8111X/8168X（X=无/B/C/D/E/F/G）\nhttp://www.insanelymac.com/forum/topic/287161-new-driver-for-realtek-rtl8111\nhttps://github.com/Mieze/RTL8111_driver_for_OS_X\nhttps://code.google.com/p/os-x-realtek-network/downloads/list\nhttps://github.com/SergeySlice/RealtekLANv3\n\n# Realtek RTL8125\nhttps://github.com/Mieze/LucyRTL8125Ethernet\n\n# Realtek RTL8100\nhttps://github.com/Mieze/RealtekRTL8100\n")])])]),a("h4",{attrs:{id:"intel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intel"}},[t._v("#")]),t._v(" Intel")]),t._v(" "),a("p",[t._v("Intel有线网卡驱动下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 新版，支持82578LM/82578LC/82578DM/82578DC/82579LM/82579V/I217LM/I217V/I218LM/I218V/I218LM2/I218V2/I218LM3/I219V/I219LM/I219V2/I219LM2/I219LM2\nhttps://github.com/Mieze/IntelMausiEthernet\nhttps://github.com/acidanthera/IntelMausi\n\n# 旧版\nhttps://github.com/chris1111/AppleIntelE1000e\n\n# 支持82575/82576/82580/dh89xxcc/i350/i210/i211\nhttps://www.tonymacx86.com/resources/appleigb.323/\n\n# 支持I211/I350\nhttps://github.com/khronokernel/SmallTree-I211-AT-patch\n\n# 支持I211\nhttps://github.com/suxiaogang/asrock-deskmini-110-hackintosh/tree/master/EFI/CLOVER/kexts/Other/Backup/SmallTree-Intel-211-AT-PCIe-GBE.kext\nhttps://cdn.discordapp.com/attachments/390417931659378688/556912824228773888/SmallTree-Intel-211-AT-PCIe-GBE.kext.zip\n\n# 支持82546EB/82545EM/82546EB/82545GM/82571EB\nhttps://small-tree.com/smalltreeintel8254x-3-9-0-dmg/\n\n# 支持82598EB/82599EB/82599ES\nhttps://small-tree.com/smalltreeintel8259x-3-5-0-dmg/\n")])])]),a("h4",{attrs:{id:"broadcom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#broadcom"}},[t._v("#")]),t._v(" Broadcom")]),t._v(" "),a("p",[t._v("对于BCM5722 NetXtreme/NetLink，可用BCM5722D。其它则需要FakePCIID+FakePCIID_BCM57XX_as_BCM57765。")]),t._v(" "),a("h4",{attrs:{id:"amd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amd"}},[t._v("#")]),t._v(" AMD")]),t._v(" "),a("p",[t._v("I211-AT驱动下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/khronokernel/SmallTree-I211-AT-patch/releases\n")])])]),a("h4",{attrs:{id:"atheros"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#atheros"}},[t._v("#")]),t._v(" Atheros")]),t._v(" "),a("p",[t._v("Atheros有线网卡驱动下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Qualcomm Atheros E2200\n# 支持AR816x/AR817x/Killer E220x/Killer E2400/Killer E2500\nhttps://github.com/Mieze/AtherosE2200Ethernet\n\n# Qualcomm Atheros AR813x/815x\nhttps://github.com/al3xtjames/AtherosL1cEthernet\n\n# Atheros(R) AR81(31/32/51/52/61/62/71/72) PCI-E\n# 适用于10.7-10.8\nhttps://www.insanelymac.com/forum/topic/284119-experimental-atheros-ar813132515261627172-driver-for-107108/\n")])])]),a("h4",{attrs:{id:"aquantia"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aquantia"}},[t._v("#")]),t._v(" Aquantia")]),t._v(" "),a("p",[t._v("Aquantia有线网卡驱动下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.insanelymac.com/forum/topic/330614-aquantia-10-gb-ethernet-support-thread-10132-upwards/\n")])])]),a("h4",{attrs:{id:"无实际网卡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无实际网卡"}},[t._v("#")]),t._v(" 无实际网卡")]),t._v(" "),a("p",[t._v("因为Mac App Store、iCloud、FaceTime和iMessage的正常工作要求在en0处具有内置以太网，因此，若无有线网卡，需将NullEthernet.kext放到Clover的kexts以模拟出一个有线网卡设备。下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://bitbucket.org/RehabMan/os-x-null-ethernet/downloads/\n")])])]),a("h4",{attrs:{id:"网络端口重置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络端口重置"}},[t._v("#")]),t._v(" 网络端口重置")]),t._v(" "),a("p",[t._v("若以太网端口不在en0，则需进入网络偏好设置，删除所有接口并应用。")]),t._v(" "),a("p",[t._v("然后删除"),a("code",[t._v("/Library/Preferences/SystemConfiguration/NetworkInterfaces.plist")]),t._v("，重新启动后进入网络偏好设置，重新添加网络端口。")]),t._v(" "),a("h4",{attrs:{id:"有线网卡内建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有线网卡内建"}},[t._v("#")]),t._v(" 有线网卡内建")]),t._v(" "),a("p",[t._v("在Clover的Devices选项卡中选择Properties，添加一个新设备，路径为通过Hackintool找到的有线网卡设备，并添加条目built-in，数值为01，类型为DATA，重启即可。")]),t._v(" "),a("p",[t._v("如果用的是NullEthernet.kext，则打开Maciasl，复制以下内容并保存为SSDT-RMNE.aml，然后放入Clover的ACPI/patched中即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('DefinitionBlock ("", "SSDT", 2, "RehabM", "RMNE", 0x00001000)\n{\n    Device (RMNE)\n    {\n        Name (_ADR, Zero)\n        Name (_HID, "NULE0000")\n        Name (MAC, Buffer (0x06)\n        {\n             0x11, 0x22, 0x33, 0x44, 0x55, 0x66\n        })\n        Method (_DSM, 4, NotSerialized)\n        {\n            If ((Arg2 == Zero))\n            {\n                Return (Buffer (One)\n                {\n                     0x03\n                })\n            }\n\n            Return (Package (0x0A)\n            {\n                "built-in", \n                Buffer (One)\n                {\n                     0x00\n                }, \n\n                "IOName", \n                "ethernet", \n                "name", \n                Buffer (0x09)\n                {\n                    "ethernet"\n                }, \n\n                "model", \n                Buffer (0x15)\n                {\n                    "RM-NullEthernet-1001"\n                }, \n\n                "device_type", \n                Buffer (0x09)\n                {\n                    "ethernet"\n                }\n            })\n        }\n    }\n}\n')])])]),a("h3",{attrs:{id:"无线网卡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无线网卡"}},[t._v("#")]),t._v(" 无线网卡")]),t._v(" "),a("h4",{attrs:{id:"atheros-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#atheros-2"}},[t._v("#")]),t._v(" Atheros")]),t._v(" "),a("p",[t._v("本机无线网卡为Atheros AR9565，可用驱动由corecapture.kext、CoreCaptureResponder.kext和IO80211Family.kext组成，下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://www.mediafire.com/file/2rjm76vro8ha28l/9565.zip/file\n")])])]),a("p",[t._v("对于macOS 10.14，把它们放入Clover的kexts中，重启电脑后无线网卡可用。")]),t._v(" "),a("details",[a("summary",[t._v("【进阶】更高版本系统")]),t._v(" "),a("p",[t._v("上述kexts在Catalina中需要放到SLE才能正常工作，在Big Sur中已不适用。Big Sur中需要使用HS80211Family.kext和AirPortAtheros40.kext，下载网站如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.longzc.cn/index.php/archives/330\n")])])]),a("p",[t._v("在Catalina中，也可尝试以下kexts。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/tj320442/AR9565-DW1707-macOS-10.15-Catalina\nhttps://gitee.com/i320442/AR9565_DW1707/tree/master\n")])])])]),t._v(" "),a("p",[t._v("对于AR946X（AR9462&AR9463）、AR9485、AR9565，也可尝试ATH9KFixup。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/chunnann/ATH9KFixup\nhttps://www.olarila.com/topic/9229-guide-wifi-atheros-ar9565-ar9462-ar9463-ar9485-on-mojave-and-catalina/\n")])])]),a("p",[t._v("对于AR242x、AR542x、AR5416、AR5418、AR9280-AR5BHB92、AR9285-AR5B95、AR9287-AR5B97、AR9380-AR5BXB112，可尝试High Sierra的IO80211Family。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/khronokernel/IO80211-Patches/blob/main/10.13.6-High-Sierra-Kexts/IO80211HighSierra.kext.zip\n")])])]),a("details",[a("summary",[t._v("【过时】低版本系统")]),t._v(" "),a("p",[t._v("对于AR5B95/195/97/197，在High Sierra中可用以下kext。下载后解压并将kexts/ProbookAtheros.kext放置到引导器即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/RehabMan/HP-ProBook-4x30s-DSDT-Patch/archive/master.zip\n")])])])]),t._v(" "),a("h4",{attrs:{id:"intel-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intel-2"}},[t._v("#")]),t._v(" Intel")]),t._v(" "),a("p",[t._v("可尝试Itlwm。注意应当使用itlwm.kext或AirportItlwm.kext，两者不能同时使用。推荐使用itlwm.kext。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/OpenIntelWireless/itlwm\n")])])]),a("p",[t._v("支持列表如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://openintelwireless.github.io/itlwm/Compat.html\n")])])]),a("p",[t._v("该kexts会使Intel无线网卡识别为有线网卡，因此需要配合HeliPort客户端使用。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/OpenIntelWireless/HeliPort\n")])])]),a("h4",{attrs:{id:"broadcom-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#broadcom-2"}},[t._v("#")]),t._v(" Broadcom")]),t._v(" "),a("p",[t._v("可尝试AirportBrcmFixup，适用于10.10及更高版本，链接如下。")]),t._v(" "),a("p",[t._v("对于DW1820A，需添加启动参数brcmfx-country=#a和brcmfx-aspm。安装前先于BIOS中禁用WLAN/WIFI和Bluetooth，待安装系统成功后再行开启。")]),t._v(" "),a("p",[t._v("如果插上网卡后进入系统直接卡住，可添加引导参数-brcmfxoff以暂时跳过网卡驱动的加载。")]),t._v(" "),a("p",[t._v("如果想体验Sidecar/Apple Watch解锁功能，可将pci14e4,4331修改为pci14e4,43a0或者pci14e4,4353，以便驱动AirPortDriverBrcmNIC并开启相应功能。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/AirportBrcmFixup\n")])])]),a("details",[a("summary",[t._v("【进阶】OC引导")]),t._v(" "),a("p",[t._v("对于OpenCore，kext注入顺序为AirportBrcmFixup-AirportBrcmFixup/Contents/Plugins/AirPortBrcm4360_Injector-AirportBrcmFixup/Contents/Plugins/AirPortBrcmNIC_Injector。\n")])]),a("p"),t._v(" "),a("p",[t._v("对于BCM94352z/DW1560，需使用AirportBrcmFixup和BrcmPatchRAM。BrcmPatchRAM链接如下。该方法适用于10.11至10.14系统。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/BrcmPatchRAM\n")])])]),a("p",[t._v("若蓝牙失效，则将BrcmFirmwareData.kext、BrcmPatchRAM2.kext、AirportBrcmFixup.kext复制到/Library/Extensions目录下，以解决睡眠唤醒后可能引起的蓝牙失效的问题。重启前需要重建系统的缓存。")]),t._v(" "),a("details",[a("summary",[t._v("【进阶】OC引导")]),t._v(" "),a("p",[t._v("对于OpenCore，kext注入顺序为Injector-Data-RAM。\n")])]),a("p"),t._v(" "),a("h4",{attrs:{id:"realtek-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realtek-2"}},[t._v("#")]),t._v(" Realtek")]),t._v(" "),a("p",[t._v("对于RTL8192CU，可采用以下链接。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://drive.google.com/file/d/1ZtdMqlvKBbHULJhl1u9omuLOy6j0vx48/view\n")])])]),a("h4",{attrs:{id:"免驱卡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#免驱卡"}},[t._v("#")]),t._v(" 免驱卡")]),t._v(" "),a("p",[t._v("列表如下。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("无线网卡型号")]),t._v(" "),a("th",[t._v("蓝牙型号")]),t._v(" "),a("th",[t._v("连接器型号")]),t._v(" "),a("th",[t._v("使用的Mac产品型号")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("BCM943602CDP")]),t._v(" "),a("td",[t._v("20703A1")]),t._v(" "),a("td",[t._v("U.FL Connector")]),t._v(" "),a("td",[t._v("iMac16,x"),a("br"),t._v("iMac17,1"),a("br"),t._v("iMac18,x")])]),t._v(" "),a("tr",[a("td",[t._v("BCM94360CD")]),t._v(" "),a("td",[t._v("20702B0")]),t._v(" "),a("td",[t._v("U.FL Connector")]),t._v(" "),a("td",[t._v("iMac14,x"),a("br"),t._v("iMac15,x"),a("br"),t._v("MacPro6,1")])]),t._v(" "),a("tr",[a("td",[t._v("BCM94331CD")]),t._v(" "),a("td",[t._v("BRCM20702（05AC:828b）")]),t._v(" "),a("td",[t._v("U.FL Connector")]),t._v(" "),a("td",[t._v("iMac13,x")])]),t._v(" "),a("tr",[a("td",[t._v("BCM94360CS2")]),t._v(" "),a("td",[t._v("BRCM20702（05AC:821f）")]),t._v(" "),a("td",[t._v("MHF4 Connector")]),t._v(" "),a("td",[t._v("MacBookAir5,x"),a("br"),t._v("MacBookAir6,x"),a("br"),t._v("MacBookAir7,x")])]),t._v(" "),a("tr",[a("td",[t._v("BCM943602CS")]),t._v(" "),a("td",[t._v("20703A1")]),t._v(" "),a("td",[t._v("MHF4 Connector")]),t._v(" "),a("td",[t._v("MacBookPro12,x")])]),t._v(" "),a("tr",[a("td",[t._v("BCM94360CS")]),t._v(" "),a("td",[t._v("20702B0")]),t._v(" "),a("td",[t._v("MHF4 Connector")]),t._v(" "),a("td",[t._v("Macmini7,x"),a("br"),t._v("MacBookPro11,x")])]),t._v(" "),a("tr",[a("td",[t._v("BCM94360CSAX")]),t._v(" "),a("td",[t._v("BRCM20702（05AC:828c）")]),t._v(" "),a("td",[t._v("MHF4 Connector")]),t._v(" "),a("td",[t._v("MacBookPro10,x")])]),t._v(" "),a("tr",[a("td",[t._v("BCM94350")]),t._v(" "),a("td",[t._v("4350C1")]),t._v(" "),a("td",[t._v("MHF4 Connector")]),t._v(" "),a("td",[t._v("MacBook8,1")])]),t._v(" "),a("tr",[a("td",[t._v("BCM94350")]),t._v(" "),a("td",[t._v("20703A2")]),t._v(" "),a("td",[t._v("MHF4 Connector")]),t._v(" "),a("td",[t._v("MacBookPro13,x")])]),t._v(" "),a("tr",[a("td",[t._v("BCM94350")]),t._v(" "),a("td",[t._v("4350")]),t._v(" "),a("td",[t._v("MHF4 Connector")]),t._v(" "),a("td",[t._v("MacBookPro14,x")])]),t._v(" "),a("tr",[a("td",[t._v("BCM4364")]),t._v(" "),a("td",[t._v("4364B0")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("iMac19,x"),a("br"),t._v("Macmini8,1"),a("br"),t._v("MacBookPro15,x"),a("br"),t._v("iMacPro1,1 - 4364"),a("br"),t._v("MacPro7,1- 4364B3")])]),t._v(" "),a("tr",[a("td",[t._v("BCM4355")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("MacBookAir8,1")])]),t._v(" "),a("tr",[a("td",[a("em",[t._v("以下为传统无线网卡")])]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("BCM4328")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("iMac5,1-9,1"),a("br"),t._v("MacBook3,1-4,1"),a("br"),t._v("MacBookAir1,1-2,1")])]),t._v(" "),a("tr",[a("td",[t._v("BCM4321")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("MacPro2,1"),a("br"),t._v("Macmini4,1")])]),t._v(" "),a("tr",[a("td",[t._v("BCM4322")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("MacBook5,1"),a("br"),t._v("MacBookPro5,1 and 7,1"),a("br"),t._v("MacBookAir3,1-5,1"),a("br"),t._v("MacPro5,1")])]),t._v(" "),a("tr",[a("td",[t._v("BCM43224")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("MacBook6,1"),a("br"),t._v("MacBookPro6,1")])]),t._v(" "),a("tr",[a("td",[t._v("BCM4331")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("Macmini5,x"),a("br"),t._v("MacBookPro8,x-10,x")])]),t._v(" "),a("tr",[a("td",[t._v("AR242X/AR542X")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("MacBook1,1"),a("br"),t._v("Macmini1,1-2,1")])]),t._v(" "),a("tr",[a("td",[t._v("AR5418")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("MacBook2,1")])]),t._v(" "),a("tr",[a("td",[t._v("AR928X")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("iMac10,1-11,x"),a("br"),t._v("MacPro3,1")])]),t._v(" "),a("tr",[a("td",[t._v("AR93XX")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("iMac12,x")])])])]),t._v(" "),a("h4",{attrs:{id:"其它"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),a("p",[t._v("对于MT7610，可使用以下kext。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://d86o2zu8ugzlg.cloudfront.net/mediatek-craft/drivers/MT7612_7610U_D5.0.1.25_SDK1.0.2.18_UI5.0.0.27_20151209.zip\n")])])]),a("p",[t._v("对于RT5370，可使用以下kext。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://d86o2zu8ugzlg.cloudfront.net/mediatek-craft/drivers/RTUSB_D2870-4.2.9.2_UI-4.0.9.6_2013_11_29.zip\n")])])]),a("h4",{attrs:{id:"替代方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替代方法"}},[t._v("#")]),t._v(" 替代方法")]),t._v(" "),a("p",[t._v("对于无解的网卡，可以更换网卡、购买黑苹果USB网卡或者将手机作为热点。USB网卡可尝试以下驱动。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/chris1111/WirelessAdapterCloverBigSur\nhttps://github.com/chris1111/Wireless-USB-OC-Big-Sur-Adapter\nhttps://github.com/chris1111/USB-Wireless-Utility\nhttps://github.com/chris1111/WIFI-Dlink-Catalina-Panel-V2\n")])])]),a("p",[t._v("对于iPhone用户，将手机接入电脑，手机开启个人热点功能，即可使用手机热点。对于Android用户，可安装"),a("code",[t._v("hoRNDIS")]),t._v("，然后将手机连接到电脑，开启安卓手机的USB网络共享即可。下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/jwise/HoRNDIS\n")])])]),a("h3",{attrs:{id:"声卡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声卡"}},[t._v("#")]),t._v(" 声卡")]),t._v(" "),a("h4",{attrs:{id:"通过applealc驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过applealc驱动"}},[t._v("#")]),t._v(" 通过AppleALC驱动")]),t._v(" "),a("p",[t._v("注意，该kext不能与VoodooHDA、RealtekALC、CloverALC、HDA Blocker、HDAEnabler1/2/3共用。下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/AppleALC/releases\n")])])]),a("p",[t._v("放置后若睡眠唤醒无声，则可放置CodecCommander。虽然CodecCommander已并入AppleALC，但仅放置AppleALC可能无法解决该问题。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/Sniki/EAPD-Codec-Commander\n")])])]),a("h5",{attrs:{id:"寻找layout-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#寻找layout-id"}},[t._v("#")]),t._v(" 寻找Layout ID")]),t._v(" "),a("p",[t._v("保证系统SLE下有AppleHDA.kext，在Clover的kexts文件夹中放入AppleALC.kext。打开Hackintool，切换到Audio，通过下拉列表可查看该硬件支持的Layout ID。也可通过以下链接查看。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/AppleALC/wiki/Supported-codecs\n")])])]),a("p",[t._v("在启动参数中添加以下参数，其中#为所查询到的Layout ID之一。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("alcid=#\n")])])]),a("p",[t._v("若为Windows/Linux与macOS双引导，则打开Clover的config.plist，在Devices选项卡勾选Audio项下的ResetHDA选项。")]),t._v(" "),a("p",[t._v("重启后检查声卡是否被驱动，可在终端运行以下命令。若三者都存在，则驱动成功。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('kextstat | grep -E "AppleHDA|AppleALC|Lilu"\n')])])]),a("p",[t._v("若无声，则可更换不同的Layout ID。本机使用的Layout ID为12。打开IORegistryExplorer并搜索HDEF，若存在该设备，其下有AppleHDAController，右侧属性中的alc-layout-id不是修补前默认的07000000，且包含AppleHDAInput设备，则AppleALC已成功修补。")]),t._v(" "),a("p",[t._v("如果睡眠后机器无法无声，则还需要在Clover的kexts中放入CodecCommander.kext。注意，尽管Hackintool提示该kexts已被合并到AppleALC中，但不放置时仍会出现问题。")]),t._v(" "),a("h5",{attrs:{id:"写入layout-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写入layout-id"}},[t._v("#")]),t._v(" 写入Layout ID")]),t._v(" "),a("p",[t._v("确保该Layout ID可用后，可将该配置写入Clover的配置文件中。打开Hackintool，切换到Audio，通过下拉列表选择Layout ID。切换到Intel-Patch，选择Devices/Properties，勾选Auto Detect Changes、Audio，点击Generate Patch生成声卡驱动补丁。完成后保存以替换。")]),t._v(" "),a("p",[t._v("也可手动生成设备信息。打开Clover的config.plist，在Devices选项卡下选择Properties。")]),t._v(" "),a("p",[t._v("先在左侧栏添加声卡的设备路径。可在Hackintool中查找，也可通过gfxutil，命令如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("gfxutil -f HDEF\ngfxutil -f HDAS\ngfxutil -f HDAU\n")])])]),a("p",[t._v("然后右侧栏添加以下条目即可。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Properties Key")]),t._v(" "),a("th",[t._v("Properties Value")]),t._v(" "),a("th",[t._v("Value Type")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("alc-layout-id")]),t._v(" "),a("td",[t._v("21")]),t._v(" "),a("td",[t._v("NUMBER")])]),t._v(" "),a("tr",[a("td",[t._v("hda-gfx")]),t._v(" "),a("td",[t._v("onboard-1")]),t._v(" "),a("td",[t._v("STRING")])]),t._v(" "),a("tr",[a("td",[t._v("AAPL,slot-name")]),t._v(" "),a("td",[t._v("Internal")]),t._v(" "),a("td",[t._v("STRING")])])])]),t._v(" "),a("h5",{attrs:{id:"实现顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现顺序"}},[t._v("#")]),t._v(" 实现顺序")]),t._v(" "),a("p",[t._v("对于AppleALC，指定Layout ID的优先级顺序为启动参数"),a("code",[t._v("alcid=#")]),t._v("->配置文件Device Properties中的alc-layout-id属性（仅适用Apple硬件）->配置文件Device Properties中的layout-id属性（适用Apple/非Apple硬件）。")]),t._v(" "),a("h5",{attrs:{id:"常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),a("details",[a("summary",[t._v("【进阶】对于OC")]),t._v(" "),a("h6",{attrs:{id:"同一布局在clover起作用而opencore不起作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同一布局在clover起作用而opencore不起作用"}},[t._v("#")]),t._v(" 同一布局在Clover起作用而OpenCore不起作用")]),t._v(" "),a("p",[t._v("一般是由于IRQ冲突，可尝试使用SSDTTime中的SSDT-HPET热补丁，链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/corpnewt/SSDTTime\n")])])]),a("h6",{attrs:{id:"_10-15中由于电源状态更改导致的kernel-panic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-15中由于电源状态更改导致的kernel-panic"}},[t._v("#")]),t._v(" 10.15中由于电源状态更改导致的kernel panic")]),t._v(" "),a("p",[t._v("在OpenCore的配置文件中设置Kernel-Quirks-PowerTimeoutKernelPanic为True。\n")])]),a("p"),t._v(" "),a("h4",{attrs:{id:"通过voodoohda驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过voodoohda驱动"}},[t._v("#")]),t._v(" 通过VoodooHDA驱动")]),t._v(" "),a("p",[t._v("在AMD上运行AppleALC可能会不起作用，则可使用VoodooHDA。下载kext并放到Clover中即可，链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://sourceforge.net/projects/voodoohda/\nhttps://github.com/chris1111/VoodooHDA-2.9.2-Clover-V14/releases\n")])])]),a("h4",{attrs:{id:"插孔检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插孔检测"}},[t._v("#")]),t._v(" 插孔检测")]),t._v(" "),a("p",[t._v("使用JackFix即可，支持ResetHDA和3.5mm耳机接口类型切换。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/fewtarius/jackfix\n")])])]),a("h3",{attrs:{id:"键盘与鼠标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键盘与鼠标"}},[t._v("#")]),t._v(" 键盘与鼠标")]),t._v(" "),a("h4",{attrs:{id:"驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#驱动"}},[t._v("#")]),t._v(" 驱动")]),t._v(" "),a("p",[t._v("对于一般的PS2键盘，在Clover的kexts放入"),a("code",[t._v("VoodooPS2Controller.kext")]),t._v("，重启即可驱动。下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://bitbucket.org/RehabMan/os-x-voodoo-ps2-controller/downloads/\nhttps://github.com/acidanthera/VoodooPS2\n")])])]),a("p",[t._v("对于MSI GK-701键盘，可用以下kext。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/osy/GK701HIDDevice\n")])])]),a("h4",{attrs:{id:"键位映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键位映射"}},[t._v("#")]),t._v(" 键位映射")]),t._v(" "),a("p",[t._v("安装"),a("code",[t._v("Karabiner Elements")]),t._v("，链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/pqrs-org/Karabiner-Elements\n")])])]),a("p",[t._v("打开后选择Complex Modifications，点击Add rule-Import more rules from the Internet，在网页中搜索并安装"),a("code",[t._v("PC-Style Shortcuts")]),t._v("、"),a("code",[t._v("PC-Style Modifiers")]),t._v("、"),a("code",[t._v("Adobe Photoshop")]),t._v("，并在添加的类别上点击Enable All，完成键位映射调整。")]),t._v(" "),a("h3",{attrs:{id:"usb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usb"}},[t._v("#")]),t._v(" USB")]),t._v(" "),a("h4",{attrs:{id:"端口限制解除补丁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#端口限制解除补丁"}},[t._v("#")]),t._v(" 端口限制解除补丁")]),t._v(" "),a("p",[t._v("macOS规定USB端口的数量应少于15个，其中一个USB3.0的接口应按两个端口的配额计算。若端口数量大于15个，可能会导致系统无法启动，需用以下kexts补丁解除，在引导器的config.plist中添加即可。")]),t._v(" "),a("p",[t._v("注意，完成以下端口定制后，应当及时取消该补丁。")]),t._v(" "),a("h5",{attrs:{id:"el-capitan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#el-capitan"}},[t._v("#")]),t._v(" El Capitan")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: change 15 port limit to 26\nName: AppleUSBXHCIPCI\nFind: 83BD8CFE FFFF10\nReplace: 83BD8CFE FFFF1B\n")])])]),a("h5",{attrs:{id:"sierra"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sierra"}},[t._v("#")]),t._v(" Sierra")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: Port limit increase\nName: com.apple.driver.usb.AppleUSBXHCI\nFind: 83BD74FF FFFF10\nReplace: 83BD74FF FFFF1B\n")])])]),a("p",[t._v("或使用以下补丁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: change 15 port limit to 26\nName: AppleUSBXHCIPCI\nFind: 83BD74FF FFFF10\nReplace: 83BD74FF FFFF1B\n")])])]),a("h5",{attrs:{id:"high-sierra"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#high-sierra"}},[t._v("#")]),t._v(" High Sierra")]),t._v(" "),a("p",[t._v("对于10.13.6，应使用以下补丁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: USB 10.13.6+ by PMHeart\nName: com.apple.driver.usb.AppleUSBXHCI\nFind: 837D880F 0F83A704 0000\nReplace: 837D880F 90909090 9090\n")])])]),a("p",[t._v("对于10.13.4-10.13.5，应使用以下补丁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: USB 10.13.4+ by PMHeart\nName: com.apple.driver.usb.AppleUSBXHCI\nFind: 837D940F 0F839704 0000\nReplace: 837D940F 90909090 9090\n")])])]),a("p",[t._v("对于10.13-10.13.3，应使用以下补丁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: change 15 port limit to 24\nName: com.apple.driver.usb.AppleUSBXHCIPCI\nFind: 837D8C10\nReplace: 837D8C1B\n")])])]),a("h5",{attrs:{id:"mojave"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mojave"}},[t._v("#")]),t._v(" Mojave")]),t._v(" "),a("p",[t._v("对于10.14.5-10.14.6，应使用以下补丁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: USB Port Limit Patch 1 PMHeart/DalianSky\nName: com.apple.iokit.IOUSBHostFamily\nFind: 83FB0F0F\nReplace: 83FB3F0F\n\nComment: USB Port Limit Patch 2 PMHeart/DalianSky\nName: com.apple.iokit.IOUSBHostFamily\nFind: 83E30FD3\nReplace: 83E33FD3\n\nComment: USB Port Limit Patch 3 PMHeart/DalianSky\nName: com.apple.driver.usb.AppleUSBXHCI\nFind: 83FB0F0F\nReplace: 83FB3F0F\n\nComment: USB Port Limit Patch 4 PMHeart/DalianSky\nName: com.apple.driver.usb.AppleUSBXHCI\nFind: 83FF0F0F\nReplace: 83FF3F0F\n")])])]),a("p",[t._v("对于10.14.4，应使用以下补丁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: USB Port Limit Patch 1 ©PMHeart\nName: com.apple.iokit.IOUSBHostFamily\nFind: 83FB0F0F 870B0400 00\nReplace: 83FB3F0F 870B0400 00\n\nComment: USB Port Limit Patch 2 ©PMHeart\nName: com.apple.driver.usb.AppleUSBXHCI\nFind: 4183FF0F 0F839404 0000\nReplace: 4183FF3F 0F839404 0000\n\nComment: USB Port Limit Patch 3 ©PMHeart\nName: com.apple.iokit.IOUSBHostFamily\nFind: 83E30FD3 E34109DF\nReplace: 83E33FD3 E34109DF\n")])])]),a("p",[t._v("对于10.14-10.14.3，应使用以下补丁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: Port limit increase (Ricky)\nName: com.apple.driver.usb.AppleUSBXHCI\nFind: 83FB0F0F 838F0400 00\nReplace: 83FB0F90 90909090 90\n")])])]),a("h5",{attrs:{id:"catalina"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#catalina"}},[t._v("#")]),t._v(" Catalina")]),t._v(" "),a("p",[t._v("对于10.15-10.15.1，应使用以下补丁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: USB port limit patch #1 10.15.x modify by DalianSky(credit ydeng)\nName: com.apple.iokit.IOUSBHostFamily\nFind: 83FB0F0F\nReplace: 83FB3F0F\n\nComment: USB Port limit patch #2 10.15.x modify by DalianSky\nName: com.apple.driver.usb.AppleUSBXHCI\nFind: 83F90F0F\nReplace: 83F93F0F\n")])])]),a("h4",{attrs:{id:"端口定制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#端口定制"}},[t._v("#")]),t._v(" 端口定制")]),t._v(" "),a("p",[t._v("在Clover下放置USBInjectAll.kext，下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://bitbucket.org/RehabMan/os-x-usb-inject-all/downloads/\n")])])]),a("p",[t._v("确保cofig.pilst的ACPI更名中已应用EHC1->EH01、EHC2->EH02以及XHCI/XHC1->XHC_补丁。然后通过以下方法之一处理。")]),t._v(" "),a("h5",{attrs:{id:"通过hackintool-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过hackintool-2"}},[t._v("#")]),t._v(" 通过Hackintool")]),t._v(" "),a("p",[t._v("打开Hackintool，点击USB，确保芯片组已被正确识别。把所有端口删除后刷新，然后分别取USB3与USB2的可移动设备对每一个接口进行插拔，每插拔一次设备将出现一个条目的改变，记录对应端口名称及USB类型，如下表所示。注意，TypeC接口需要正反各插拔一次。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("设备类型")]),t._v(" "),a("th",[t._v("端口类型")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("永久连接设备的USB端口（如蓝牙）")]),t._v(" "),a("td",[t._v("Internal")])]),t._v(" "),a("tr",[a("td",[t._v("与USB3端口相连的HSxx端口（USB2）")]),t._v(" "),a("td",[t._v("USB3")])]),t._v(" "),a("tr",[a("td",[t._v("内部集线器（通常连接到端口PR11和PR21）")]),t._v(" "),a("td",[t._v("Internal")])]),t._v(" "),a("tr",[a("td",[t._v("TypeC正反插端口一致")]),t._v(" "),a("td",[t._v("TypeC+Sw")])]),t._v(" "),a("tr",[a("td",[t._v("TypeC正反插端口不一致")]),t._v(" "),a("td",[t._v("TypeC")])])])]),t._v(" "),a("p",[t._v("完成后导出，将SSDT-EC.aml、SSDT-UIAC.aml和SSDT-USBX.aml放到Clover的ACPI/patched下。或将SSDT-EC.aml和USBPorts.kext分别放置到ACPI/patched和kexts/Other下。若放置的是SSDT，则需保留USBInjectAll.kext，若为SSDT+kext则需删除。")]),t._v(" "),a("p",[t._v("重启后若需检测是否成功，可插入USB3.0设备，通过系统报告查看速率是否为5G/s。或使用IOregistryExplorer，搜索XHC，可查看所有端口是否都已正常工作。")]),t._v(" "),a("h5",{attrs:{id:"通过usbmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过usbmap"}},[t._v("#")]),t._v(" 通过USBMap")]),t._v(" "),a("p",[t._v("打开终端并运行以下命令以打开脚本。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git clone https://github.com/corpnewt/USBMap\ncd USBMap\nchmod +x USBMap.command\n")])])]),a("p",[t._v("脚本打开后会核查USBInjectAll是否被正确加载、USB控制器是否被正确识别。脚本需要USBInjectAll的版本在0.70以上。若已完成放置但无法识别，则可能还需要XHCI_unsupported.kext。")]),t._v(" "),a("p",[t._v("若端口数量大于15个，则需要应用端口解除补丁或在脚本主菜单上选择"),a("code",[t._v("S. Exclude SSxx Ports")]),t._v("或"),a("code",[t._v("H. Exclude HSxx Ports")]),t._v("端口以禁用SSxx（一般为USB3.0）或HSxx（一般为USB2.0）端口，完成后重启。若需要取消禁用，则选择"),a("code",[t._v("C. Clear Exclusions")]),t._v("。")]),t._v(" "),a("p",[t._v("选择"),a("code",[t._v("D. Discover Ports")]),t._v("，脚本将读取默认USB列表。依次将每个端口用USB设备插拔，过程与使用Hackintool相同。每发现新的端口会有提示，直接忽略即可。完成后按"),a("code",[t._v("Q")]),t._v("并回车，返回主菜单。")]),t._v(" "),a("p",[t._v("选择"),a("code",[t._v("P. Edit Plist & Create SSDT/Kext")]),t._v("，可以看到刚才所识别的结果。需根据实际情况修改端口类型，数字代号与端口类型对应关系如下。设置要求与使用Hackintool一致。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数字")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("0 (0x0)")]),t._v(" "),a("td",[t._v("（USB2.0）Type A connector")])]),t._v(" "),a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("Mini-AB connector")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("ExpressCard")])]),t._v(" "),a("tr",[a("td",[t._v("3 (0x3)")]),t._v(" "),a("td",[t._v("（USB3.0）USB 3 Standard-A connector")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("USB 3 Standard-B connector")])]),t._v(" "),a("tr",[a("td",[t._v("5")]),t._v(" "),a("td",[t._v("USB 3 Micro-B connector")])]),t._v(" "),a("tr",[a("td",[t._v("6")]),t._v(" "),a("td",[t._v("USB 3 Micro-AB connector")])]),t._v(" "),a("tr",[a("td",[t._v("7")]),t._v(" "),a("td",[t._v("USB 3 Power-B connector")])]),t._v(" "),a("tr",[a("td",[t._v("8")]),t._v(" "),a("td",[t._v("Type C connector - USB2-only")])]),t._v(" "),a("tr",[a("td",[t._v("9 (0x9)")]),t._v(" "),a("td",[t._v("（TypeC+Sw）Type C connector - USB2 and SS with Switch")])]),t._v(" "),a("tr",[a("td",[t._v("10")]),t._v(" "),a("td",[t._v("Type C connector - USB2 and SS without Switch")])]),t._v(" "),a("tr",[a("td",[t._v("11-254")]),t._v(" "),a("td",[t._v("Reserved")])]),t._v(" "),a("tr",[a("td",[t._v("255 (0xFF)")]),t._v(" "),a("td",[t._v("（Internal）Proprietary connector")])])])]),t._v(" "),a("p",[t._v("若需要将编号为5和7的端口改为USB2.0接口，则输入以下命令并回车。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// T表示现在要更改端口的类型（Type），0表示端口类型\nT:5,7:0\n")])])]),a("p",[t._v("也可直接用plist编辑器打开脚本编辑，一般在用户目录/USBMap/Scripts中。")]),t._v(" "),a("p",[t._v("设置完成后可选择"),a("code",[t._v("K. Build USBMap.kext")]),t._v("或"),a("code",[t._v("S. Build SSDT-UIAC")]),t._v("，其中第一种需把生成的kext复制到Clover的kexts目录下且删除USBInjectAll，而第二种需把生成的SSDT复制到Clover的ACPI/patched下且保留USBInjectAll。推荐第二种。")]),t._v(" "),a("p",[t._v("注意，在按下创建SSDT之前，可以调节SSDT的形式，默认为三个SSDT，可设置为一个SSDT。生成的所有文件都在USBMap/Results中。")]),t._v(" "),a("h4",{attrs:{id:"修复唤醒断线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修复唤醒断线"}},[t._v("#")]),t._v(" 修复唤醒断线")]),t._v(" "),a("p",[t._v("在Clover的kexts文件夹放入USBPower.kext，下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://blog.xjn819.com/wp-content/uploads/2019/10/USBPower.kext_.zip\n")])])]),a("p",[t._v("在kext上右键选择显示包内容，打开Contents/Info.plist，展开IOKitPersonalities_x86_64，将iMac19,1改成正在使用的机型，保存并重启即可。")]),t._v(" "),a("h4",{attrs:{id:"修复usb导致的关机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修复usb导致的关机"}},[t._v("#")]),t._v(" 修复USB导致的关机")]),t._v(" "),a("p",[t._v("下载以下文件，放置到引导器的ACPI/hotpatch部分即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/khronokernel/Opencore-Vanilla-Desktop-Guide/blob/master/extra-files/FixShutdown-USB-SSDT.dsl\n")])])]),a("h3",{attrs:{id:"蓝牙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#蓝牙"}},[t._v("#")]),t._v(" 蓝牙")]),t._v(" "),a("h4",{attrs:{id:"atheros-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#atheros-3"}},[t._v("#")]),t._v(" Atheros")]),t._v(" "),a("p",[t._v("本机蓝牙为与无线网卡Atheros AR9565共建的Bluetooth 4.0。打开以下链接并下载，直接放到Clover的kexts文件夹即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/zxystd/AthBluetoothFirmware\n")])])]),a("details",[a("summary",[t._v("【进阶】OC引导")]),t._v(" "),a("p",[t._v("对于OpenCore，放置到Kexts文件夹后需要在config.plist中添加对应条目，注意Ath3kBTInjector必须加载在Ath3kBT后面。\n")])]),a("p"),t._v(" "),a("h4",{attrs:{id:"intel-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intel-3"}},[t._v("#")]),t._v(" Intel")]),t._v(" "),a("p",[t._v("可尝试IntelBluetoothFirmware。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/OpenIntelWireless/IntelBluetoothFirmware\n")])])]),a("h4",{attrs:{id:"broadcom-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#broadcom-3"}},[t._v("#")]),t._v(" Broadcom")]),t._v(" "),a("p",[t._v("对于USB蓝牙，可尝试BrcmPatchRAM。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/BrcmPatchRAM\n")])])]),a("p",[t._v("对于DW1820A，可使用以下kexts。如果蓝牙睡眠唤醒后无法工作，需要添加引导参数bpr_probedelay=100、bpr_initialdelay=300、bpr_postresetdelay=300。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 10.14及以下\nhttps://images.daliansky.net/d/YmBXVA8q/blog/DW1820A/DW1820A_BT_for_Mojave_v2.5.5.zip\n\n# 10.15及以上\nhttps://images.daliansky.net/d/YmBXVA8q/blog/DW1820A/DW1820A_BT_for_Catalina_and_BigSur_v2.5.5.zip\n")])])]),a("details",[a("summary",[t._v("【进阶】OC引导")]),t._v(" "),a("p",[t._v("对于OpenCore，kext注入顺序为BrcmBluetoothInjector-BrcmFirmwareData-BrcmPatchRAM3。\n")])]),a("p"),t._v(" "),a("h4",{attrs:{id:"启用蓝牙关闭按钮"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启用蓝牙关闭按钮"}},[t._v("#")]),t._v(" "),a("s",[t._v("启用蓝牙关闭按钮")])]),t._v(" "),a("p",[t._v("已过时。")]),t._v(" "),a("details",[a("summary"),t._v(" "),a("p",[t._v("找到SLE下的IOBluetoothFamily.kext，复制到桌面后右键单击显示包内容，进入Contents/PlugIns，在BroadcomBluetoothHostControllerUSBTransport.kext上右键单击显示包内容，打开Contents/info.plist。用搜索功能搜索2652，修改idProduct和idVendor为自己的ID，注意需进行进制转换。从Windows上得到的是十六进制，需转换为十进制，可利用下面的进制转换工具。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://tool.oschina.net/hexconvert/\n")])])]),a("p",[t._v("将修改好的IOBluetoothFamily.kext用Kext Utility进行安装，重启即可。注意，此法可以实现蓝牙关闭，但需要从Windows重启进入Mac后才可用。\n")])]),a("p"),t._v(" "),a("h4",{attrs:{id:"冷启动与热启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#冷启动与热启动"}},[t._v("#")]),t._v(" 冷启动与热启动")]),t._v(" "),a("p",[t._v("冷启动指从关机状态下进入系统，热启动指从一个系统重启至另一个系统。")]),t._v(" "),a("p",[t._v("少数蓝牙设备中嵌入了蓝牙所需的固件，因此它们开机即可直接使用。但是许多设备依靠固件上载器才能正常运行，此过程中，系统启动蓝牙设备的电源，固件上传器检测到该设备已打开电源，然后将固件发送（上传）到缓冲区中。")]),t._v(" "),a("p",[t._v("由于Mac无法加载相关蓝牙固件，即使设备被正确识别，也无法与任何其他外围设备配对。热启动时，Windows/Linux已完成固件上传，重启时缓冲区固件仍存在，因此蓝牙能够起作用。而冷启动时将重置蓝牙设备，导致上载固件的丢失。")]),t._v(" "),a("h4",{attrs:{id:"蓝牙无法驱动的替代方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#蓝牙无法驱动的替代方案"}},[t._v("#")]),t._v(" 蓝牙无法驱动的替代方案")]),t._v(" "),a("p",[t._v("可通过Linux虚拟机完成蓝牙固件上传操作。")]),t._v(" "),a("p",[t._v("从Clover的kexts文件夹删除BrcmPatchRAM.kext和BTFirmwareUploader.kext。以Ubuntu为例，下载镜像后打开Vmware Fusion，新建虚拟机并选择Ubuntu系统，CD/DVD驱动器选择刚才的镜像，完成配置。")]),t._v(" "),a("p",[t._v("关闭虚拟机，切换到虚拟机设置页。选择"),a("code",[t._v("USB和蓝牙")]),t._v("首选项，取消选中"),a("code",[t._v("与Linux共享蓝牙设备")]),t._v("，列表中将出现一个蓝牙设备。返回主界面并点击"),a("code",[t._v("启动磁盘")]),t._v("，选择CD/DVD为启动项，退出设置并启动虚拟机。")]),t._v(" "),a("p",[t._v("镜像引导成功后，选择"),a("code",[t._v("试用Ubuntu")]),t._v("。待开机完成后，点击虚拟机的蓝牙选项以将蓝牙设备连接至Ubuntu。等待4-5秒钟后取消蓝牙连接，固件已由虚拟机上传完成，蓝牙将正常运行。关闭虚拟机，VMware将保存计算机状态，只要不让机器进入睡眠或重启状态，就可以使用蓝牙。")]),t._v(" "),a("p",[t._v("如果在睡眠/重新启动后失去了蓝牙功能，重新打开虚拟机，连接再断开蓝牙即可。")]),t._v(" "),a("p",[t._v("也可通过以下TinyCore虚拟机，使用方法同Ubuntu。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://drive.google.com/file/d/1Ydm7Hd0d5XOKQkb02EMpm-6E-WQFiMkh/view\n")])])]),a("h3",{attrs:{id:"传感器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传感器"}},[t._v("#")]),t._v(" 传感器")]),t._v(" "),a("p",[t._v("在Clover的kexts下放入VirtualSMC包内的"),a("code",[t._v("SMCLightSensor.kext")]),t._v("、"),a("code",[t._v("SMCProcessor.kext")]),t._v("和"),a("code",[t._v("SMCSuperIO.kext")]),t._v("即可。")]),t._v(" "),a("h3",{attrs:{id:"电池"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#电池"}},[t._v("#")]),t._v(" 电池")]),t._v(" "),a("details",[a("summary",[t._v("【进阶】对于Big Sur")]),t._v(" "),a("p",[t._v("Big Sur可能已经无须进行以下修补。\n")])]),a("p"),t._v(" "),a("h4",{attrs:{id:"环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境配置"}},[t._v("#")]),t._v(" 环境配置")]),t._v(" "),a("p",[t._v("在Clover的kexts中放入VirtualSMC包的SMCBatteryManager.kext。打开Maciasl，若出现错误提示，则检查Clover的config.plist，Acpi-Fixs下所有选项都应取消勾选。若仍然不行，则换另一个版本的MaciASL。")]),t._v(" "),a("h4",{attrs:{id:"修改dsdt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改dsdt"}},[t._v("#")]),t._v(" 修改DSDT")]),t._v(" "),a("h5",{attrs:{id:"查找字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找字段"}},[t._v("#")]),t._v(" 查找字段")]),t._v(" "),a("p",[t._v("打开MaciASL，正常情况下自动打开系统的DSDT。搜索"),a("code",[t._v("EmbeddedControl")]),t._v("。可能会有一到多个，注意包含EC字样的那一个，记住其名称，本机为"),a("code",[t._v("EC0R")]),t._v("。")]),t._v(" "),a("p",[t._v("搜索"),a("code",[t._v("Field ([EC名称]")]),t._v("，本机为"),a("code",[t._v("Field (EC0R")]),t._v("。查看Field里所有大于8的元素，全部进行记录后，逐个搜索它们的名字。若查找结果只有一处，表明此变量仅被定义但未被使用，因此可以将此字段从记录结果中删除，否则将此字段保留。记录时需注明每个字段的对应位数（16位/32位/大于32位）。")]),t._v(" "),a("p",[t._v("点击"),a("code",[t._v("Patch")]),t._v("，复制下列代码，确认下面Change(s)处的数字不为零后点击"),a("code",[t._v("Apply")]),t._v("-"),a("code",[t._v("Close")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 添加B1B2方法，用于16位字段拆分\ninto method label B1B2 remove_entry;\ninto definitionblock code_regex . insert\nbegin\nMethod (B1B2, 2, NotSerialized)\\n\n{\\n\nReturn(Or(Arg0, ShiftLeft(Arg1, 8)))\\n\n}\\n\nend;\n\n# 添加B1B4方法，用于32位字段拆分\ninto method label B1B4 remove_entry;\ninto definitionblock code_regex . insert\nbegin\nMethod (B1B4, 4, NotSerialized)\\n\n{\\n\n\tStore(Arg3, Local0)\\n\n\tOr(Arg2, ShiftLeft(Local0, 8), Local0)\\n\n\tOr(Arg1, ShiftLeft(Local0, 8), Local0)\\n\n\tOr(Arg0, ShiftLeft(Local0, 8), Local0)\\n\n\tReturn(Local0)\\n\n}\\n\nend;\n")])])]),a("details",[a("summary",[t._v("【拓展】方法原理")]),t._v(" "),a("p",[t._v("对于B1B2，Arg0和Arg1为拆分后的两个8位寄存器。取Arg0作为低8位，将Arg1运用左移运算变成16位数据，此时它的的低8位全是0，再运用或运算拼接成完整的16位数据。B1B4同理。\n")])]),a("p"),t._v(" "),a("details",[a("summary",[t._v("【进阶】其它方法")]),t._v(" "),a("p",[t._v("W16B方法如下，将拆分后的两个8位寄存器Arg0和Arg1合并后写入到Arg2。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Method (W16B, 3, NotSerialized)\n{\n    Arg0 = Arg2\n    Arg1 = (Arg2 >> 0x08)\n}\n")])])])]),t._v(" "),a("p",[t._v("16/32位的字段需要拆分成多个8位的字段，而大于32位的字段需要修改其偏移地址。")]),t._v(" "),a("details",[a("summary",[t._v("【提示】注意事项")]),t._v(" "),a("p",[t._v("如果某个寄存器被全局定义过，例如在根路径"),a("code",[t._v("\\")]),t._v("或"),a("code",[t._v("\\_SB")]),t._v("路径下的Field里面有相同名字的寄存器，那么搜索该寄存器被调用情况时应注意区分此处的调用是不是EC下的这一个，如果不是，说明此处调用使用的是全局定义，对EC没有影响，不需要记录下来。\n")])]),a("p"),t._v(" "),a("h5",{attrs:{id:"_16-32位字段处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-32位字段处理"}},[t._v("#")]),t._v(" 16/32位字段处理")]),t._v(" "),a("p",[t._v("对于16/32位的字段，需要拆分成2/4个8位字段。")]),t._v(" "),a("p",[t._v("以"),a("code",[t._v("HWAK, 16")]),t._v("为例。这是个16位的字段，可以拆分成两个8位的字段，分别命名为"),a("code",[t._v("AK00")]),t._v("和"),a("code",[t._v("AK01")]),t._v("。命名可以随意，但是要确保命名为4个字符，且这个命名没有出现过，如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 拆分前\nHWAK, 16\n\n// 拆分后\nAK00, 8\nAK01, 8\n")])])]),a("p",[t._v("然后需要写出以下类似正则表达式的代码，以替换DSDT里的字段。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("into device label EC code_regex HWAK,\\s+16, replace_matched begin AK00,8,AK01,8, end;\n")])])]),a("p",[t._v("相关含义解释如下，内容均根据自己的DSDT代码替换。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("内容")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("EC")]),t._v(" "),a("td",[t._v("搜索EmbeddedControl，在其上方的Device（不是Field里的参数）")])]),t._v(" "),a("tr",[a("td",[t._v("HWAK,\\s+16,")]),t._v(" "),a("td",[t._v("拆分前的字段（"),a("code",[t._v("\\s+")]),t._v("表示多个空格，故此句含义为搜索HWAK, 16,）")])]),t._v(" "),a("tr",[a("td",[t._v("AK00,8,AK01,8,")]),t._v(" "),a("td",[t._v("拆分后的字段")])])])]),t._v(" "),a("p",[t._v("把写好的正则表达式复制到Patch里，在中间的Before/After和下面的Patch/Change两个地方都显示内容后，点击Apply-Close即完成一个变量的替换。")]),t._v(" "),a("p",[t._v("再以"),a("code",[t._v("SBCH, 32")]),t._v("为例。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 拆分前\nSBCH, 32\n\n// 拆分后\nCH00, 8\nCH01, 8\nCH02, 8\nCH03, 8\n")])])]),a("p",[t._v("正则表达式如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("into device label EC code_regex SBCH,\\s+32 replace_matched begin CH00,8,CH01,8,CH02,8,CH03,8 end;\n")])])]),a("p",[t._v("注意，所替换的"),a("code",[t._v("AK00,8,AK01,8,")]),t._v("逗号前后均无空格。若所替换的字段为列表中的最后一个，则Patch时会提示0 change(s)，此时应该把正则表达式中的"),a("code",[t._v("XSN1,\\s+16,")]),t._v("改为"),a("code",[t._v("XSN1,\\s+16")]),t._v("，因最后一个字段没有逗号。")]),t._v(" "),a("p",[t._v("点击Compile，此时会出现报错，除Errors以外的不需要理会。对于报错内容为Object does not exist的情况，主要是替换字段名后，没有替换访问该字段的位置所导致。")]),t._v(" "),a("p",[t._v("双击报错信息以定位至错误位置，向上检索以找到该段代码包含在哪个method里。")]),t._v(" "),a("p",[t._v("对于16位的字段，使用下面的正则表达式。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("into method label \\_WAK code_regex \\(HWAK, replaceall_matched begin (B1B2(AK00,AK01), end;\n")])])]),a("p",[t._v("相关含义解释如下，内容均根据自己的DSDT代码替换。注意，名字首位为"),a("code",[t._v("_")]),t._v("时，需要手动添加起始符"),a("code",[t._v("\\")]),t._v("，如"),a("code",[t._v("_WAK")]),t._v("应写为"),a("code",[t._v("\\_WAK")]),t._v("。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("内容")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("\\_WAK")])]),t._v(" "),a("td",[t._v("代码对应的method")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\(HWAK,")])]),t._v(" "),a("td",[t._v("替换前的字段")])]),t._v(" "),a("tr",[a("td",[t._v("(B1B2(AK00,AK01),")]),t._v(" "),a("td",[t._v("替换后的字段")])])])]),t._v(" "),a("p",[t._v("对于32位的字段则使用下列表达式。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("into method label GBIF code_regex \\(SBCH, replaceall_matched begin (B1B4(CH00,CH01,CH02,CH03), end;\n")])])]),a("p",[t._v("若出现"),a("code",[t._v("\\_SB.PCI0.LPC.EC.HWAK")]),t._v("调用的特殊情况，修改替换字段即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("into method label \\_WAK code_regex \\(\\\\\\_SB.PCI0.LPC.EC.HWAK replaceall_matched begin \\(\\\\_SB.B1B2(\\\\_SB.PCI0.LPC.EC.AK00, \\\\_SB.PCI0.LPC.EC.AK01) end;\n")])])]),a("details",[a("summary",[t._v("【进阶】16/32位寄存器拆分读取/写入")]),t._v(" "),a("p",[t._v("修改16位寄存器拆分读取的语法如下，其中Arg0、Arg1为拆分后的两个8位寄存器名称。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("B1B2 (Arg0, Arg1)\n")])])]),a("p",[t._v("示例如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 修改前\nIf ((^^PCI0.LPCB.EC0.BADC < 0x0C80))\n\n# 修改后\nIf ((B1B2 (^^PCI0.LPCB.EC0.ADC0, ^^PCI0.LPCB.EC0.ADC1) < 0x0C80))\n")])])]),a("p",[t._v("修改16位寄存器拆分写入的语法如下，其中Arg0、Arg1为拆分后的两个8位寄存器名称，Arg2为被写入的数值或数据对象。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("W16B (Arg0, Arg1，Arg2)\n")])])]),a("p",[t._v("示例如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 修改前\nSMW0 = Arg3\n\n# 修改后\nW16B (MW00, MW01, Arg3)\n")])])]),a("p",[t._v("修改32位寄存器拆分读取的语法如下，其中Arg0、Arg1、Arg2、Arg3为拆分后的四个8位寄存器名称。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("B1B4 (Arg0, Arg1, Arg2, Arg3)\n")])])]),a("p",[t._v("示例如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 修改前\nIf ((B1CH == 0x0050694C))\n\n# 修改后\nIf ((B1B4 (BC0H, BC1H, BC2H, BC3H) == 0x0050694C))\n")])])]),a("p",[t._v("修改32位寄存器读取的语法如下，其中Offset为原寄存器的偏移量，Length为原寄存器的长度。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("RECB (Offset, Length)\n")])])]),a("p",[t._v("示例如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 原始定义\nOffset (0x8F),\nB1MA,   64,\n\n# 修改前\nIFMN = B1MA\n\n# 修改后\nIFMN = RECB (0x8F, 0x40)\n")])])]),a("p",[t._v("修改32位以上寄存器写入的语法如下，其中Offset为原寄存器的偏移量，Length为原寄存器的长度，Obj为被写入的值或者数据对象。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("WECB (Offset, Length, Obj)\n")])])]),a("p",[t._v("示例如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 原始定义\nOffset (0x18),\nSMPR,   8,\nSMST,   8,\nSMAD,   8,\nSMCM,   8,\nSMD0,   256,\n\n# 修改前\nSMD0 = FB4\n\n# 修改后\nWECB (0x1C, 0x0100, FB4) // 0x1C=0x18+0x04\n")])])])]),t._v(" "),a("h5",{attrs:{id:"超过32位字段处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#超过32位字段处理"}},[t._v("#")]),t._v(" 超过32位字段处理")]),t._v(" "),a("p",[t._v("先Patch下面的两段代码，其中H_EC改成计算机的Device。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 改的字段挨着左括号时所用代码\ninto method label RE1B parent_label H_EC remove_entry;\ninto method label RECB parent_label H_EC remove_entry;\n\ninto device label H_EC insert\nbegin\nMethod (RE1B, 1, NotSerialized)\\n\n{\\n\n\tOperationRegion(ERAM, EmbeddedControl, Arg0, 1)\\n\n\tField(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\\n\n\tReturn(BYTE)\\n\n}\\n\nMethod (RECB, 2, Serialized)\\n\n// Arg0 - offset in bytes from zero-based EC\\n\n// Arg1 - size of buffer in bits\\n\n{\\n\n\tShiftRight(Arg1, 3, Arg1)\\n\n\tName(TEMP, Buffer(Arg1) { })\\n\n\tAdd(Arg0, Arg1, Arg1)\\n\n\tStore(0, Local0)\\n\n\tWhile (LLess(Arg0, Arg1))\\n\n\t{\\n\n\tStore(RE1B(Arg0), Index(TEMP, Local0))\\n\n\tIncrement(Arg0)\\n\n\tIncrement(Local0)\\n\n\t}\\n\n\tReturn(TEMP)\\n\n}\\n\nend;\n\n// 改的字段挨着右括号时所用代码\ninto method label WE1B parent_label H_EC remove_entry;\ninto method label WECB parent_label H_EC remove_entry;\ninto device label H_EC insert\nbegin\nMethod (WE1B, 2, NotSerialized)\\n\n{\\n\n\tOperationRegion(ERAM, EmbeddedControl, Arg0, 1)\\n\n\tField(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\\n\n\tStore(Arg1, BYTE)\\n\n}\\n\nMethod (WECB, 3, Serialized)\\n\n// Arg0 - offset in bytes from zero-based EC\\n\n// Arg1 - size of buffer in bits\\n\n// Arg2 - value to write\\n\n{\\n\n\tShiftRight(Add(Arg1,7), 3, Arg1)\\n\n\tName(TEMP, Buffer(Arg1) { })\\n\n\tStore(Arg2, TEMP)\\n\n\tAdd(Arg0, Arg1, Arg1)\\n\n\tStore(0, Local0)\\n\n\tWhile (LLess(Arg0, Arg1))\\n\n\t{\\n\n\tWE1B(Arg0, DerefOf(Index(TEMP, Local0)))\\n\n\tIncrement(Arg0)\\n\n\tIncrement(Local0)\\n\n\t}\\n\n}\\n\nend;\n")])])]),a("details",[a("summary",[t._v("【拓展】方法原理")]),t._v(" "),a("p",[t._v("对于左括号的代码如下。对于RECB，Arg0是原寄存器的偏移量（即Offset），Arg1是原寄存器的长度。对于RE1B，Arg0是偏移量。")]),t._v(" "),a("p",[t._v("RECB通过Arg1确定需要拆分的8位寄存器个数，通过While循环及偏移量自增方法调用RE1B从Field中循环读取出每个8位数据，并拼接成原始寄存器定义长度的数据返回结果。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Method (RE1B, 1, NotSerialized)\n{\n    OperationRegion (ERM2, EmbeddedControl, Arg0, One) // 作用域为EmbeddedControl，Arg0定义起始偏移量\n    Field (ERM2, ByteAcc, NoLock, Preserve)\n    {\n        BYTE,   8 // 指定一个8位寄存器映射对应区域数据\n    }\n\n    Return (BYTE) // 返回结果\n}\n\nMethod (RECB, 2, Serialized)\n{\n    Arg1 = ((Arg1 + 0x07) >> 0x03) // 计算Arg1除8并向上取整，位移运算更快\n    Name (TEMP, Buffer (Arg1){}) // 初始化作为返回值的Buffer\n    Arg1 += Arg0 // 加上偏移量，即循环终止值\n    Local0 = Zero // 定义Buffer索引为0\n    While ((Arg0 < Arg1)) // 进行循环，循环次数为初次计算的Arg1\n    {\n        TEMP [Local0] = RE1B (Arg0) // 调用RE1B依次返回8位数据\n        Arg0++ // 偏移量自增\n        Local0++ // 索引自增\n    }\n\n    Return (TEMP) // 返回最终结果\n}\n")])])]),a("p",[t._v("对于右括号的代码如下。对于WECB，Arg0是原寄存器的偏移量（即Offset），Arg1是原寄存器的长度，Arg2为被写入的数据或对象。对于WE1B，Arg0是偏移量，Arg1为从Buffer取出的一个字节数据（即8位长度数据）。")]),t._v(" "),a("p",[t._v("WECB通过Arg1确定需要拆分的8位寄存器个数，创建Buffer对象将Arg2转化为若干个字节的数据（一个字节等于8位），通过While循环以及偏移量自增方法调用WE1B，向Field中循环写入每个8位数据。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Method (WE1B, 2, NotSerialized)\n{\n    OperationRegion (ERM2, EmbeddedControl, Arg0, One) // EmbeddedControl为EC作用域，Arg0定义起始偏移量\n    Field (ERM2, ByteAcc, NoLock, Preserve)\n    {\n        BYTE,   8 // 指定一个8位寄存器映射对应区域数据\n    }\n\n    BYTE = Arg1 // 将Arg1通过寄存器间接写入对应区域\n}\n\nMethod (WECB, 3, Serialized)\n{\n    Arg1 = ((Arg1 + 0x07) >> 0x03) // 计算Arg1除8并向上取整，位移运算更快\n    Name (TEMP, Buffer (Arg1){}) // 初始化作为写入值的Buffer\n    TEMP = Arg2 // 将被写入的数据或对象赋值给TEMP\n    Arg1 += Arg0 // 加上偏移量，即循环终止值\n    Local0 = Zero // 定义Buffer索引为0\n    While ((Arg0 < Arg1)) // 进行循环，循环次数为初次计算的Arg1\n    {\n        WE1B (Arg0, DerefOf (TEMP [Local0])) // 调用WE1B依次写入8位数据\n        Arg0++ // 偏移量自增\n        Local0++ // 索引自增\n    }\n}\n")])])]),a("p",[t._v("有些笔记本的EC使用SystemMemory作用域，则EC、RE1B和WE1B的Field起始偏移量也需要加上原始定义数值，可参照如下所示代码进行修改。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Scope (_SB.PCI0.LPCB.EC0)\n{\n    OperationRegion (ERAX, SystemMemory, 0xFE708300, 0x0100)\n    Field (ERAX, ByteAcc, Lock, Preserve)\n    {\n    ···\n    Method (RE1B, 1, NotSerialized)\n    {\n        Local0 = (0xFE708300 + Arg0)\n        OperationRegion (ERM2, SystemMemory, Local0, One)\n")])])])]),t._v(" "),a("p",[t._v("计算大于32位字段的偏移量，逢八进一，从起始值往下算。以下面的代码为例子。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Offset (0x04),\n\tCMCM,   8, // 0x04\n\tCMD1,   8, // 0x05=0x04+1（8位是1字节）\n\tCMD2,   8, // 0x06\n\tCMD3,   8, // 0x07\n\tOffset (0x18), // 这里空了一些，按开头所给出的偏移量计算\n\tOffset (0x19),\n\tSMST,   8, // 0x19\n\tMBMN,   80, // 0x1A\n\tMBPN,   96, // 0x25=0x1A（上一个的起始地址）+A（80/8=10，上一个占了10个字节，16进制表示即为A）+1\n\tGPB1,   8, // 0x32=0x25+C（96位占了12个字节，16进制表示即为C）+1\n\tGPB2,   8, // 0x33\n\tGPB3,   8, // 0x34\n\tGPB4,   8, // 0x35\n")])])]),a("p",[t._v("搜索DSDT中该字段被调用的地方。不同于16/32位字段的处理，超过32位的字段只需用偏移量和该字段位数代替字段本身。")]),t._v(" "),a("p",[t._v("若所替换字段挨着左括号，以"),a("code",[t._v("Store(MBMN, XXXX)")]),t._v("改为"),a("code",[t._v("Store(RECB(0x1A, 80), XXXX)")]),t._v("为例，利用下列正则表达式进行替换，Patch即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("into method label XXXX code_regex \\(SBMN, replaceall_matched begin (RECB(0xA0,128), end;\n")])])]),a("p",[t._v("相关含义解释如下，内容均根据自己的DSDT代码替换。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("内容")]),t._v(" "),a("th",[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("XXXX")]),t._v(" "),a("td",[t._v("代码对应的method")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\(SBMN,")])]),t._v(" "),a("td",[t._v("替换前的字段")])]),t._v(" "),a("tr",[a("td",[t._v("(RECB(0xA0,128),")]),t._v(" "),a("td",[t._v("替换后的字段，其中0xA0为所计算出来的偏移量，128为位数")])])])]),t._v(" "),a("p",[t._v("若所替换字段挨着右括号，以"),a("code",[t._v("Store (Arg3, \\_SB.PCI0.LPCB.EC0.SMD0)")]),t._v("改为"),a("code",[t._v("Store (Arg3, \\_SB.PCI0.LPCB.EC0.WECB(0x1C,264,Arg3)")]),t._v("为例，则利用下列正则表达式进行替换。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("into method label SMRW code_regex Store\\s\\(Arg3,\\s\\\\_SB.PCI0.LPCB.EC0.SMD0\\) replaceall_matched begin \\\\_SB.PCI0.LPCB.EC0.WECB(0x1C,264,Arg3) end;\n")])])]),a("h5",{attrs:{id:"应用修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用修改"}},[t._v("#")]),t._v(" 应用修改")]),t._v(" "),a("p",[t._v("再次点击Compile，确认无Error后，点击菜单File-Save As，类型选ACPI Machine Language Binary，名称为DSDT.aml。保存后复制到CLOVER/ACPI/patched，重启即可。")]),t._v(" "),a("h4",{attrs:{id:"说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),a("h5",{attrs:{id:"正则表达式写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式写法"}},[t._v("#")]),t._v(" 正则表达式写法")]),t._v(" "),a("p",[t._v("16位和32位的区别在于，16位会调用B1B2方法，而32位会调用B1B4方法。因此正则表达式的基本格式如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 16位字段\ninto method label [代码对应method] code_regex [替换前的字段，需要包含逗号] replaceall_matched begin (B1B2[替换后的字段，需要包含逗号] end;\n\n// 32位字段\ninto method label [代码对应method] code_regex [替换前的字段，需要包含逗号] replaceall_matched begin (B1B4[替换后的字段，需要包含逗号] end;\n\n// 特殊字段的处理（把整个地址复制进去即可）\nB1B2(特殊字段1，特殊字段2)\nB1B4(特殊字段1，特殊字段2，特殊字段3，特殊字段4)\n")])])]),a("h5",{attrs:{id:"补丁结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补丁结构"}},[t._v("#")]),t._v(" 补丁结构")]),t._v(" "),a("p",[t._v("将前面所有Patch过的代码放到一起，即称为本机的电量补丁，示例如下。")]),t._v(" "),a("p",[t._v("注意，前面所有通过正则表达式的操作，其实可以直接在原文件上修改，而不必通过Patch的方式。通过Patch方式主要是便于补丁整合与传播。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 字段拆分\ninto device label EC0 code_regex B0C3,\\s+16, replace_matched begin C3HG,8,C3HF,8, end;\ninto device label EC0 code_regex B0SN,\\s+16, replace_matched begin BSVN,8,BSVM,8, end;\ninto device label EC0 code_regex B1SN,\\s+16 replace_matched begin SBUY,8,SBUP,8 end;\n\n// 替换调用方法\ninto method label _BIX code_regex \\(B0C3, replaceall_matched begin (B1B2(C3HG,C3HF), end;\ninto method label BIFA code_regex \\(B0SN, replaceall_matched begin (B1B2(BSVN,BSVM), end;\ninto method label BIFA code_regex \\(B1SN, replaceall_matched begin (B1B2(SBUY,SBUP), end;\n\n// 数据处理方法\ninto method label B1B2 remove_entry;\ninto definitionblock code_regex . insert\nbegin\nMethod (B1B2, 2, NotSerialized)\\n\n{\\n\nReturn(Or(Arg0, ShiftLeft(Arg1, 8)))\\n\n}\\n\nend;\n")])])]),a("h5",{attrs:{id:"mutex置零检查及修复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mutex置零检查及修复"}},[t._v("#")]),t._v(" Mutex置零检查及修复")]),t._v(" "),a("h6",{attrs:{id:"检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查"}},[t._v("#")]),t._v(" 检查")]),t._v(" "),a("p",[t._v("有些机器的Mutex（互斥体，用于处理多线程同步）对象的SyncLevel（同步等级）不为0，这种情况下macOS无法正常执行多线程同步，造成的结果是电池状态等可能无法获取（如果电池相关的Method处于不同的同步等级，在macOS下会造成数据获取的异常，出现0%的情况），此时应打上Mutex置0补丁来解决。")]),t._v(" "),a("p",[t._v("绝大多数笔记本ACPI的Mutex都是默认置0的，但是一些联想品牌的笔记本往往有几个Mutex的SyncLevel并不是0。因此，在完成电池补丁后应检查Mutex是否属于这种情况。")]),t._v(" "),a("p",[t._v("在DSDT中搜索Mutex，看出现的几个对象的SyncLevel是否为0即可。")]),t._v(" "),a("h6",{attrs:{id:"修复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修复"}},[t._v("#")]),t._v(" 修复")]),t._v(" "),a("p",[t._v("可通过ACPI更名的方式。以Mutex (BATM, 0x07)为例，先转换BATM为十六进制代码，得到42 41 54 4D。在前后加上完整定义的十六进制代码，最终得到01 42 41 54 4D 07，其中01代表Mutex，07代表SyncLevel的0x07。目的是使Mutex对象置0，因此更名如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: Set Mutex BATM, 0x07 to 0x0\nFind: 01424154 4D07\nRepalce: 01424154 4D00\n")])])]),a("p",[t._v("也可通过Fix Mutex with non-zero SyncLevel补丁。打开MaciASL，点击Patch，在左侧资源树中选择"),a("code",[t._v("_RehabMan Laptop")]),t._v("-"),a("code",[t._v("[sys]Fix Mutex with non-zero SyncLevel")]),t._v("，点击Apply-Close即可。")]),t._v(" "),a("p",[t._v("若没有该资源，则需要在偏好设置中添加补丁来源。常见补丁来源如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# _RehabMan Laptop\nhttp://raw.github.com/RehabMan/Laptop-DSDT-Patch/master\n\n# _OS-X-ACPI-Debug\nhttp://raw.github.com/RehabMan/OS-X-ACPI-Debug/master\n\n# _VoodooI2C-Patches\nhttp://raw.github.com/alexandred/VoodooI2C-Patches/master\n\n# Sourceforge\nhttp://maciasl.sourceforge.net\n\n# Gigabyte\nhttp://maciasl.sourceforge.net/pjalm/gigabyte\n\n# ASUS\nhttp://maciasl.sourceforge.net/pjalm/asus\n\n# Audio HDMI 5 Series\nhttps://raw.github.com/toleda/audio_hdmi_5series/master\n\n# Audio HDMI HD3000/Sandy Bridge/6 Series\nhttps://raw.github.com/toleda/audio_hdmi_hd3000/master\n\n# Audio HDMI HD4000/Ivy Bridge/7 Series\nhttps://raw.github.com/toleda/audio_hdmi_hd4000/master\n\n# Audio HDMI UEFI Audio dsdt edits - Desktop/Laptop/Intel NUC\nhttps://raw.github.com/toleda/audio_hdmi_uefi/master\n\n# Audio Realtek ALC injection\nhttps://raw.github.com/toleda/audio_ALCInjection/master\n\n# Airport PCIe Half Mini\nhttps://raw.github.com/toleda/airport_pcie-hm/master\n\n# Audio HDMI HD4600/Haswell/8 Series\nhttps://raw.github.com/toleda/audio_hdmi_8series/master\n\n# PJALM General\nhttp://pjalm.info/repos/general/\n\n# PJALM Graphics\nhttp://pjalm.info/repos/graphics/\n\n# PJALM Intel Series 6\nhttp://pjalm.info/repos/intel6/\n\n# PJALM Intel Series 7\nhttp://pjalm.info/repos/intel7/\n\n# PJALM ASUS\nhttp://pjalm.info/repos/asus/\n\n# PJALM Gigabyte\nhttp://pjalm.info/repos/gigabyte/\n\n# PJALM MSI\nhttp://pjalm.info/repos/msi/\n\n# PJALM ASRock\nhttp://pjalm.info/repos/asrock/\n\n# PJALM Zotac\nhttp://pjalm.info/repos/zotac/\n\n# Gigabyte\nhttp://www.tonymacx86.com/DSDT/\n\n# HP ProBook 4x30s\nhttps://raw.githubusercontent.com/RehabMan/HP-ProBook-4x30s-DSDT-Patch/master\n")])])]),a("h3",{attrs:{id:"触控板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#触控板"}},[t._v("#")]),t._v(" 触控板")]),t._v(" "),a("p",[t._v("以下的所有操作对软件版本均有要求。MaciASL需为RehabMan编译版，IORegistryExplorer需为2.1版本。")]),t._v(" "),a("h4",{attrs:{id:"判断触控板类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断触控板类型"}},[t._v("#")]),t._v(" 判断触控板类型")]),t._v(" "),a("p",[t._v("在Windows下打开设备管理器，若在人体学输入设备下存在I2C HID设备，则一般为I2C HID触摸板。查看触摸板设备的属性，若显示位置是"),a("code",[t._v("在 I2C HID设备 上")]),t._v("，则得证。否则触控板一般为PS2类型。")]),t._v(" "),a("h4",{attrs:{id:"ps2触控板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ps2触控板"}},[t._v("#")]),t._v(" PS2触控板")]),t._v(" "),a("p",[t._v("用VoodooPS2Controller.kext驱动即可。")]),t._v(" "),a("h4",{attrs:{id:"i2c触控板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i2c触控板"}},[t._v("#")]),t._v(" I2C触控板")]),t._v(" "),a("h5",{attrs:{id:"记录irq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#记录irq"}},[t._v("#")]),t._v(" 记录IRQ")]),t._v(" "),a("p",[t._v("在Windows下打开设备管理器，在"),a("code",[t._v("I2C HID设备")]),t._v("上右键选择属性，点击详细信息，选择"),a("code",[t._v("位置路径")]),t._v("并记录。然后切换到资源选项卡，记录IRQ后面的数字，该数字代表的是APIC Pin。本机示例如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// IRQ\n0x0000006D (109)\n\n// 位置路径，其中ETPD为触控板BIOS名称\nACPI(_SB_)#ACPI(PCI0)#ACPI(I2C1)#ACPI(ETPD)\n")])])]),a("p",[t._v("也可在Mac下查看APIC Pin。打开IORegistryExplorer，右上角搜索触控板BIOS名称，本机即为ETPD，在详细页中记录IOInterruptSpecifiers的值即可。")]),t._v(" "),a("h5",{attrs:{id:"确定工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#确定工作原理"}},[t._v("#")]),t._v(" 确定工作原理")]),t._v(" "),a("p",[t._v("I2C触控板均用VoodooI2C驱动，支持轮询模式或中断模式。")]),t._v(" "),a("p",[t._v("轮询模式是Voodoo的安全模式，每隔一个特定的时间扫描一次触摸板的状态，然后改变鼠标指针坐标。中断模式是触摸板在Windows/Linux等其他系统的正常工作方式。")]),t._v(" "),a("p",[t._v("在DSDT中定义如下。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("定义")]),t._v(" "),a("th",[t._v("含义")]),t._v(" "),a("th",[t._v("适用范围")]),t._v(" "),a("th",[t._v("效率")]),t._v(" "),a("th",[t._v("驱动难度")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("APIC中断")]),t._v(" "),a("td",[t._v("使用APIC控制器")]),t._v(" "),a("td",[t._v("无IOInterruptSpecifier，或APIC Pin<2F")]),t._v(" "),a("td",[t._v("最高")]),t._v(" "),a("td",[t._v("能否以该模式驱动由硬件决定")])]),t._v(" "),a("tr",[a("td",[t._v("GPIO中断")]),t._v(" "),a("td",[t._v("DSDT在SBFG中存在有效GPIO Pin，CRS方法中返回(SBFB,SBFG)，并应用启用GPIO控制器的补丁")]),t._v(" "),a("td",[t._v("有IOInterruptSpecifier且APIC Pin>2F")]),t._v(" "),a("td",[t._v("较高")]),t._v(" "),a("td",[t._v("较难")])]),t._v(" "),a("tr",[a("td",[t._v("轮询")]),t._v(" "),a("td",[t._v("CRS方法中只返回SBFB或者(SBFB,SBFI)")]),t._v(" "),a("td",[t._v("/")]),t._v(" "),a("td",[t._v("较低")]),t._v(" "),a("td",[t._v("较易")])])])]),t._v(" "),a("p",[t._v("也就是说，对于原始DSDT，以APIC Pin为判断依据，若小于2F则默认使用APIC中断，若大于2F则默认使用GPIO控制器。但由于GPIO控制器默认不工作，因此系统会采用轮询模式，如下图所示。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006tNbRwly1g9j9syjzgdj30jg0m8jst.jpg",alt:""}})]),t._v(" "),a("details",[a("summary",[t._v("【进阶】DSDT中的相关代码")]),t._v(" "),a("p",[t._v("找到触摸板的相关代码后，查看SBFI方法，该方法用于实现APIC中断。该方法中的数值即为APIC Pin，当APIC Pin大于2F时，可判断为轮询模式。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Name (SBFI, ResourceTemplate ()\n{\n    Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y25)\n    {\n        0x00000000,\n    }\n})\n")])])]),a("p",[t._v("查看SBFB方法，该方法可被轮询或中断调用。部分DSDT中不含SBFB而含I2CM，两者基本一致，I2CM相比SBFB具有更多的内容。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Name (SBFB, ResourceTemplate ()\n{\n    I2cSerialBusV2 (0x004C, ControllerInitiated, 0x00061A80,\n        AddressingMode7Bit, "\\\\_SB.PCI0.I2C1",\n        0x00, ResourceConsumer, _Y2A, Exclusive,\n        )\n})\n')])])]),a("p",[t._v("查看SBFG方法，该方法中的数值即为GpioInt，用于中断处理。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Name (SBFG, ResourceTemplate ()\n{\n    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,\n        "\\\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,\n        )\n        {   // Pin list\n            0x0000\n        }\n})\n')])])])]),t._v(" "),a("h5",{attrs:{id:"轮询模式驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#轮询模式驱动"}},[t._v("#")]),t._v(" 轮询模式驱动")]),t._v(" "),a("p",[t._v("下载VoodooI2C，按照以下规则将驱动放入Clover的kexts中（一个核心驱动+一个目标驱动）并重启。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 必放核心驱动\nVoodooI2C.kext\n\n# 根据情况选择目标驱动\nVoodooI2CELAN.kext - ELAN触摸板\nVoodooI2CHID.kext - I2C触摸板\nVoodooI2CFTE.kext - FTE触摸板\nVoodooI2CSynaptics.kext - Synaptics触摸板\nVoodooI2CAtmelMXT.kext - MXT触摸屏\nVoodooI2CUPDDEngine.kext - UPDD多点触控引擎\n")])])]),a("p",[t._v("对于小部分机型（如华硕笔记本），触控板已被驱动。若未被驱动，则需要对DSDT应用"),a("code",[t._v("Windows补丁")]),t._v("，根据出厂时随附的操作系统应用对应的补丁，一般用Windows 10 Patch。")]),t._v(" "),a("details",[a("summary",[t._v("【非必要不使用】操作系统补丁")]),t._v(" "),a("p",[t._v("以下方法选择一种即可。")]),t._v(" "),a("p",[t._v("DSDT修改法如下。")]),t._v(" "),a("p",[t._v("打开MaciASL，保证有VoodooI2C的补丁源。点击Patch，选择VoodooI2C下的"),a("code",[t._v("Windows 10 Patch")]),t._v("补丁，Apply-Close后保存DSDT，并将新的DSDT放入Clover文件夹的ACPI/patched下即可。")]),t._v(" "),a("p",[t._v("若MaciASL无法加载出补丁源，可直接在Patch界面复制以下代码内容。根据操作系统自行选择。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('# Windows 10 DSDT Patch for VoodooI2C\ninto_all method code_regex If\\s+\\([\\\\]?_OSI\\s+\\(\\"Windows\\s2015\\"\\)\\) replace_matched begin If(LOr(_OSI("Darwin"),_OSI("Windows 2015"))) end;\n\n# Windows 8.1 DSDT Patch for VoodooI2C\ninto_all method code_regex If\\s+\\([\\\\]?_OSI\\s+\\(\\"Windows\\s2013\\"\\)\\) replace_matched begin If(LOr(_OSI("Darwin"),_OSI("Windows 2013"))) end;\n\n# Windows 8 DSDT Patch for VoodooI2C\ninto_all method code_regex If\\s+\\([\\\\]?_OSI\\s+\\(\\"Windows\\s2012\\"\\)\\) replace_matched begin If(LOr(_OSI("Darwin"),_OSI("Windows 2012"))) end;\n\n# Windows 7 DSDT Patch for VoodooI2C\ninto_all method code_regex If\\s+\\([\\\\]?_OSI\\s+\\(\\"Windows\\s2009\\"\\)\\) replace_matched begin If(LOr(_OSI("Darwin"),_OSI("Windows 2009"))) end;\n')])])]),a("p",[t._v("SSDT热补丁法如下。")]),t._v(" "),a("p",[t._v("打开MaciASL，新建文件并复制以下内容，保存为SSDT-XOSI.aml。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('DefinitionBlock ("", "SSDT", 2, "DRTNIA", "XOSI", 0x00001000)\n{\n    Method (XOSI, 1, NotSerialized)\n    {\n        Store (Package (0x11)\n            {\n                "Windows 2001", \n                "Windows 2001.1", \n                "Windows 2001 SP1", \n                "Windows 2001 SP2", \n                "Windows 2001 SP3", \n                "Windows 2006", \n                "Windows 2006 SP1", \n                "Windows 2009", \n                "Windows 2012", \n                "Windows 2013", \n                "Microsoft Windows NT", \n                "Microsoft Windows", \n                "Microsoft WindowsME: Millennium Edition"\n            }, Local0)\n        If (_OSI ("Darwin"))\n        {\n            Return (LNotEqual (Ones, Match (Local0, MEQ, Arg0, MTR, Zero, Zero)))\n        }\n        Else\n        {\n            Return (_OSI (Arg0))\n        }\n    }\n}\n')])])]),a("p",[t._v("将SSDT-XOSI.aml放置在Clover文件夹的ACPI/patched目录下，然后在config.plist下添加以下改名补丁即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: change _OSI to XOSI\nFind: 5F4F5349\nReplace: 584F5349\n")])])])]),t._v(" "),a("h5",{attrs:{id:"中断模式驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中断模式驱动"}},[t._v("#")]),t._v(" 中断模式驱动")]),t._v(" "),a("h6",{attrs:{id:"查看apic-pin值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看apic-pin值"}},[t._v("#")]),t._v(" 查看APIC Pin值")]),t._v(" "),a("p",[t._v("不放置VoodooI2C驱动，并应用Windows补丁。打开IORegistryExplorer，搜索前面保存的BIOS设备名称，然后定位到"),a("code",[t._v("IOInterruptSpecifiers")]),t._v("，最前面的两位数即为"),a("code",[t._v("APIC Pin")]),t._v("值。")]),t._v(" "),a("p",[t._v("若无IOInterruptSpecifiers项或APIC Pin值不大于"),a("code",[t._v("2F")]),t._v("，则直接跳到安装步骤，否则继续下列步骤。")]),t._v(" "),a("h6",{attrs:{id:"移除apic中断控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移除apic中断控制器"}},[t._v("#")]),t._v(" 移除APIC中断控制器")]),t._v(" "),a("p",[t._v("用MaciASL打开设备的DSDT，搜索"),a("code",[t._v("BIOS设备名称")]),t._v("（此处为ETPD），定位到触控板设备的代码块下。注意，以下操作全部在触控板设备的代码块下进行，请勿跳到其他设备下的代码操作。")]),t._v(" "),a("p",[t._v("在触控板设备的代码块下寻找类似以下的代码。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings\n{\n    Name (SBFI, ResourceTemplate ()\n    {\n        I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,\n            AddressingMode7Bit, "\\\\_SB.PCI0.I2C1",\n            0x00, ResourceConsumer, , Exclusive,\n            )\n        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )\n        {\n            0x0000006D,\n        }\n    })\n    Return (SBFI)\n}\n')])])]),a("p",[t._v("在此段代码中，需将"),a("code",[t._v("SBFI")]),t._v("改为"),a("code",[t._v("SBFB")]),t._v("，并删除以下内容。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )\n{\n    0x0000006D,\n}\n")])])]),a("p",[t._v("以上面代码为例，修改后变为如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings\n{\n    Name (SBFB, ResourceTemplate ()\n    {\n        I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,\n            AddressingMode7Bit, "\\\\_SB.PCI0.I2C1",\n            0x00, ResourceConsumer, , Exclusive,\n            )\n        })\n        Return (SBFB)\n}\n')])])]),a("h6",{attrs:{id:"确定触控板固定类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#确定触控板固定类型"}},[t._v("#")]),t._v(" 确定触控板固定类型")]),t._v(" "),a("p",[t._v("在触控板的DSDT下寻找以下代码块。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Name (SBFG, ResourceTemplate ()\n{\n    GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,\n        "\\\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,\n        )\n        {   // Pin list\n            0x0000\n        }\n})\n')])])]),a("p",[t._v("若此段代码出现在设备的根目录，则称为触控板设备已经"),a("code",[t._v("root固定")]),t._v("。若出现在CRS方法中，则称为触控板设备已经"),a("code",[t._v("CRS固定")]),t._v("。如果Pin list对应非零值，称为"),a("code",[t._v("well-root固定")]),t._v("和"),a("code",[t._v("well-CRS固定")]),t._v("。若此段代码未出现，则称为触控板设备"),a("code",[t._v("未固定")]),t._v("。")]),t._v(" "),a("p",[t._v("若未固定，则先将以上代码段复制到设备根目录下，示例如下。复制完成后跳到GPIO固定步骤。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Scope (_SB.PCI0.I2C0)\n{\n       Device (ETPD)\n       {\n           Name (SBFG, ResourceTemplate ()\n           {\n                GpioInt (Level, ActiveLow, Exclusive, PullUp, 0x0000,\n                        "\\\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,\n                        )\n                        {   // Pin list\n                            0x0000\n                        }\n           })\n           ......\n')])])]),a("p",[t._v("若为root固定或CRS固定，需在触控板代码块下查找"),a("code",[t._v("_CRS")]),t._v("方法，并确定以下代码是否存在。若存在，则证明设备已固定好，可直接跳到安装步骤，否则需继续GPIO固定步骤。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Return (ConcatenateResTemplate (SBFB, SBFG))\n")])])]),a("p",[t._v("若为well-root固定或well-CRS固定，则直接跳到安装步骤。")]),t._v(" "),a("h6",{attrs:{id:"gpio固定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gpio固定"}},[t._v("#")]),t._v(" GPIO固定")]),t._v(" "),a("p",[t._v("定位到代码块的_CRS方法，删除此方法的Return语句并用以下Return语句替换，以确保DSDT通知系统设备已固定好GPIO。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Return (ConcatenateResTemplate (SBFB, SBFG))\n")])])]),a("h6",{attrs:{id:"驱动安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#驱动安装"}},[t._v("#")]),t._v(" 驱动安装")]),t._v(" "),a("p",[t._v("驱动的安装包括驱动放置、禁用系统驱动、应用补丁，其中放置驱动操作与轮询模式完全一致。对于系统驱动，需禁用AppleIntelLpssI2C.kext和AppleIntelLpssI2CController.kext，方法见说明。应用补丁需应用Windows补丁和GPIO补丁。")]),t._v(" "),a("p",[t._v("Windows补丁的应用与轮询模式完全一致，GPIO补丁的应用提供以下两种形式。")]),t._v(" "),a("h6",{attrs:{id:"热补丁法应用gpio补丁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#热补丁法应用gpio补丁"}},[t._v("#")]),t._v(" 热补丁法应用GPIO补丁")]),t._v(" "),a("p",[t._v("在OC-little包中取"),a("code",[t._v("SSDT-GPIO.aml")]),t._v("并放置在Clover文件夹的ACPI/patched目录下，然后在config.plist下添加以下改名补丁即可。注意，在补丁无效时，可尝试删除"),a("code",[t._v("Tgtbridge")]),t._v("值。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Comment: change _STA to XSTA in GPI0 \nFind: 5F535441\nReplace: 58535441\nTgtBridge: 47504930\n")])])]),a("h6",{attrs:{id:"dsdt修改法应用gpio补丁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dsdt修改法应用gpio补丁"}},[t._v("#")]),t._v(" DSDT修改法应用GPIO补丁")]),t._v(" "),a("p",[t._v("在MaciASL下点击Patch，选择VoodooI2C下的"),a("code",[t._v("GPIO Controller")]),t._v("和"),a("code",[t._v("SKL I2C Controller")]),t._v("补丁，Apply-Close后保存DSDT，并将新的DSDT放入Clover文件夹的ACPI/patched下即可。")]),t._v(" "),a("p",[t._v("若MaciASL无法加载出补丁源，可直接在Patch界面复制以下代码内容。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// GPI0 Controller\ninto method label _STA parent_label GPI0 replace_content begin\nReturn (0x0F)\nend;\n\n\n// Skylake controller patches for VoodooI2C\ninto_all device label I2C0 remove_entry;\ninto_all device label I2C1 remove_entry;\ninto_all device label I2C2 remove_entry;\ninto_all device label I2C3 remove_entry;\ninto_all device label I2C4 remove_entry;\ninto_all device label I2C5 remove_entry;\n\ninto scope label _SB.PCI0 insert begin\n\nDevice (I2C0)\\n\n{\\n\n    Name (LINK, "\\\\_SB.PCI0.I2C0")\\n\n    Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current\\n\n    {\\n\n        Return (GETD (SB10))\\n\n    }\\n\n\\n\n    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0\\n\n    {\\n\n        LPD0 (SB10)\\n\n    }\\n\n\\n\n    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3\\n\n    {\\n\n        LPD3 (SB10)\\n\n    }\\n\n}\\n\n\\n\\n\nDevice (I2C1)\\n\n{\\n\n    Name (LINK, "\\\\_SB.PCI0.I2C1")\\n\n    Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current\\n\n    {\\n\n        Return (GETD (SB11))\\n\n    }\\n\n\\n\n    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0\\n\n    {\\n\n        LPD0 (SB11)\\n\n    }\\n\n\\n\n    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3\\n\n    {\\n\n        LPD3 (SB11)\\n\n    }\\n\n}\\n\n\\n\\n\nDevice (I2C2)\\n\n{\\n\n    Name (LINK, "\\\\_SB.PCI0.I2C2")\\n\n    Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current\\n\n    {\\n\n        Return (GETD (SB12))\\n\n    }\\n\n\\n\n    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0\\n\n    {\\n\n        LPD0 (SB12)\\n\n    }\\n\n\\n\n    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3\\n\n    {\\n\n        LPD3 (SB12)\\n\n    }\\n\n}\\n\n\\n\\n\nDevice (I2C3)\\n\n{\\n\n    Name (LINK, "\\\\_SB.PCI0.I2C3")\\n\n    Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current\\n\n    {\\n\n        Return (GETD (SB13))\\n\n    }\\n\n\\n\n    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0\\n\n    {\\n\n        LPD0 (SB13)\\n\n    }\\n\n\\n\n    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3\\n\n    {\\n\n        LPD3 (SB13)\\n\n    }\\n\n}\\n\n\\n\nDevice (I2C4)\\n\n{\\n\n    Name (LINK, "\\\\_SB.PCI0.I2C4")\\n\n    Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current\\n\n    {\\n\n        Return (GETD (SB14))\\n\n    }\\n\n\\n\n    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0\\n\n    {\\n\n        LPD0 (SB14)\\n\n    }\\n\n\\n\n    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3\\n\n    {\\n\n        LPD3 (SB14)\\n\n    }\\n\n}\\n\n\\n\nDevice (I2C5)\\n\n{\\n\n    Name (LINK, "\\\\_SB.PCI0.I2C5")\\n\n    Method (_PSC, 0, NotSerialized)  // _PSC: Power State Current\\n\n    {\\n\n        Return (GETD (SB15))\\n\n    }\\n\n\\n\n    Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0\\n\n    {\\n\n        LPD0 (SB15)\\n\n    }\\n\n\\n\n    Method (_PS3, 0, NotSerialized)  // _PS3: Power State 3\\n\n    {\\n\n        LPD3 (SB15)\\n\n    }\\n\n}\\n\n\\n\nend;\n\ninto scope label _SB.PCI0.I2C0 replace_content begin\n\n    Name (_HID, "INT3442")  // _HID: Hardware ID\\n\n    Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision\\n\n    {\\n\n        Return (LHRV (SB10))\\n\n    }\\n\n\\n\n    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings\\n\n    {\\n\n        Return (LCRS (SMD0, SB00, SIR0))\\n\n    }\\n\n\\n\n    Method (_STA, 0, NotSerialized)  // _STA: Status\\n\n    {\\n\n        Return (LSTA (SMD0))\\n\n    }\\n\n}\\n\nend;\n\ninto scope label _SB.PCI0.I2C1 replace_content begin\n\n    Name (_HID, "INT3443")  // _HID: Hardware ID\\n\n    Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision\\n\n    {\\n\n        Return (LHRV (SB11))\\n\n    }\\n\n\\n\n    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings\\n\n    {\\n\n        Return (LCRS (SMD1, SB01, SIR1))\\n\n    }\\n\n\\n\n    Method (_STA, 0, NotSerialized)  // _STA: Status\\n\n    {\\n\n        Return (LSTA (SMD1))\\n\n    }\\n\n}\\n\nend;\n\ninto scope label _SB.PCI0.I2C2 replace_content begin\n\n    Name (_HID, "INT3444")  // _HID: Hardware ID\\n\n    Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision\\n\n    {\\n\n        Return (LHRV (SB12))\\n\n    }\\n\n\\n\n    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings\\n\n    {\\n\n        Return (LCRS (SMD2, SB02, SIR2))\\n\n    }\\n\n\\n\n    Method (_STA, 0, NotSerialized)  // _STA: Status\\n\n    {\\n\n        Return (LSTA (SMD2))\\n\n    }\\n\n}\\n\nend;\ninto scope label _SB.PCI0.I2C3 replace_content begin\n\n    Name (_HID, "INT3445")  // _HID: Hardware ID\\n\n    Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision\\n\n    {\\n\n        Return (LHRV (SB13))\\n\n    }\\n\n\\n\n    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings\\n\n    {\\n\n        Return (LCRS (SMD3, SB03, SIR3))\\n\n    }\\n\n\\n\n    Method (_STA, 0, NotSerialized)  // _STA: Status\\n\n    {\\n\n        Return (LSTA (SMD3))\\n\n    }\\n\n}\\n\nend;\n\ninto scope label _SB.PCI0.I2C4 replace_content begin\n\n    Name (_HID, "INT3446")  // _HID: Hardware ID\\n\n    Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision\\n\n    {\\n\n        Return (LHRV (SB14))\\n\n    }\\n\n\\n\n    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings\\n\n    {\\n\n        Return (LCRS (SMD4, SB04, SIR4))\\n\n    }\\n\n\\n\n    Method (_STA, 0, NotSerialized)  // _STA: Status\\n\n    {\\n\n        Return (LSTA (SMD4))\\n\n    }\\n\n}\\n\nend;\n\ninto scope label _SB.PCI0.I2C5 replace_content begin\n\n    Name (_HID, "INT3447")  // _HID: Hardware ID\\n\n    Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision\\n\n    {\\n\n        Return (LHRV (SB15))\\n\n    }\\n\n\\n\n    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings\\n\n    {\\n\n        Return (LCRS (SMD5, SB05, SIR5))\\n\n    }\\n\n\\n\n    Method (_STA, 0, NotSerialized)  // _STA: Status\\n\n    {\\n\n        Return (LSTA (SMD5))\\n\n    }\\n\n}\\n\nend;\n')])])]),a("h6",{attrs:{id:"确认驱动情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#确认驱动情况"}},[t._v("#")]),t._v(" 确认驱动情况")]),t._v(" "),a("p",[t._v("所有步骤完成后重启。若触控板未驱动或开机卡Busy timeout，则考虑更换不同的Pin list值。")]),t._v(" "),a("p",[t._v("对于本机而言，APIC Pin值为0x6D。")]),t._v(" "),a("h5",{attrs:{id:"特殊处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊处理"}},[t._v("#")]),t._v(" 特殊处理")]),t._v(" "),a("h6",{attrs:{id:"华硕笔记本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#华硕笔记本"}},[t._v("#")]),t._v(" 华硕笔记本")]),t._v(" "),a("p",[t._v("华硕笔记本的DSDT会有一个TPD0设备，该设备具有GPIO中断的模板，但并不是真实的设备。应当修补ETPD设备。")]),t._v(" "),a("h6",{attrs:{id:"三星笔记本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三星笔记本"}},[t._v("#")]),t._v(" 三星笔记本")]),t._v(" "),a("p",[t._v("使用轮询模式驱动时，需在应用补丁的同时在DSDT的以下代码中删除"),a("code",[t._v('If (_OSI ("Windows 2012")) {')]),t._v("及对应的"),a("code",[t._v("}")]),t._v("，如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('If (_OSI ("Windows 2012"))\n{\n    Scope (_SB.PCI0.I2C0.SPTP)\n    {\n    }\n\n    Scope (_GPE)\n    {\n        Method (_L04, 0, NotSerialized)  // _Lxx: Level-Triggered GPE\n        {\n            Notify (\\_SB.PCI0.I2C0.SPTP, 0x02)\n            Notify (\\_SB.PWRB, 0x02)\n        }\n    }\n\n    Scope (_SB.PCI0.I2C0.ATFU)\n    {\n        Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings\n        {\n            Name (SBFB, ResourceTemplate ()\n            {\n                I2cSerialBusV2 (0x0026, ControllerInitiated, 0x00061A80,\n                    AddressingMode7Bit, "\\\\_SB.PCI0.I2C0",\n                    0x00, ResourceConsumer, , Exclusive,\n                    )\n                I2cSerialBusV2 (0x0027, ControllerInitiated, 0x00061A80,\n                    AddressingMode7Bit, "\\\\_SB.PCI0.I2C0",\n                    0x00, ResourceConsumer, , Exclusive,\n                    )\n            })\n            Return (SBFB)\n        }\n    }\n}\n')])])]),a("p",[t._v("若仍未解决，则在DSDT中进入设备SPTP的_INI方法，搜索以下代码并将其内容更改为"),a("code",[t._v("SHPO (Local0, One)")]),t._v("，如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("If (LEqual (SDM0, Zero))\n{\n    SHPO (Local0, One)\n}\n")])])]),a("h4",{attrs:{id:"其它-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它-2"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),a("p",[t._v("对于Thinkpad T480s/L380/P52的I2C-I801设备，可用VoodooSMBus。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/VoodooSMBus/VoodooSMBus\n")])])]),a("p",[t._v("对于Synaptic的I2C HID/SMBus触控板，可用VoodooRMI。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/VoodooSMBus/VoodooRMI\n")])])]),a("p",[t._v("对于Alps T4 USB触摸板，可用AlpsT4USB。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/blankmac/AlpsT4USB\n")])])]),a("h3",{attrs:{id:"touchid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#touchid"}},[t._v("#")]),t._v(" TouchID")]),t._v(" "),a("p",[t._v("笔记本的指纹传感器一般都无法被驱动。但由于SMBIOS设置的机型具有TouchID，因此在输入密码或进行认证时，系统会等待指纹的反馈，导致键盘输入卡顿。")]),t._v(" "),a("p",[t._v("在Clover的kexts文件夹下放置"),a("code",[t._v("NoTouchID.kext")]),t._v("，重启后即可修复。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/al3xtjames/NoTouchID/releases\n")])])]),a("h2",{attrs:{id:"smbios设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smbios设置"}},[t._v("#")]),t._v(" SMBIOS设置")]),t._v(" "),a("p",[t._v("正确设置SMBIOS并注入正确的三码，可开启HWP功能，并正常登录iCloud等苹果服务。系统的SMBIOS支持列表可在安装盘的/System/Library/CoreServices/PlatformSupport.plist查看。")]),t._v(" "),a("p",[t._v("打开终端并输入以下命令以查询支持HWP的机型，在输出内容中选择台式机机型或笔记本机型。注意需挑选带HWP字样的机型，且尽可能选最新的机型，2017年及以后机型支持Sidebar功能。若机型为Unknown，可用搜索引擎搜索其代码以确认机型。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd /tmp && curl -s https://raw.githubusercontent.com/Piker-Alpha/freqVectorsEdit.sh/master/freqVectorsEdit.sh > /tmp/freqVectorsEdit.sh && chmod +x freqVectorsEdit.sh && /tmp/freqVectorsEdit.sh && sudo rm -rf /tmp/freqVectorsEdit.sh && sudo rm -rf /tmp/Mac-*.bin\n")])])]),a("p",[t._v("正常登录iCloud等苹果服务，需本机的NVRAM正常工作。部分主板需Clover的Drivers64UEFI文件夹中有"),a("code",[t._v("EmuVariableUefi-64.efi")]),t._v("才可使NVRAM正常工作。")]),t._v(" "),a("p",[t._v("打开Clover的config.plist，选择左侧SMBIOS，使用右侧上下箭头选择上面所确定的机型。也可通过GenSMBIOS生成SMBIOS。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/corpnewt/GenSMBIOS\n")])])]),a("p",[t._v("前往以下网站（需要翻墙环境），复制Clover中的Serial Number到文本框进行查询。若出现具体机型，则说明此序列号可用。若提示无效，则此序列码不可使用，需点击Generate New生成新的Serial Number。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://everymac.com/ultimate-mac-lookup/ \n")])])]),a("p",[t._v("前往以下Apple官网查询序列号。如果显示有购买日期和机型等保修信息，则此序列码不可使用，需返回Clover生成新的Serial Number。直到出现提示"),a("code",[t._v("很抱歉，这个序列号无效。请检查您的信息并再试一次")]),t._v("，则可使用。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://checkcoverage.apple.com/cn/zh\n")])])]),a("p",[t._v("点击左侧System Parameters，生成一个UUID，系统生成或随机生成都可以，并勾选Inject System ID。复制生成的UUID到SMBIOS的SmUUID里，复制SMBIOS里的Board Serial Numbe到Rt VariablesMLB里。点击获取ROM，确保下方三码正常匹配，退出并重启。")]),t._v(" "),a("p",[t._v("重启后打开Hackintool，转到工具选项卡，点击Intel图标，在工具输出中查看enableHWP的值，若为1则已成功开启HWP。同时，iCloud、iMassage、FaceTime应已可正常登录。")]),t._v(" "),a("p",[t._v("若出现问题，可打开iMessageDebug提取Mac的三码，查看MLB和ROM是否正常显示。若为Failed，则应在Clover中加上EmuVariableUefi-64.efi。若正常显示，可把结果保存，重启电脑后再打开iMessageDebug，若两次结果一致，则黑苹果已成功洗白。")]),t._v(" "),a("h2",{attrs:{id:"cpu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cpu"}},[t._v("#")]),t._v(" CPU")]),t._v(" "),a("h3",{attrs:{id:"变频"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变频"}},[t._v("#")]),t._v(" 变频")]),t._v(" "),a("h4",{attrs:{id:"通过一键脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过一键脚本"}},[t._v("#")]),t._v(" 通过一键脚本")]),t._v(" "),a("p",[t._v("在终端下输入以下命令以执行一键CPU变频脚本。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('bash -c "$(curl -fsSL https://raw.githubusercontent.com/stevezhengshiqi/one-key-cpufriend/master/one-key-cpufriend_cn.sh)"\n')])])]),a("p",[t._v("完成后把桌面的CPUFriend.kext和CPUFriendDataProvider.kext放到Clover的kexts中即可。")]),t._v(" "),a("h4",{attrs:{id:"通过kexts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过kexts"}},[t._v("#")]),t._v(" 通过kexts")]),t._v(" "),a("p",[t._v("放置CPUFriend.kext即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/CPUFriend\n")])])]),a("h3",{attrs:{id:"锁屏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#锁屏"}},[t._v("#")]),t._v(" 锁屏")]),t._v(" "),a("h4",{attrs:{id:"通过clover-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过clover-2"}},[t._v("#")]),t._v(" 通过Clover")]),t._v(" "),a("p",[t._v("打开Clover的配置文件，进入Cpu，开启HWPEnable和UseARTFrequency，并修改HWPValue为频率值，如i5 10400可设为002B2B2B，其中2B化为十进制为43，即4.3GHz，保存即可。")]),t._v(" "),a("p",[t._v("HWPValue即为CPU的IA32_HWP_REQUEST寄存器，以002B2B2B为例说明如下。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("位置")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("00")]),t._v(" "),a("td",[t._v("00代表高性能，94代表节能")])]),t._v(" "),a("tr",[a("td",[t._v("2B")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("2B")]),t._v(" "),a("td",[t._v("最高频率（十六进制）")])]),t._v(" "),a("tr",[a("td",[t._v("2B")]),t._v(" "),a("td",[t._v("最低频率（十六进制）")])])])]),t._v(" "),a("h4",{attrs:{id:"通过kexts-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过kexts-2"}},[t._v("#")]),t._v(" 通过kexts")]),t._v(" "),a("p",[t._v("下载HWPEnable.kext，修改HWPEnabler.kext/Contents/Info.plist中的HWPDeaultVal为频率值，同上。修改完成后放置到引导器即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])]),a("h2",{attrs:{id:"ssd配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssd配置"}},[t._v("#")]),t._v(" SSD配置")]),t._v(" "),a("h3",{attrs:{id:"开启trim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启trim"}},[t._v("#")]),t._v(" 开启TRIM")]),t._v(" "),a("p",[t._v("在终端输入以下命令以打开TRIM。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo trimforce enable\n")])])]),a("p",[t._v("若执行后TRIM仍未开启，则需要通过Clover打kext补丁。打开Clover的config.plist，选择Kernel and Kext Pathches-Kext Pathches，添加以下补丁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Name*: IOAHCIBlockStorage\nFind*[HEX]: 4150504C452053534400 \nReplace*[HEX]: 00000000000000000000 \n")])])]),a("h2",{attrs:{id:"休眠相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#休眠相关"}},[t._v("#")]),t._v(" 休眠相关")]),t._v(" "),a("h3",{attrs:{id:"打开"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打开"}},[t._v("#")]),t._v(" 打开")]),t._v(" "),a("p",[t._v("在终端输入以下命令，可打开Clover为黑苹果修补的休眠功能。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo pmset -a hibernatemode 29（或21）\n")])])]),a("p",[t._v("在Clover的kexts文件夹放置HibernationFixup.kext，并在启动参数中加"),a("code",[t._v("-hbfxbeta")]),t._v("，即可实现hibernatemode 3休眠，下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/HibernationFixup\n")])])]),a("h3",{attrs:{id:"关闭"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭"}},[t._v("#")]),t._v(" 关闭")]),t._v(" "),a("h4",{attrs:{id:"通过终端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过终端"}},[t._v("#")]),t._v(" 通过终端")]),t._v(" "),a("p",[t._v("在终端输入以下命令以禁止。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo pmset -a hibernatemode 0\nsudo pmset -a autopoweroff 0\nsudo pmset -a standby 0\nsudo rm /var/vm/sleepimage\nsudo mkdir /var/vm/sleepimage\n")])])]),a("p",[t._v("如果合盖后遇到偶发性的随机唤醒，通过以下命令禁用proximitywake即可。以Thinkpad为例，合盖后随机唤醒指合盖后A面的红色指示灯开始闪烁，表示设备已经睡眠，但一会以后指示灯进入常亮，而开盖屏幕不会点亮的状态。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo pmset -a proximitywake 0\n")])])]),a("h4",{attrs:{id:"通过hackintool-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过hackintool-3"}},[t._v("#")]),t._v(" 通过Hackintool")]),t._v(" "),a("p",[t._v("在Hackintool里切换到"),a("code",[t._v("电源")]),t._v("选项卡，点击最下方的齿轮按钮即可。")]),t._v(" "),a("h3",{attrs:{id:"修复休眠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修复休眠"}},[t._v("#")]),t._v(" 修复休眠")]),t._v(" "),a("p",[t._v("若出现合盖后系统死机的问题，有可能是网卡导致。")]),t._v(" "),a("p",[t._v("检查系统是否有两个有线网卡，一般为NullEthernet与有线网卡驱动共同使用造成的。若是，则删除NullEthernet后查看是否已经恢复正常。")]),t._v(" "),a("p",[t._v("若无效，可在BIOS中关闭Wake On LAN。若仍无效，可尝试进行USB定制、检查显卡驱动是否正常、注入EDID并开启Hidpi。若仍无效，可尝试在启动参数中添加igfxonln=1。若仍无效，可尝试在Clover的配置文件勾选FixRTC。")]),t._v(" "),a("p",[t._v("若无效，可尝试HibernationFixup。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/HibernationFixup\n")])])]),a("h3",{attrs:{id:"修复睡眠后摄像头失效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修复睡眠后摄像头失效"}},[t._v("#")]),t._v(" 修复睡眠后摄像头失效")]),t._v(" "),a("p",[t._v("在终端输入以下命令即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("sudo killall VDCAssistant\n")])])]),a("h2",{attrs:{id:"系统时间调整"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统时间调整"}},[t._v("#")]),t._v(" 系统时间调整")]),t._v(" "),a("p",[t._v("Windows把系统硬件时间当作本地时间，即操作系统中显示的时间跟BIOS中显示的时间一致。而Linux/Mac把硬件时间当作UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是 GMT+8，则系统中显示时间是硬件时间+8。因此两个系统的时间会出现差异。")]),t._v(" "),a("p",[t._v("在Windows以管理员身份打开命令提示符，输入下列命令并重启以修复两个系统时间不一致的问题。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1\n")])])]),a("p",[t._v("若仍不一致，则在Windows下修改时间为自动获取，在Mac下把时区改成北京并开启自动获取，重新启动即可。")]),t._v(" "),a("h2",{attrs:{id:"完成度检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完成度检查"}},[t._v("#")]),t._v(" 完成度检查")]),t._v(" "),a("p",[t._v("对于笔记本，可通过以下选项进行完成度检查。")]),t._v(" "),a("h3",{attrs:{id:"变频测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变频测试"}},[t._v("#")]),t._v(" 变频测试")]),t._v(" "),a("p",[t._v("使用CPU-S进行变频测试，二档可用，八档以上优秀。下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://bbs.pcbeta.com/viewthread-1698338-1-1.html\n")])])]),a("h3",{attrs:{id:"显示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示"}},[t._v("#")]),t._v(" 显示")]),t._v(" "),a("p",[t._v("分辨率和显存显示正常，支持DP、HDMI外接显示，风扇不持续高速旋转，原生亮度调节正常。")]),t._v(" "),a("h3",{attrs:{id:"声音"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声音"}},[t._v("#")]),t._v(" 声音")]),t._v(" "),a("p",[t._v("通过VoodooHDA能有声音则可用，通过AppleALC能有声音则优秀。")]),t._v(" "),a("h3",{attrs:{id:"网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),a("p",[t._v("以太网需位于en0，无线支持2.4G/5G双频。支持AirDrop和Handoff则优秀。")]),t._v(" "),a("h3",{attrs:{id:"usb-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usb-2"}},[t._v("#")]),t._v(" USB")]),t._v(" "),a("p",[t._v("USB接口2.0/3.0/3.1均能识别，3.0及以上接口的识别速度应有5G/s。")]),t._v(" "),a("h3",{attrs:{id:"电池-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#电池-2"}},[t._v("#")]),t._v(" 电池")]),t._v(" "),a("p",[t._v("系统偏好设置正常识别电池电量状态。")]),t._v(" "),a("h3",{attrs:{id:"睡眠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#睡眠"}},[t._v("#")]),t._v(" 睡眠")]),t._v(" "),a("p",[t._v("合盖睡眠，开盖唤醒后正常点亮不黑屏。")]),t._v(" "),a("h3",{attrs:{id:"输入设备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入设备"}},[t._v("#")]),t._v(" 输入设备")]),t._v(" "),a("p",[t._v("自带键盘和触摸板都能正常使用。")]),t._v(" "),a("h3",{attrs:{id:"固态硬盘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#固态硬盘"}},[t._v("#")]),t._v(" 固态硬盘")]),t._v(" "),a("p",[t._v("打开关于本机-系统报告，检查NVMExpress和SATA/SATA Express，均显示TRIM支持已开启则优秀。")]),t._v(" "),a("h1",{attrs:{id:"常见问题-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题-2"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),a("h2",{attrs:{id:"系统安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统安装"}},[t._v("#")]),t._v(" 系统安装")]),t._v(" "),a("p",[t._v("系统安装过程中，可通过打开安装器日志查看当前进度和所遇到的问题。")]),t._v(" "),a("h3",{attrs:{id:"安装时停在verifying-installmacosx-pkg-installesd-dmg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装时停在verifying-installmacosx-pkg-installesd-dmg"}},[t._v("#")]),t._v(" 安装时停在verifying installmacosx.pkg/installesd.dmg")]),t._v(" "),a("p",[t._v("等待一段时间后会重新启动，然后再去安装一次即可。")]),t._v(" "),a("h3",{attrs:{id:"需要蓝牙连接键盘连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要蓝牙连接键盘连接"}},[t._v("#")]),t._v(" 需要蓝牙连接键盘连接")]),t._v(" "),a("p",[t._v("主要是启动后显示鼠标和键盘的开关界面，一直循环切换。按空格即可跳过。")]),t._v(" "),a("h3",{attrs:{id:"验证安装器数据时发生错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证安装器数据时发生错误"}},[t._v("#")]),t._v(" 验证安装器数据时发生错误")]),t._v(" "),a("p",[t._v("断开网络后尝试拔掉无用外置硬盘、终端修改时间，或检查镜像是否损坏。")]),t._v(" "),a("h3",{attrs:{id:"提示安装资源已过期-退出安装器以重新启动电脑-然后再次尝试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提示安装资源已过期-退出安装器以重新启动电脑-然后再次尝试"}},[t._v("#")]),t._v(" 提示安装资源已过期，退出安装器以重新启动电脑，然后再次尝试")]),t._v(" "),a("p",[t._v("将安装U盘插入USB2.0接口，或重新制作安装盘。")]),t._v(" "),a("h3",{attrs:{id:"安装卡在第一次走条的最后两分钟很久-而后提示安装器资源损坏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装卡在第一次走条的最后两分钟很久-而后提示安装器资源损坏"}},[t._v("#")]),t._v(" 安装卡在第一次走条的最后两分钟很久，而后提示安装器资源损坏")]),t._v(" "),a("p",[t._v("内存驱动问题。")]),t._v(" "),a("h3",{attrs:{id:"安装时提示找不到安装器资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装时提示找不到安装器资源"}},[t._v("#")]),t._v(" 安装时提示找不到安装器资源")]),t._v(" "),a("p",[t._v("可能是安装器损坏。若不行，则删除EmuVariableUefi.efi。也有可能是SMBIOS设置错误。")]),t._v(" "),a("h2",{attrs:{id:"引导启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引导启动"}},[t._v("#")]),t._v(" 引导启动")]),t._v(" "),a("h3",{attrs:{id:"clover提示invalid-signature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clover提示invalid-signature"}},[t._v("#")]),t._v(" Clover提示Invalid Signature...")]),t._v(" "),a("p",[t._v("需要在BIOS关闭安全启动。")]),t._v(" "),a("h3",{attrs:{id:"clover提示x64-exception-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clover提示x64-exception-error"}},[t._v("#")]),t._v(" Clover提示X64 Exception Error")]),t._v(" "),a("p",[t._v("Drivers中的驱动太新，删除或更换为旧版即可。如将PartitionDxe更换为PartitionDxeLegacy。")]),t._v(" "),a("h3",{attrs:{id:"clover检测不到启动项或任何hfs-apfs分区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clover检测不到启动项或任何hfs-apfs分区"}},[t._v("#")]),t._v(" Clover检测不到启动项或任何HFS/APFS分区")]),t._v(" "),a("p",[t._v("可能是Clover版本太旧。")]),t._v(" "),a("h3",{attrs:{id:"内置kexts错误导致无法进入系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置kexts错误导致无法进入系统"}},[t._v("#")]),t._v(" 内置kexts错误导致无法进入系统")]),t._v(" "),a("p",[t._v("进入恢复模式后点击常用工具-终端，输入以下命令以重建缓存。也可进入单用户模式操作。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// MAC为系统盘卷标，需根据情况替换\nrm -rf [错误的kexts路径]\nrm -rf /Volumes/MAC/System/Library/Caches/com.apple.kext.caches/Startup/kernelcache\nrm -rf /Volumes/MAC/System/Library/PrelinkedKernels/prelinkedkernel\ntouch /Volumes/MAC/System/Library/Extensions/ && kextcache -u /Volumes/MAC\n")])])]),a("h3",{attrs:{id:"无法更改启动路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无法更改启动路径"}},[t._v("#")]),t._v(" 无法更改启动路径")]),t._v(" "),a("p",[t._v("在某些情况下，电脑的启动路径被硬编码为启动"),a("code",[t._v("EFI/Microsoft/Boot/bootmgfw.efi")]),t._v("而不是"),a("code",[t._v("EFI/BOOT/BOOTX64.EFI")]),t._v("，这将导致计算机启动系统的锁定。若遇到以上情况，则需将EFI分区里的EFI/Microsoft/Boot/bootmgfw.efi重命名为其他名称并将Clover的CLOVERX64.efi重命名为bootmgfw.efi，复制替换即可。注意，Windows的每次更新都会覆盖bootmgfw.efi，因此需要重新操作。")]),t._v(" "),a("h3",{attrs:{id:"抹盘时提示mediakit报告设备上的空间不足以执行请求的操作-或磁盘工具自动退出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抹盘时提示mediakit报告设备上的空间不足以执行请求的操作-或磁盘工具自动退出"}},[t._v("#")]),t._v(" 抹盘时提示MediaKit报告设备上的空间不足以执行请求的操作，或磁盘工具自动退出")]),t._v(" "),a("p",[t._v("根本原因是EFI分区小于200MB。")]),t._v(" "),a("h3",{attrs:{id:"出现welcome-to-clover-xxxx-user-settings卡住不动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现welcome-to-clover-xxxx-user-settings卡住不动"}},[t._v("#")]),t._v(" 出现Welcome to Clover xxxx user settings卡住不动")]),t._v(" "),a("p",[t._v("更换版本即可。")]),t._v(" "),a("h3",{attrs:{id:"提示this-version-of-mac-os-x-is-not-supported-on-this-platform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提示this-version-of-mac-os-x-is-not-supported-on-this-platform"}},[t._v("#")]),t._v(" 提示This version of Mac OS X is not supported on this platform")]),t._v(" "),a("p",[t._v("更改SMBIOS即可。")]),t._v(" "),a("h3",{attrs:{id:"卡在clover引导界面不动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在clover引导界面不动"}},[t._v("#")]),t._v(" 卡在Clover引导界面不动")]),t._v(" "),a("p",[t._v("在引导器目录把无用的plist删除，仅保留config.plist。")]),t._v(" "),a("h3",{attrs:{id:"运行后导致cmos重置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行后导致cmos重置"}},[t._v("#")]),t._v(" 运行后导致CMOS重置")]),t._v(" "),a("p",[t._v("对于Clover，可在配置文件中勾选Apple RTC，以防止CMOS重置与有关AppleALC的错误。")]),t._v(" "),a("h2",{attrs:{id:"啰嗦模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#啰嗦模式"}},[t._v("#")]),t._v(" 啰嗦模式")]),t._v(" "),a("h3",{attrs:{id:"提示panic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提示panic"}},[t._v("#")]),t._v(" 提示Panic")]),t._v(" "),a("p",[t._v("内核恐慌。可先尝试加-x参数后再次启动，若无效则应当根据错误提示选择以下的解决方案。")]),t._v(" "),a("h4",{attrs:{id:"appleintelcpupowermanagement-applertc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#appleintelcpupowermanagement-applertc"}},[t._v("#")]),t._v(" AppleIntelCPUPowerManagement/AppleRTC")]),t._v(" "),a("p",[t._v("Mac的CPU电源管理不起作用。")]),t._v(" "),a("p",[t._v("在Clover加入NullCPUPowerManagement.kext，或删除SLE下的AppleIntelCPUPowerManagement.kext和AppleIntelCPUPowerManagementClient.kext。")]),t._v(" "),a("h4",{attrs:{id:"appletymcedriver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#appletymcedriver"}},[t._v("#")]),t._v(" AppleTyMCEDriver")]),t._v(" "),a("p",[t._v("删除AppleTyMCEDriver.kext即可，可能在SLE或引导器目录。或SMBIOS不要设置MacPro4,1/MacPro5,1/Xserve3,1。")]),t._v(" "),a("h4",{attrs:{id:"voodoohda"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#voodoohda"}},[t._v("#")]),t._v(" VoodooHDA")]),t._v(" "),a("p",[t._v("删除VoodooHDA.kext即可，可能在SLE或引导器目录。")]),t._v(" "),a("h4",{attrs:{id:"applepolicycontrol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#applepolicycontrol"}},[t._v("#")]),t._v(" ApplePolicyControl")]),t._v(" "),a("p",[t._v("删除AppleGraphicsControl.kext中的Contents/Plugins/ApplePolicyControl.kext即可。")]),t._v(" "),a("h4",{attrs:{id:"local-apic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-apic"}},[t._v("#")]),t._v(" Local APIC")]),t._v(" "),a("p",[t._v("可能是因为Mac不支持当前CPU。可尝试使用cpus=1启动标志。")]),t._v(" "),a("h4",{attrs:{id:"unable-to-find-driver-for-this-platform-acpi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unable-to-find-driver-for-this-platform-acpi"}},[t._v("#")]),t._v(' Unable to find driver for this platform: "ACPI\\')]),t._v(" "),a("p",[t._v("在极少数情况下，这种恐慌只会在AppleACPIPlatform.kext损坏时发生。可尝试启动安全模式。")]),t._v(" "),a("h4",{attrs:{id:"thread-14-crash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#thread-14-crash"}},[t._v("#")]),t._v(" Thread 14 crash")]),t._v(" "),a("p",[t._v("可尝试将BIOS降级。")]),t._v(" "),a("h4",{attrs:{id:"vtdecoderxpcserv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vtdecoderxpcserv"}},[t._v("#")]),t._v(" VTDecoderXPCServ")]),t._v(" "),a("p",[t._v("在Clover引导界面中选择Graphics Injector，勾选Inject Intel，并将*-platform-id修改为0x3E9B0000。")]),t._v(" "),a("h3",{attrs:{id:"卡在pci-configuration-begin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在pci-configuration-begin"}},[t._v("#")]),t._v(" 卡在PCI configuration begin")]),t._v(" "),a("p",[t._v("可尝试添加启动参数npci=0x2000或npci=0x3000。两者不要同时使用。")]),t._v(" "),a("h3",{attrs:{id:"still-waiting-for-root-device并禁行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#still-waiting-for-root-device并禁行"}},[t._v("#")]),t._v(" Still waiting for root device并禁行")]),t._v(" "),a("p",[t._v("表示系统无法找到系统盘，一般分为USB引导和SATA硬盘引导两种情况。更新引导器到最新版本，若无效则按照以下内容修复。")]),t._v(" "),a("p",[t._v("如果是USB引导，代表系统无法识别到USB，可在引导器的kexts下放置USBInjectAll.kext，也可尝试在Clover的config.plist中勾选FixOwnership。也可尝试插入USB 2.0端口而非3.0端口。启动后应当通过USB端口定制解决该问题。")]),t._v(" "),a("p",[t._v("如果是SATA硬盘引导，代表Mac不支持该SATA控制器。由于Mac不能正确支持RAID、IDE和RST，因此需要在BIOS将SATA设置为AHCI模式，或使用AHCI补丁。若不起作用，则可尝试在引导器的kexts部分放置以下kext，注意不要同时使用。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# SATA-unsupported.kext\nhttps://github.com/khronokernel/Legacy-Kexts/blob/master/Injectors/Zip/SATA-unsupported.kext.zip\n\n# AHCIPortInjector.kext\nhttps://www.insanelymac.com/forum/files/file/436-ahciportinjectorkext/\n\n# AppleAHCIPort.kext（从Catalina提取，主要用于Big Sur）\nhttps://github.com/dortania/OpenCore-Install-Guide/blob/master/extra-files/CtlnaAHCIPort.kext.zip\n")])])]),a("details",[a("summary",[t._v("【进阶】OC引导")]),t._v(" "),a("p",[t._v("可尝试打开RealeasUSBOwnership、XhciPortlimit。\n")])]),a("p"),t._v(" "),a("h3",{attrs:{id:"卡在applelintellpssi2ccontroller"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在applelintellpssi2ccontroller"}},[t._v("#")]),t._v(" 卡在ApplelIntelLpssI2CController")]),t._v(" "),a("p",[t._v("在主机Windows下把SLE下的AppleInteLpssI2CController.kext删掉。若无效，再删AppleIntelLpssI2C.kext。")]),t._v(" "),a("p",[t._v("或者在Clover配置中禁用。打开Clover的config.plist，在KextsToPatch加入以下配置即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Name: com.apple.driver.AppleIntelLpssI2C\nFind: 494F4B69 74\nReplace: 494F4B69 73\nComments: Prevent Apple I2C kexts from attaching to I2C controllers, credit CoolStar\nInfoPlistPatch: true\n\nName: com.apple.driver.AppleIntelLpssI2CController\nFind: 494F4B69 74\nReplace: 494F4B69 73\nComments: Prevent Apple I2C kexts from attaching to I2C controllers, credit CoolStar\nInfoPlistPatch: true\n")])])]),a("h3",{attrs:{id:"卡在ioconsoleusers-gioscreenlockstate-3或出现busy-timeout或-igpu-hash-data-from-me-never-returned-status-1-doing-retry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在ioconsoleusers-gioscreenlockstate-3或出现busy-timeout或-igpu-hash-data-from-me-never-returned-status-1-doing-retry"}},[t._v("#")]),t._v(" 卡在IOConsoleUsers:gIOScreenLockState 3或出现Busy Timeout或[IGPU] Hash data from ME never returned, status =1, doing retry")]),t._v(" "),a("p",[t._v("此错误是由于显卡驱动问题。如果为双显卡，需屏蔽独显，驱动集显。")]),t._v(" "),a("p",[t._v("更新Whatevergreen和Lilu。若无效，则在Clover主页面中选择Options，点击Graphics injector，取消勾选"),a("code",[t._v("InjectIntel")]),t._v("并把"),a("code",[t._v("platform-id")]),t._v("修改为"),a("code",[t._v("0×12345678")]),t._v("，然后启动系统。若无效，则将LE下所有kexts备份并删除，再次启动。")]),t._v(" "),a("p",[t._v("若仍无效，则找到SLE下AppleIntel/AMD/ATI/Ge/NVD开头的所有显卡kexts，并将除核显外的其它所有kexts备份后删除。假设为Intel核显，则删除除AppleIntel开头外的其余所有显卡kexts。")]),t._v(" "),a("p",[t._v("也可尝试关闭CSM。")]),t._v(" "),a("h3",{attrs:{id:"卡在iobluetoothhcicontroller"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在iobluetoothhcicontroller"}},[t._v("#")]),t._v(" 卡在IOBluetoothHCIController")]),t._v(" "),a("p",[t._v("真正的问题可能与蓝牙无关，而是在显卡。解决方法同上。")]),t._v(" "),a("h3",{attrs:{id:"显示this-version-of-mac-os-x-is-not-supported-on-this-platform"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示this-version-of-mac-os-x-is-not-supported-on-this-platform"}},[t._v("#")]),t._v(" 显示This version of Mac OS X is not supported on this platform!")]),t._v(" "),a("p",[t._v("Clover添加启动参数"),a("code",[t._v("-no_compat_check")]),t._v("，或更换SMBIOS。若不行，则换用其他版本的系统镜像。")]),t._v(" "),a("h3",{attrs:{id:"卡在service-only-ran-for-0-seconds-pushing-respawn-out-by-10-second"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在service-only-ran-for-0-seconds-pushing-respawn-out-by-10-second"}},[t._v("#")]),t._v(" 卡在Service only ran for 0 seconds. Pushing respawn out by 10 second")]),t._v(" "),a("p",[t._v("使用SSDT而非DSDT进行独显屏蔽即可。")]),t._v(" "),a("h3",{attrs:{id:"卡在attempting-system-restart-mach-reboot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在attempting-system-restart-mach-reboot"}},[t._v("#")]),t._v(" 卡在Attempting system restart...MACH Reboot")]),t._v(" "),a("p",[t._v("在Clover的config.plist配置文件DropTables下添加以下内容。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Signature")]),t._v(" "),a("th",[t._v("Type/key")]),t._v(" "),a("th",[t._v("String")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("MATS")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DMAR")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("BGRT")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"卡在welcome-to-clover-xxxx-user-settings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在welcome-to-clover-xxxx-user-settings"}},[t._v("#")]),t._v(" 卡在Welcome to Clover xxxx user settings")]),t._v(" "),a("p",[t._v("Clover的config.plist不适合该系统，替换即可。")]),t._v(" "),a("h3",{attrs:{id:"卡在acpi-system-state-s0-s3-s4-s5-s3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在acpi-system-state-s0-s3-s4-s5-s3"}},[t._v("#")]),t._v(" 卡在ACPI:System State [S0 S3 S4 S5] (S3)")]),t._v(" "),a("p",[t._v("显卡无解，可能需要外接显卡。")]),t._v(" "),a("h3",{attrs:{id:"卡在apfs-module-start或voodoops2controller-或安装时键盘无法使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在apfs-module-start或voodoops2controller-或安装时键盘无法使用"}},[t._v("#")]),t._v(" 卡在apfs_module_start或VoodooPS2Controller，或安装时键盘无法使用")]),t._v(" "),a("p",[t._v("删除VoodooPS2Controller.kext，替换为AppleACPIPS2Nub.kext和ApplePS2Controller.kext。")]),t._v(" "),a("h3",{attrs:{id:"显示dsmos-has-arrived后重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示dsmos-has-arrived后重启"}},[t._v("#")]),t._v(" 显示DSMOS has arrived后重启")]),t._v(" "),a("p",[t._v("显卡问题，添加启动参数nv_disable=1禁用独显即可。若无效。可到SLE下删除所有显卡kexts。")]),t._v(" "),a("h3",{attrs:{id:"出现dsmos错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现dsmos错误"}},[t._v("#")]),t._v(" 出现DSMOS错误")]),t._v(" "),a("p",[t._v("FakeSMC.kext与dsmos.kext同时使用导致。删除dsmos.kext并使用FakeSMC.kext。")]),t._v(" "),a("h3",{attrs:{id:"出现atiradeonx2000-atiradeonx3000错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现atiradeonx2000-atiradeonx3000错误"}},[t._v("#")]),t._v(" 出现ATIRadeonX2000/ATIRadeonX3000错误")]),t._v(" "),a("p",[t._v("删除SLE下ATI开头的显卡驱动。")]),t._v(" "),a("h3",{attrs:{id:"出现chudkernlib错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现chudkernlib错误"}},[t._v("#")]),t._v(" 出现CHUDKernLib错误")]),t._v(" "),a("p",[t._v("Xcode用于调试核心的驱动。删除SLE下的CHUDKernLib.kext即可。")]),t._v(" "),a("h3",{attrs:{id:"出现fakesmc错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现fakesmc错误"}},[t._v("#")]),t._v(" 出现FakeSMC错误")]),t._v(" "),a("p",[t._v("替换一个不同版本的FakeSMC.kext即可。")]),t._v(" "),a("h3",{attrs:{id:"停在fakesmc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#停在fakesmc"}},[t._v("#")]),t._v(" 停在FakeSMC")]),t._v(" "),a("p",[t._v("可能是USB问题。可关闭BIOS中的USB Legacy Support。")]),t._v(" "),a("h3",{attrs:{id:"出现fakesmcradeon错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现fakesmcradeon错误"}},[t._v("#")]),t._v(" 出现FakeSMCRadeon错误")]),t._v(" "),a("p",[t._v("替换一个不同版本的FakeSMC.kext，或删除FakeSMC.kext中的Contents/PlugIns/FakeSMCRadeon.kext即可。")]),t._v(" "),a("h3",{attrs:{id:"出现elliottforcelegacyrtc错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现elliottforcelegacyrtc错误"}},[t._v("#")]),t._v(" 出现ElliottForceLegacyRTC错误")]),t._v(" "),a("p",[t._v("删除ElliottForceLegacyRTC.kext并使用LegacyAppleRTC.kext。")]),t._v(" "),a("h3",{attrs:{id:"出现applertl8169ethernet错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现applertl8169ethernet错误"}},[t._v("#")]),t._v(" 出现AppleRTL8169Ethernet错误")]),t._v(" "),a("p",[t._v("删除IONetworkingFamily.kext，或IONetworkingFamily.kext下的Contents/PlugIns/AppleRTL8169Ethernet.kext。")]),t._v(" "),a("h3",{attrs:{id:"出现applertc错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现applertc错误"}},[t._v("#")]),t._v(" 出现AppleRTC错误")]),t._v(" "),a("p",[t._v("放入NullCPUPowerManagement.kext。或删除/System/Library/Extensions/AppleIntelCPUPowerManagement.kext和AppleIntelCPUPowerManagementClient.kext。")]),t._v(" "),a("h3",{attrs:{id:"出现applefwohci错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现applefwohci错误"}},[t._v("#")]),t._v(" 出现AppleFWOHCI错误")]),t._v(" "),a("p",[t._v("删除SLE下的IOFireWireFamily.kext/Contents/PlugIns/AppleFWOHCI.kext即可。")]),t._v(" "),a("h3",{attrs:{id:"出现sleepenabler错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现sleepenabler错误"}},[t._v("#")]),t._v(" 出现SleepEnabler错误")]),t._v(" "),a("p",[t._v("删除SleepEnabler.kext。")]),t._v(" "),a("h3",{attrs:{id:"出现trying-to-change-a-collection-in-the-registry的oscollection-cpp错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现trying-to-change-a-collection-in-the-registry的oscollection-cpp错误"}},[t._v("#")]),t._v(" 出现Trying to change a collection in the registry的OScollection.cpp错误")]),t._v(" "),a("p",[t._v("在BIOS开启ACPI 2.0 Support及ACPI APIC support。")]),t._v(" "),a("h3",{attrs:{id:"出现failed-to-locate-smc-driver错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现failed-to-locate-smc-driver错误"}},[t._v("#")]),t._v(" 出现failed to locate SMC driver错误")]),t._v(" "),a("p",[t._v("更新FakeSMC.kext即可。")]),t._v(" "),a("h3",{attrs:{id:"出现applepolicycontrol错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现applepolicycontrol错误"}},[t._v("#")]),t._v(" 出现ApplePolicyControl错误")]),t._v(" "),a("p",[t._v("删除SLE下的AppleGraphicsControl.kext/Contents/PlugIns/ApplePolicyControl.kext即可。")]),t._v(" "),a("h3",{attrs:{id:"白屏且鼠标在屏幕左上角出现无限彩色风火轮"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#白屏且鼠标在屏幕左上角出现无限彩色风火轮"}},[t._v("#")]),t._v(" 白屏且鼠标在屏幕左上角出现无限彩色风火轮")]),t._v(" "),a("p",[t._v("更新FakeSMC.kext即可。")]),t._v(" "),a("h3",{attrs:{id:"出现iomemorydescriptor-cpp错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现iomemorydescriptor-cpp错误"}},[t._v("#")]),t._v(" 出现IOMemoryDescriptor.cpp错误")]),t._v(" "),a("p",[t._v("内存读取错误。")]),t._v(" "),a("h3",{attrs:{id:"发生lapic-native-c-lapic-c的local-apic-error内核错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发生lapic-native-c-lapic-c的local-apic-error内核错误"}},[t._v("#")]),t._v(" 发生lapic_native.c/lapic.c的Local APIC error内核错误")]),t._v(" "),a("p",[t._v("添加启动参数cpus=1，可能还需要busratio=16。")]),t._v(" "),a("h3",{attrs:{id:"出现can-t-perform-kext-scan-no-kext-summary错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现can-t-perform-kext-scan-no-kext-summary错误"}},[t._v("#")]),t._v(" 出现can't perform kext scan: no kext summary错误")]),t._v(" "),a("p",[t._v("尝试不使用kexts缓存。")]),t._v(" "),a("h3",{attrs:{id:"发生should-have-2-threads-but-only-found-3-for-die-0的cpu-threads-c错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发生should-have-2-threads-but-only-found-3-for-die-0的cpu-threads-c错误"}},[t._v("#")]),t._v(" 发生Should have 2 threads, but only found 3 for Die 0的cpu_threads.c错误")]),t._v(" "),a("p",[t._v("重新提取修改正确的DSDT.aml即可。")]),t._v(" "),a("h3",{attrs:{id:"发生ioapic-version-0x20-vectors-64-87错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发生ioapic-version-0x20-vectors-64-87错误"}},[t._v("#")]),t._v(" 发生IOAPIC: Version 0x20 Vectors 64:87错误")]),t._v(" "),a("p",[t._v("使用启动参数cpus=1或cpus=2，或删掉DSDT.aml即可。")]),t._v(" "),a("h3",{attrs:{id:"出现nvclockx错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现nvclockx错误"}},[t._v("#")]),t._v(" 出现NVClockX错误")]),t._v(" "),a("p",[t._v("删除NVClockX.kext或FakeSMC.kext/Contents/PlugIns/NVClockX.kext。")]),t._v(" "),a("h3",{attrs:{id:"出现appleintelgma950错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现appleintelgma950错误"}},[t._v("#")]),t._v(" 出现AppleIntelGMA950错误")]),t._v(" "),a("p",[t._v("删除SLE下的AppleIntelGMA950.kext。")]),t._v(" "),a("h3",{attrs:{id:"出现geforce7xxx错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现geforce7xxx错误"}},[t._v("#")]),t._v(" 出现GeForce7xxx错误")]),t._v(" "),a("p",[t._v("删除SLE下的eForce7xxx.kext。")]),t._v(" "),a("h3",{attrs:{id:"出现intelcpumonitor错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现intelcpumonitor错误"}},[t._v("#")]),t._v(" 出现IntelCPUMonitor错误")]),t._v(" "),a("p",[t._v("删除IntelCPUMonitor.kext或FakeSMC.kext/Contents/PlugIns/IntelCPUMonitor.kext。")]),t._v(" "),a("h3",{attrs:{id:"卡在灰屏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在灰屏"}},[t._v("#")]),t._v(" 卡在灰屏")]),t._v(" "),a("p",[t._v("灰屏表示FakeSMC未加载。")]),t._v(" "),a("h3",{attrs:{id:"出现rtc-only-single-ram-bank错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#出现rtc-only-single-ram-bank错误"}},[t._v("#")]),t._v(" 出现RTC:Only single RAM bank错误")]),t._v(" "),a("p",[t._v("在引导器放置RTCMemoryFixup.kext即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/RTCMemoryFixup\n")])])]),a("h3",{attrs:{id:"卡在voodoops2trackpad-idengtify-touchpad-command-failed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卡在voodoops2trackpad-idengtify-touchpad-command-failed"}},[t._v("#")]),t._v(" 卡在VoodooPS2Trackpad：idengtify TouchPad command failed")]),t._v(" "),a("p",[t._v("关闭RAID或改为其它模式。")]),t._v(" "),a("h2",{attrs:{id:"系统运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统运行"}},[t._v("#")]),t._v(" 系统运行")]),t._v(" "),a("h3",{attrs:{id:"内置sata硬盘显示为橙色图标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置sata硬盘显示为橙色图标"}},[t._v("#")]),t._v(" 内置SATA硬盘显示为橙色图标")]),t._v(" "),a("p",[t._v("打开Clover的config.plist，在Kernel and kext Patches选项卡中的KextsToPatch加入以下代码即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Name: AppleAHCIPort\nFind: 45787465 726E616C\nReplace: 496E7465 726E616C\nComment: Define external drivers as internal to fix yellow drive icons\n")])])]),a("h3",{attrs:{id:"rtc问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rtc问题"}},[t._v("#")]),t._v(" RTC问题")]),t._v(" "),a("p",[t._v("打开终端并输入以下命令。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cat /private/var/log/system.log | grep rtc\n")])])]),a("p",[t._v("输出示例如下。E00002C2即为需要屏蔽的内存位置。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("localhost kernel[0]: Lilu:     rtc @ rtc read failure 1 bytes from 180 E00002C2\n")])])]),a("p",[t._v("下载RTCmemoryfixup,并且在boot args中添加"),a("code",[t._v("rtcfx_exclude=10-FF")]),t._v("即可。其中10-FF为内存屏蔽区间，根据以上输出确定。")]),t._v(" "),a("h1",{attrs:{id:"附录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),a("h2",{attrs:{id:"kexts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kexts"}},[t._v("#")]),t._v(" Kexts")]),t._v(" "),a("p",[t._v("大部分kexts可在以下网站找到。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 新版kexts\nhttps://dortania.github.io/builds/\nhttps://kext.me/\nhttps://bitbucket.org/RehabMan/\nhttps://github.com/acidanthera\nhttps://www.zdynb.cn/2020/hei-ping-guo-qu-dong.html\nhttps://github.com/ClayMoreBoy/Hackintosh-Kext-Factory\nhttps://github.com/corpnewt/Lilu-and-Friends\n\n# 旧版kexts\nhttps://github.com/khronokernel/Legacy-Kexts\nhttps://onedrive.live.com/?authkey=%21APjCyRpzoAKp4xs&id=FE4038DA929BFB23%21455036&cid=FE4038DA929BFB23\nhttps://olarila.com/files/\nhttps://github.com/RehabMan/hack-tools/tree/master/kexts\n")])])]),a("p",[t._v("可在终端输入以下命令查看kext支持的体系结构。其中二进制文件路径可通过在kext上右键点击显示包内容，然后在Contents/MacOS中找到。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("lipo -archs [kext的二进制文件路径]\n")])])]),a("h3",{attrs:{id:"lilu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lilu"}},[t._v("#")]),t._v(" Lilu")]),t._v(" "),a("p",[t._v("Lilu为其它kext提供接口支持，许多kext需要依赖Lilu才能运行。需要10.8或更高版本的系统，下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/Lilu/\n")])])]),a("h3",{attrs:{id:"fakesmc包与virtualsmc包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fakesmc包与virtualsmc包"}},[t._v("#")]),t._v(" FakeSMC包与VirtualSMC包")]),t._v(" "),a("p",[t._v("下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# FakeSMC包\n## 主体与传感器驱动\nhttps://bitbucket.org/RehabMan/os-x-fakesmc-kozlek/downloads/\nhttps://github.com/CloverHackyColor/FakeSMC3_with_plugins\n\n## 主体（32位）\nhttps://github.com/khronokernel/Legacy-Kexts/blob/master/32Bit-only/Zip/FakeSMC-32.kext.zip?raw=true\n\n## ACPIBetteryManager，电池驱动\nhttps://bitbucket.org/RehabMan/os-x-acpi-battery-driver/downloads/\n\n# VirtualSMC\n## 主体、传感器与电池驱动\nhttps://github.com/acidanthera/VirtualSMC\n")])])]),a("p",[t._v("两者作用相同，均用于向macOS提供SMC信息，模拟白苹果启动环境。FakeSMC早于VirtualSMC，且已不再更新，因此推荐使用VirtualSMC替换FakeSMC。注意，使用VirtualSMC时Lilu需为最新版本，否则将无法进入系统。VirtualSMC包作用分别如下。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Kext名称")]),t._v(" "),a("th",[t._v("作用")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("VirtualSMC")]),t._v(" "),a("td",[t._v("替换FakeSMC.kext，需在Clover的driver64UEFI中删除SMCHelper-64.efi并复制VirtualSMC.efi到此目录")])]),t._v(" "),a("tr",[a("td",[t._v("SMCProcessor/SMCSuperIO/SMCLightSensor")]),t._v(" "),a("td",[t._v("传感器驱动，用于替换CPUSensors/GPUSensors/LPCSensors/ACPISensor")])]),t._v(" "),a("tr",[a("td",[t._v("SMCBatteryManager")]),t._v(" "),a("td",[t._v("电源管理驱动，用于替换ACPIBatteryManager")])])])]),t._v(" "),a("p",[t._v("VirtualSMC需要10.8或更高版本的系统，旧版本应当使用FakeSMC。")]),t._v(" "),a("h3",{attrs:{id:"whatevergreen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#whatevergreen"}},[t._v("#")]),t._v(" WhateverGreen")]),t._v(" "),a("p",[t._v("修复显卡必备驱动。WhateverGreen中已包含以下kexts。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("IntelGraphicsFixup\nNvidiaGraphicsFixup\nCoreDisplayFixup\nShiki\nIntelGraphicsDVMTFixup\nAzulPatcher4600\nAppleBacklightFixup\nFakePCIID\nFakePCIID_Intel_HD_Graphics\nFakePCIID_Intel_HDMI_Audio\n")])])]),a("p",[t._v("注意需要关闭Clover的以下选项。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# DSDT\nAddHDMI\nFixDisplay\nFixIntelGfx\nAddIMEI\nFixHDA\nAddPNLF\n\n# 显卡\nUseIntelHDMI\nSetIntelBacklight\nSetIntelMaxBacklight\n\n# 设备\nDevices-Inject\n\n# FakeID\nIntelGFX\nIMEI\nig-platform-id\n")])])]),a("p",[t._v("取消以下启动参数。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-disablegfxfirmware\n-igfxnohdmi\n")])])]),a("p",[t._v("下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/WhateverGreen/releases\n")])])]),a("details",[a("summary",[t._v("【过时】IntelGraphicsDVMTFixup")]),t._v(" "),a("p",[t._v("macOS的启动需要DVMT大于"),a("code",[t._v("32MB")]),t._v("，否则将导致内核崩溃。DVMT的大小可在BIOS设置，若BIOS无相应选项，可通过grub中的"),a("code",[t._v("setup_var")]),t._v("修改。或者使用本kext，但仅用于macOS 10.13及以下，在macOS Mojave下不适用。")]),t._v(" "),a("p",[t._v("在Majove及更新系统，需在Clover的config.plist应用以下补丁以修复。或者使用Hackintool，应用补丁时勾选"),a("code",[t._v("DVMT 32MB 预分配")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<key>Properties</key>\n<dict>\n    <key>PciRoot(0x0)/Pci(0x2,0x0)</key>\n        <dict>\n            <key>framebuffer-fbmem</key>\n            <data>\n            AACQAA==\n            </data>\n            <key>framebuffer-patch-enable</key>\n            <data>\n            AQAAAA==\n            </data>\n            <key>framebuffer-stolenmem</key>\n            <data>\n            AAAwAQ==\n            </data>\n        </dict>\n</dict>\n")])])])]),t._v(" "),a("h3",{attrs:{id:"voodooi2c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#voodooi2c"}},[t._v("#")]),t._v(" VoodooI2C")]),t._v(" "),a("p",[t._v("VoodooI2C具有记忆性，由中断模式切换到轮询模式、在中断模式下修改有关触控板的DSDT等均不生效，需将VoodooI2C的相关驱动在Clover的kexts下删除再重新复制才能恢复初始设置。下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/alexandred/VoodooI2C/releases\n")])])]),a("h3",{attrs:{id:"nullcpupowermanagement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nullcpupowermanagement"}},[t._v("#")]),t._v(" NullCPUPowerManagement")]),t._v(" "),a("p",[t._v("AMD CPU无法使用英特尔的电源管理，因此我们需要取消它。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/Goldfish64/SerialMouse/releases\n")])])]),a("h2",{attrs:{id:"uefi驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uefi驱动"}},[t._v("#")]),t._v(" UEFI驱动")]),t._v(" "),a("h3",{attrs:{id:"emuvariableuefi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emuvariableuefi"}},[t._v("#")]),t._v(" EmuVariableUefi")]),t._v(" "),a("p",[t._v("用于模拟NVRAM，从而将黑苹果洗白。若主板有原生NVARM，则无需放置。")]),t._v(" "),a("h3",{attrs:{id:"apfsdriverloader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apfsdriverloader"}},[t._v("#")]),t._v(" ApfsDriverLoader")]),t._v(" "),a("p",[t._v("APFS驱动。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/ApfsSupportPkg\n")])])]),a("h3",{attrs:{id:"hfsplus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hfsplus"}},[t._v("#")]),t._v(" HFSPlus")]),t._v(" "),a("p",[t._v("HFS驱动。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/STLVNUB/CloverGrower/tree/master/Files/HFSPlus/x64\nhttps://github.com/JrCs/CloverGrowerPro/tree/master/Files/HFSPlus/X64\n")])])]),a("h3",{attrs:{id:"crscreenshotdxe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#crscreenshotdxe"}},[t._v("#")]),t._v(" CrScreenshotDxe")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/LongSoft/CrScreenshotDxe\n")])])]),a("h2",{attrs:{id:"硬件驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#硬件驱动"}},[t._v("#")]),t._v(" 硬件驱动")]),t._v(" "),a("h3",{attrs:{id:"emu-usb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#emu-usb"}},[t._v("#")]),t._v(" EMU-USB")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/Wouter1/EMU-driver\n")])])]),a("h2",{attrs:{id:"黑苹果库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#黑苹果库"}},[t._v("#")]),t._v(" 黑苹果库")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 网站\nhttps://images.daliansky.net/d/YmBXVA8q/blog\n\n# FTP\n主机名 / repo1.macintoshgarden.org\n用户名 / macgarden\n密码 / publicdl\n")])])]),a("h2",{attrs:{id:"oc-little包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oc-little包"}},[t._v("#")]),t._v(" OC-little包")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/daliansky/OC-little\n\n# 另附P-little包（较旧）\nhttps://github.com/daliansky/P-little\n")])])]),a("h2",{attrs:{id:"工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[t._v("#")]),t._v(" 工具")]),t._v(" "),a("h3",{attrs:{id:"hackintool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hackintool"}},[t._v("#")]),t._v(" Hackintool")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://headsoft.com.au/download/mac/Hackintool.zip\nhttps://github.com/headkaze/Hackintool\n")])])]),a("h3",{attrs:{id:"kext-updater"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kext-updater"}},[t._v("#")]),t._v(" Kext Updater")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://bitbucket.org/profdrluigi/kextupdater/downloads/\n")])])]),a("h3",{attrs:{id:"maciasl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maciasl"}},[t._v("#")]),t._v(" MaciASL")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# RehabMan版\nhttps://bitbucket.org/RehabMan/os-x-maciasl-patchmatic/downloads/\n\n# 最新版\nhttps://github.com/acidanthera/MaciASL/releases\n")])])]),a("h3",{attrs:{id:"ioregistryexplorer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ioregistryexplorer"}},[t._v("#")]),t._v(" IORegistryExplorer")]),t._v(" "),a("p",[t._v("IORegistryExplorer可用于查看硬件情况。2.1版下载链接如下。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/vulgo/IORegistryExplorer\nhttps://github.com/khronokernel/IORegistryClone\n")])])]),a("h4",{attrs:{id:"判断设备存在情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断设备存在情况"}},[t._v("#")]),t._v(" 判断设备存在情况")]),t._v(" "),a("p",[t._v("将左上角的模式选为"),a("code",[t._v("IODeviceTree")]),t._v("，查看左侧设备树。若显示类似为"),a("code",[t._v("P0P5@1C,1")]),t._v("，则表示存在该设备。若显示类似为"),a("code",[t._v("P0P5@1c0001")]),t._v("，且点进去后只有acpi-device与acpi-path两项，则表示不存在该设备。")]),t._v(" "),a("h4",{attrs:{id:"判断设备驱动情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断设备驱动情况"}},[t._v("#")]),t._v(" 判断设备驱动情况")]),t._v(" "),a("p",[t._v("将左上角的模式选为IOService，查看左侧设备树。")]),t._v(" "),a("p",[t._v("若显示类似为"),a("code",[t._v("P0P4@1C")]),t._v("且可展开，展开后可查看相应kexts，则该设备已驱动。部分设备可能无法展开，但也已经被驱动，如Memory Controller Hub、SMBus Controller。")]),t._v(" "),a("p",[t._v("若显示类似为"),a("code",[t._v("pci8086,266a@1F,3")]),t._v("，则该设备未驱动。")]),t._v(" "),a("h4",{attrs:{id:"查看cpu变频档次"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看cpu变频档次"}},[t._v("#")]),t._v(" 查看CPU变频档次")]),t._v(" "),a("p",[t._v("搜索ACPI_SMC_PlatformPlugin，查看其中的PerformanceStateArray即可。")]),t._v(" "),a("h3",{attrs:{id:"gfxutil"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gfxutil"}},[t._v("#")]),t._v(" gfxutil")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/gfxutil\n")])])]),a("h3",{attrs:{id:"imessagedebug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#imessagedebug"}},[t._v("#")]),t._v(" iMessageDebug")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/YCSuperM/ImessageDebug\n")])])]),a("h3",{attrs:{id:"clover-configurator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clover-configurator"}},[t._v("#")]),t._v(" Clover Configurator")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://mackie100projects.altervista.org/download-clover-configurator/\n")])])]),a("h3",{attrs:{id:"kext-utility"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kext-utility"}},[t._v("#")]),t._v(" Kext Utility")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://en.freedownloadmanager.org/Mac-OS/Kext-Utility-FREE.html\n")])])]),a("h3",{attrs:{id:"vdadecoderchecker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vdadecoderchecker"}},[t._v("#")]),t._v(" VDADecoderChecker")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/cylonbrain/VDADecoderCheck/releases\n")])])]),a("h3",{attrs:{id:"_7z"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7z"}},[t._v("#")]),t._v(" 7z")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://www.7-zip.org/download.html\n")])])]),a("h3",{attrs:{id:"aw-edid-editor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aw-edid-editor"}},[t._v("#")]),t._v(" AW EDID Editor")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.analogway.com/apac/products/software-tools/aw-edid-editor/\n")])])]),a("h3",{attrs:{id:"hwmonitorsmc2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hwmonitorsmc2"}},[t._v("#")]),t._v(" HWMonitorSMC2")]),t._v(" "),a("p",[t._v("监控硬件运行状况。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/CloverHackyColor/HWMonitorSMC2\n")])])]),a("h3",{attrs:{id:"continuity-activation-tool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#continuity-activation-tool"}},[t._v("#")]),t._v(" Continuity-Activation-Tool")]),t._v(" "),a("p",[t._v("只能用在Broadcom无线网卡，用于启用接力功能。支持10.10-10.13。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/dokterdok/Continuity-Activation-Tool\n")])])]),a("h2",{attrs:{id:"一键安装系统工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一键安装系统工具"}},[t._v("#")]),t._v(" 一键安装系统工具")]),t._v(" "),a("h3",{attrs:{id:"ccmacos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ccmacos"}},[t._v("#")]),t._v(" Ccmacos")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://www.ccmacos.cn/#\n")])])]),a("h1",{attrs:{id:"参考教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考教程"}},[t._v("#")]),t._v(" 参考教程")]),t._v(" "),a("h2",{attrs:{id:"windows下vmware-workstations-pro15-5-0安装dmg镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows下vmware-workstations-pro15-5-0安装dmg镜像"}},[t._v("#")]),t._v(" Windows下VMware Workstations Pro15.5.0安装dmg镜像")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://hestyle.blog.csdn.net/article/details/104672651\n")])])]),a("h2",{attrs:{id:"黑苹果必备-intel核显platform-id整理及smbios速查表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#黑苹果必备-intel核显platform-id整理及smbios速查表"}},[t._v("#")]),t._v(" 黑苹果必备：Intel核显platform ID整理及smbios速查表")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://blog.daliansky.net/Intel-core-display-platformID-finishing.html\n")])])]),a("h2",{attrs:{id:"fix-btfirmwareuploader-in-macos-high-sierra"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fix-btfirmwareuploader-in-macos-high-sierra"}},[t._v("#")]),t._v(" FIX BTFIRMWAREUPLOADER IN MACOS HIGH SIERRA")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://osxlatitude.com/forums/topic/10127-updated-nov-2017-fix-btfirmwareuploader-in-macos-high-sierra/\n")])])]),a("h2",{attrs:{id:"alexandred-voodooi2c-gitter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alexandred-voodooi2c-gitter"}},[t._v("#")]),t._v(" alexandred/VoodooI2C-Gitter")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://gitter.im/alexandred/VoodooI2C/archives/2019/01/14\nhttps://gitter.im/alexandred/VoodooI2C/archives/2018/08/30（搜索@Piero512）\n")])])]),a("h2",{attrs:{id:"hackintool深度教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hackintool深度教程"}},[t._v("#")]),t._v(" Hackintool深度教程")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://blog.daliansky.net/Intel-FB-Patcher-tutorial-and-insertion-pose.html\n")])])]),a("h2",{attrs:{id:"修改dsdt实现电量显示教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改dsdt实现电量显示教程"}},[t._v("#")]),t._v(" 修改DSDT实现电量显示教程")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.geekcj.com/333.html\nhttps://blog.gzxiaobai.cn/2020/05/16/%E4%B8%BA%E5%B0%8F%E7%99%BD%E8%AE%BE%E8%AE%A1%E7%9A%84%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B%EF%BC%88DSDT%EF%BC%89/\n")])])]),a("h2",{attrs:{id:"voodooi2c驱动教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#voodooi2c驱动教程"}},[t._v("#")]),t._v(" VoodooI2C驱动教程")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.penghubingzhou.cn/2019/01/06/VoodooI2C%20DSDT%20Edit/\nhttps://www.penghubingzhou.cn/2019/07/24/VoodooI2C%20DSDT%20Edit%20FAQ/\nhttps://voodooi2c.github.io/#GPIO%20Pinning/GPIO%20Pinning\n")])])]),a("h2",{attrs:{id:"英特尔®核芯显卡常见问答-whatevergreen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#英特尔®核芯显卡常见问答-whatevergreen"}},[t._v("#")]),t._v(" 英特尔®核芯显卡常见问答（WhateverGreen）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/WhateverGreen/blob/master/Manual/FAQ.IntelHD.cn.md\n")])])]),a("h2",{attrs:{id:"黑苹果精华必读-新手常见-五国-v图-错误解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#黑苹果精华必读-新手常见-五国-v图-错误解决"}},[t._v("#")]),t._v(" 黑苹果精华必读：新手常见(五国)(-v图)错误解决")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.xmyy.com/article-254928.html\n")])])]),a("h2",{attrs:{id:"disabling-discrete-graphics-in-dual-gpu-laptops"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#disabling-discrete-graphics-in-dual-gpu-laptops"}},[t._v("#")]),t._v(" Disabling discrete graphics in dual-GPU laptops")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/\n")])])]),a("h2",{attrs:{id:"r-hackintosh-vanilla-desktop-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#r-hackintosh-vanilla-desktop-guide"}},[t._v("#")]),t._v(" /r/Hackintosh Vanilla Desktop Guide")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://hackintosh.gitbook.io/-r-hackintosh-vanilla-desktop-guide/\n")])])]),a("h2",{attrs:{id:"ssdt-gpu-graphics-card-injection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssdt-gpu-graphics-card-injection"}},[t._v("#")]),t._v(" SSDT GPU (Graphics Card) Injection")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.tonymacx86.com/threads/ssdt-gpu-graphics-card-injection.183354/\n")])])]),a("h2",{attrs:{id:"stevezhengshiqi-one-key-cpufriend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stevezhengshiqi-one-key-cpufriend"}},[t._v("#")]),t._v(" stevezhengshiqi/one-key-cpufriend")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/stevezhengshiqi/one-key-cpufriend\n")])])]),a("h2",{attrs:{id:"ar9565-mac黑苹果bluetooth蓝牙驱动教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ar9565-mac黑苹果bluetooth蓝牙驱动教程"}},[t._v("#")]),t._v(" AR9565 MAC黑苹果Bluetooth蓝牙驱动教程")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.longzc.cn/index.php/archives/308\n")])])]),a("h2",{attrs:{id:"ssdt-rmne-aml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssdt-rmne-aml"}},[t._v("#")]),t._v(" SSDT-RMNE.aml")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/RehabMan/OS-X-Null-Ethernet/blob/master/ssdt-rmne.aml\n")])])]),a("h2",{attrs:{id:"ssdt-pnlf-aml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssdt-pnlf-aml"}},[t._v("#")]),t._v(" SSDT-PNLF.aml")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://bitbucket.org/RehabMan/applebacklightfixup/downloads/\n")])])]),a("h2",{attrs:{id:"使用hidpi解决睡眠唤醒黑屏、花屏及连接外部显示器的正确姿势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用hidpi解决睡眠唤醒黑屏、花屏及连接外部显示器的正确姿势"}},[t._v("#")]),t._v(" 使用HIDPI解决睡眠唤醒黑屏、花屏及连接外部显示器的正确姿势")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://blog.daliansky.net/Use-HIDPI-to-solve-sleep-wake-up-black-screen,-Huaping-and-connect-the-external-monitor-the-correct-posture.html\n")])])]),a("h2",{attrs:{id:"小米笔记本pro安装10-13随手记及efi分享"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小米笔记本pro安装10-13随手记及efi分享"}},[t._v("#")]),t._v(" 小米笔记本Pro安装10.13随手记及EFI分享")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://blog.daliansky.net/XiaoMiPro-notebook-Installation-10.13-readily-remember-and-share-EFI.html\n")])])]),a("h2",{attrs:{id:"notebook-compatibility-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notebook-compatibility-list"}},[t._v("#")]),t._v(" Notebook Compatibility List")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://gpu-passthrough.com/\n")])])]),a("h2",{attrs:{id:"hackintosh-won-t-boot-how-to-use-verbose-mode-to-fix-it"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hackintosh-won-t-boot-how-to-use-verbose-mode-to-fix-it"}},[t._v("#")]),t._v(" Hackintosh won't boot? How to use verbose mode to fix it")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://www.macbreaker.com/2015/01/read-verbose-mode-fix-hackintosh-errors.html\n")])])]),a("h2",{attrs:{id:"新手常见-五国-v图-错误解决-原版-破解kernel-补丁kext下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新手常见-五国-v图-错误解决-原版-破解kernel-补丁kext下载"}},[t._v("#")]),t._v(" 新手常见(五国)(-v图)错误解决(原版,破解kernel,补丁kext下载)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://blog.csdn.net/ashuai81/article/details/8032952\n")])])]),a("h2",{attrs:{id:"dw1820a-bcm94350zae-bcm94356zepa50dx插入的正确姿势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dw1820a-bcm94350zae-bcm94356zepa50dx插入的正确姿势"}},[t._v("#")]),t._v(" DW1820A/BCM94350ZAE/BCM94356ZEPA50DX插入的正确姿势")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://blog.daliansky.net/DW1820A_BCM94350ZAE-driver-inserts-the-correct-posture.html\n")])])]),a("h2",{attrs:{id:"broadcom-bcm94352z-dw1560驱动新姿势-新方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#broadcom-bcm94352z-dw1560驱动新姿势-新方法"}},[t._v("#")]),t._v(" Broadcom BCM94352z/DW1560驱动新姿势[新方法]")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://blog.daliansky.net/Broadcom-BCM94352z-DW1560-drive-new-posture.html\n")])])]),a("h2",{attrs:{id:"openintelwireless"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#openintelwireless"}},[t._v("#")]),t._v(" OpenIntelWireless")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://openintelwireless.github.io/itlwm/Installation.html\n")])])]),a("h2",{attrs:{id:"voodooi2c-voodooi2c-patches"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#voodooi2c-voodooi2c-patches"}},[t._v("#")]),t._v(" VoodooI2C/VoodooI2C-Patches")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/VoodooI2C/VoodooI2C-Patches\n")])])]),a("h2",{attrs:{id:"opencore-0-6-3-9a6d202-penryn-x64-exception"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#opencore-0-6-3-9a6d202-penryn-x64-exception"}},[t._v("#")]),t._v(" OpenCore 0.6.3 [9a6d202] / Penryn X64 Exception")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/bugtracker/issues/1247\n")])])]),a("h2",{attrs:{id:"opencorepkg-kexts-md-at-master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#opencorepkg-kexts-md-at-master"}},[t._v("#")]),t._v(" OpenCorePkg/Kexts.md at master")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://github.com/acidanthera/OpenCorePkg/blob/master/Docs/Kexts.md\n")])])]),a("h2",{attrs:{id:"启用cpu-hwp-锁定cpu最高频率-让cpu展示其真正实力吧-oc可用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启用cpu-hwp-锁定cpu最高频率-让cpu展示其真正实力吧-oc可用"}},[t._v("#")]),t._v(" 启用CPU-HWP, 锁定CPU最高频率, 让CPU展示其真正实力吧! (OC可用)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://zhuanlan.zhihu.com/p/49183461\n")])])]),a("h2",{attrs:{id:"skylake-hwp-enable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skylake-hwp-enable"}},[t._v("#")]),t._v(" Skylake HWP Enable")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.tonymacx86.com/threads/skylake-hwp-enable.214915/\n")])])]),a("h2",{attrs:{id:"first-time-hackintosh-stuck-at-grey-screen-after-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#first-time-hackintosh-stuck-at-grey-screen-after-installation"}},[t._v("#")]),t._v(" First time Hackintosh Stuck at Grey Screen after installation")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.tonymacx86.com/threads/first-time-hackintosh-stuck-at-grey-screen-after-installation.186100/\n")])])]),a("h2",{attrs:{id:"clover引导安装黑苹果卡各种问题的解决方法-内容较多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clover引导安装黑苹果卡各种问题的解决方法-内容较多"}},[t._v("#")]),t._v(" Clover引导安装黑苹果卡各种问题的解决方法(内容较多)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://vlambda.com/wz_7ilcImwxVbO.html\n")])])]),a("h2",{attrs:{id:"el-capitan-install-demanding-bluetooth-mouse-keyboard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#el-capitan-install-demanding-bluetooth-mouse-keyboard"}},[t._v("#")]),t._v(" El Capitan Install Demanding Bluetooth Mouse/Keyboard")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.reddit.com/r/hackintosh/comments/3v81hb/el_capitan_install_demanding_bluetooth/\n")])])]),a("h2",{attrs:{id:"clover-折腾了半天终于找到唤醒重启问题的原因了。。。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clover-折腾了半天终于找到唤醒重启问题的原因了。。。"}},[t._v("#")]),t._v(" [CLOVER] 折腾了半天终于找到唤醒重启问题的原因了。。。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("http://bbs.pcbeta.com/viewthread-1835747-1-1.html\n")])])]),a("h2",{attrs:{id:"list-of-hackintosh-usb-port-limit-patches-10-15-updated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-of-hackintosh-usb-port-limit-patches-10-15-updated"}},[t._v("#")]),t._v(" List of Hackintosh USB Port Limit Patches (10.15 Updated)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://hackintosher.com/forums/thread/list-of-hackintosh-usb-port-limit-patches-10-15-updated.467/\n")])])]),a("h2",{attrs:{id:"wireless-buyers-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wireless-buyers-guide"}},[t._v("#")]),t._v(" Wireless Buyers Guide")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://dortania.github.io/Wireless-Buyers-Guide/\n")])])]),a("h2",{attrs:{id:"hackintosh-internet-install-gitbook"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hackintosh-internet-install-gitbook"}},[t._v("#")]),t._v(" Hackintosh Internet Install Gitbook")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://midi1996.github.io/hackintosh-internet-install-gitbook/\n")])])]),a("h2",{attrs:{id:"guide-booting-the-os-x-installer-on-laptops-with-clover"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#guide-booting-the-os-x-installer-on-laptops-with-clover"}},[t._v("#")]),t._v(" [Guide] Booting the OS X installer on LAPTOPS with Clover")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.tonymacx86.com/threads/guide-booting-the-os-x-installer-on-laptops-with-clover.148093/\n")])])]),a("h2",{attrs:{id:"fix-incorrect-time-in-windows-osx-dual-boot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fix-incorrect-time-in-windows-osx-dual-boot"}},[t._v("#")]),t._v(" Fix incorrect time in Windows + OSX dual boot")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.tonymacx86.com/threads/fix-incorrect-time-in-windows-osx-dual-boot.133719/\n")])])]),a("h2",{attrs:{id:"olarila"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#olarila"}},[t._v("#")]),t._v(" Olarila")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://www.olarila.com/topic/9860-guide-forcing-rgb-mode-to-fix-problems-on-external-monitors-in-macos/\nhttps://www.olarila.com/topic/4997-usb-raise-remove-limit-port-patch-el-capitan-sierra-high-sierra-mojave-catalina/\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);